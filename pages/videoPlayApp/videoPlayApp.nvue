<template>
	<div class="page" :style="{ height: height }" >

		<view class="close-top" style="display: flex;justify-content:flex-start;align-items: center;">
			<image src="../../static/images/icon/back.png" mode="" style="width: 70rpx;height: 65rpx;position: fixed;left: 50rpx;top:70rpx;z-index: 99999;"
			 @click="navBack()"></image>
		</view>

		<swiper class="swiper" :vertical="true" @change="changeCurrent" @animationfinish="animationFinish" :current="index" >
			<swiper-item v-for="(item, idx) in videoList" :key="idx" class="swiper-item"  @click="clickVideo()">
				<!-- 视频渲染数预加载数影响性能 -->
				<div v-if="Math.abs(index-idx)<=1" class="video-box">
					<block v-if="item.src">
						<chunlei-video class="video" :src="item.src" :height="height" :width="width" :play="item.flag" v-if="Math.abs(index-idx)<=1"
						 :gDuration="item.duration" :initialTime="item.initialTime" @pause="pauseVideo" :objectFit="item.objectFit"
						 @playEnd="playEnd" >
						</chunlei-video>

						<cover-view class="cover-view-left">
							<cover-view class="left-view">
								<!-- #ifdef APP-PLUS-NVUE -->
								<text class="left-text">{{item.content}}</text>
								<!-- #endif -->
								<!-- #ifndef APP-PLUS-NVUE -->
								<cover-view class="left-text">{{item.content}}</cover-view>
								<!-- #endif -->
							</cover-view>
						</cover-view>
						<cover-view class="cover-view-right">
							<cover-image :src="item.check?'../../static/image/aixinRed.png':'../../static/image/aixin.png'" class="img"
							 @click.stop="tapLove" style="margin-left:7rpx;"></cover-image>
							<!-- #ifdef APP-PLUS-NVUE -->
							<text class="right-text">{{item.like}}</text>
							<!-- #endif -->
							<!-- #ifndef APP-PLUS-NVUE -->
							<cover-view class="right-text">{{item.like}}</cover-view>
							<!-- #endif -->
							
							<cover-image src="../../static/image/fenxiang11.png" class="img" @click.stop="tapShare"></cover-image>
							<!-- #ifdef APP-PLUS-NVUE -->
							<text class="right-text">分享</text>
							<!-- #endif -->
							<!-- #ifndef APP-PLUS-NVUE -->
							<cover-view class="right-text">分享</cover-view>
							<!-- #endif -->

						</cover-view>
					</block>
				</div>

			</swiper-item>
		</swiper>
	</div>
</template>
<script>
	import apiJs from '@/common/api.js'
	import commonJs from '@/common/common.js'
	import chunleiVideo from './components/chunlei-video/chunlei-video.nvue'
	export default {
		components: {
			chunleiVideo
		},
		data() {
			return {
				homeApi: apiJs,
				sysheight: 0,
				playCount:1, //剩余多少视频加载视频列表
				videoList: [],
				height: '687px',
				index: 0,
				width: '',
				oldIndex: 0,
				videoId:'',//视频id
				page:1,
			}
		},
		created() {
			//#ifdef APP-PLUS
			plus.screen.lockOrientation("portrait-primary")
			//隐藏subnvue
			uni.getSubNVueById('comment').hide()
			uni.getSubNVueById('input-box').hide()
			//#endif
			this.sysheight = uni.getSystemInfoSync().windowHeight
			this.height = `${this.sysheight}px`
			let width = uni.getSystemInfoSync().windowWidth
			this.width = `${width}px`
			// this.videoList.length = 300
			this.videoList.fill({
				src: ''
			})
		},
		// 接收传处过来的视频id
		onLoad(option) {
			// console.log(this.videoList)
			console.log(option)
			this.videoId = option.id
			this.page =Number(option.page) 
			// console.log(this.videoId)
			
		},
		async mounted() {
			//设置id 通过id轮到相应位置
			let id = "http://img.kaiyanapp.com/255365dbfc2622930eb0cdb33e43abf0.jpeg?imageMogr2/quality/60/format/jpg"
			await this.pushVideoList()

			this.index = this.videoList.reduce((total, item) => {
				if (id == '' || id == item.id) {
					id = ''
				} else {
					total++
				}
				return total
			}, 0)
			if (!this.index) {
				this.$nextTick(() => {
					this.videoPlay(this.index)
				})
			}
		},
		onHide() {
			for (let item of this.videoList) {
				item.flag = false
			}
		},
		methods: {
			// 返回
			navBack() {
				uni.navigateBack({
					delta: 1
				})
			},
			animationFinish(e) {
				//#ifdef APP-PLUS
				this.changeCurrent(e)
				//#endif
			},
			changeCurrent(e) {
				this.index = e.detail.current;

				this.$nextTick(() => {

					for (let item of this.videoList) {
						item.flag = false
					}
					this.videoList[this.index].flag = true
				})
			},
			pushVideoList() {
				this.homeApi.getVideoList({
					page:this.page++
				}).then(res => {
					// console.log(res)
					// console.log(res.backlist)
					let videoGroup = []
					for (let item of res.backlist) {
						videoGroup.push({
							src: item.file,
							content: item.title,
							flag: false,
							check: false,
							like: '1w',
							comment: '1045',
							id:item.id,
						})
					}
					let len = this.videoList.filter(item => item.src).length
					
					for (let i = len; i < len + videoGroup.length; i++) {
						this.$set(this.videoList, i, videoGroup[i - len])
					}

					var vid = this.videoId
					let news1 = this.videoList.filter(obj=>obj.id == vid)
					// console.log(news1)
					let news2 = this.videoList.filter(obj=>obj.id != vid)
					// console.log(news2)
					let arr3 = [...news1,...news2]
					// console.log(arr3)
					this.videoList = arr3
					
					arr3.forEach(item=>{
						// console.log(vid)
						// console.log(item.id)
						if(item.id == vid ){
							this.videoList[this.index].flag = true
						}
					})
					
				});
			},
			tapLove() {
				this.videoList[this.index].check = !this.videoList[this.index].check
				this.videoList = [...this.videoList]
			},
			tapShare() {
				uni.showToast({
					icon: 'none',
					// title: `分享索引为${this.index}的视频`,
					title: '等待程序员小宇宙爆发吧'
				})
			},
			videoPlay(index) {
				let promise = new Promise((resolve, reject) => {
					resolve()
				})
				promise.then(res => {
					this.$set(this.videoList[index], 'flag', !this.videoList[index].flag)
				})
			},
			pauseVideo(val) {
				if (typeof this.videoList[this.oldIndex].initialTime != 'undefined') this.videoList[this.oldIndex].initialTime =
					val
			},
			clickVideo() {
				this.videoList[this.index].flag = !this.videoList[this.index].flag
			}
		},
		watch: {
			index(newVal, oldVal) {
				let len = this.videoList.filter(item => item.src).length
				//加载视频
				if (len - this.index - 1 <= this.playCount) {
					this.pushVideoList()
				}
				this.oldIndex = oldVal
			}
		}
	}
</script>
<style scoped>
	.swiper {
		flex: 1;
		background-color: #000;
	}

	.swiper-item {
		flex: 1;
	}

	.video {
		flex: 1;
	}

	.video-box {
		flex: 1;
		width: 750rpx;
	}

	.cover-view-center {
		position: absolute;
		justify-content: center;
		align-items: center;
		opacity: 0.1;
		z-index: 999;
	}

	.cover-view-left {
		position: absolute;
		margin-left: 25upx;
		width: 500upx;
		bottom: 160upx;
		z-index: 9999;
		font-size: 16px;
		color: #FFFFFF;
		/* #ifndef APP-PLUS */
		white-space: pre-wrap;
		text-overflow: ellipsis;
		overflow: hidden;
		/* #endif */
	}

	.left-view {
		margin-bottom: 20upx;
	}

	.left-text {
		font-size: 16px;
		color: #FFFFFF;
		/* #ifndef APP-PLUS */
		white-space: pre-wrap;
		text-overflow: ellipsis;
		overflow: hidden;
		/* #endif */
	}

	.avater {
		border-radius: 50upx;
		border-color: #fff;
		border-style: solid;
		border-width: 2px;
	}

	.cover-view-right {
		position: absolute;
		bottom: 160upx;
		right: 20upx;
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		flex-direction: column;
		/* #endif */
		z-index: 9999;
	}

	.right-text-avater {
		position: absolute;
		font-size: 14px;
		top: 80upx;
		left: 30upx;
		height: 40upx;
		width: 40upx;
		background-color: #DD524D;
		color: #FFFFFF;
		border-radius: 50%;
		text-align: center;
		line-height: 40upx;
		z-index: 999;
	}

	.avater-icon {
		height: 40upx;
		width: 40upx;

		color: #fff;
		background-color: #DD524D;
		border-radius: 50%;
		position: absolute;
		left: 30upx;
		top: -20upx;
	}

	.right-text {
		text-align: center;
		font-size: 14px;
		color: #FFFFFF;
		margin-bottom: 50upx;
		height: 20px;
	}

	.img {
		height: 50upx;
		width: 50upx;
		opacity: 0.9;
		margin-left: 3rpx;
		margin-bottom: 3rpx;
	}

	.page {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		flex-direction: column;
		/* #endif */
		flex: 1;
	}
</style>
