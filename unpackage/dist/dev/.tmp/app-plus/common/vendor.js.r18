(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(n);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\n// Context例外情况\nvar CONTEXT_API_RE_EXC = ['createBLEConnection'];\n\n// 同步例外情况\nvar ASYNC_API = ['createBLEConnection'];\n\nvar CALLBACK_API_RE = /^on|^off/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name) && name !== 'onPush';\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\n/* eslint-disable no-extend-native */\nif (!Promise.prototype.finally) {\n  Promise.prototype.finally = function (callback) {\n    var promise = this.constructor;\n    return this.then(\n    function (value) {return promise.resolve(callback()).then(function () {return value;});},\n    function (reason) {return promise.resolve(callback()).then(function () {\n        throw reason;\n      });});\n\n  };\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  upx2px: upx2px,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor,\n  interceptors: interceptors });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'onTabBarMidButtonTap',\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = webview.__uniapp_mask_id === '0' ? {\n    setStyle: function setStyle(_ref2)\n\n    {var mask = _ref2.mask;\n      requireNativePlugin('uni-tabview').setMask({\n        color: mask });\n\n    } } :\n  plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\nvar api = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getSubNVueById: getSubNVueById,\n  requireNativePlugin: requireNativePlugin });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions.behaviors;\n  var vueExtends = vueOptions.extends;\n  var vueMixins = vueOptions.mixins;\n\n  var vueProps = vueOptions.props;\n\n  if (!vueProps) {\n    vueOptions.props = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps.name = {\n            type: String,\n            default: '' };\n\n          vueProps.value = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts.default;\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (hasOwn(event, 'markerId')) {\n    event.detail = typeof event.detail === 'object' ? event.detail : {};\n    event.detail.markerId = event.markerId;\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn('事件信息不存在');\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn('事件信息不存在');\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          if (methodName === '$emit') {\n            handlerCtx.$emit.apply(handlerCtx,\n            processEventArgs(\n            _this.$vm,\n            event,\n            eventArray[1],\n            eventArray[2],\n            isCustom,\n            methodName));\n\n            return;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref3)\n\n\n{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;\n  if (vm.$options.store) {\n    _vue.default.prototype.$store = vm.$options.store;\n  }\n\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n      // vm 上也挂载 globalData\n      this.$vm.globalData = this.globalData;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n  // 将 methods 中的方法挂在 getApp() 中\n  var methods = vm.$options.methods;\n  if (methods) {\n    Object.keys(methods).forEach(function (name) {\n      appOptions[name] = methods[name];\n    });\n  }\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)\n  for (var i = $children.length - 1; i >= 0; i--) {\n    var childVm = $children[i];\n    if (childVm.$scope._$vueId === vuePid) {\n      return childVm;\n    }\n  }\n  // 反向递归查找\n  var parentVm;\n  for (var _i = $children.length - 1; _i >= 0; _i--) {\n    parentVm = findVmByVueId($children[_i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref4 =\n\n\n\n  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var options = _objectSpread({\n    multipleSlots: true,\n    addGlobalClass: true },\n  vueOptions.options || {});\n\n\n  var componentOptions = {\n    options: options,\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm && this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (Array.isArray(vueOptions.wxsCallMethods)) {\n    vueOptions.wxsCallMethods.forEach(function (callMethod) {\n      componentOptions.methods[callMethod] = function (args) {\n        return this.$vm[callMethod](args);\n      };\n    });\n  }\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref6)\n\n\n{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (target[name]) {\n        return target[name];\n      }\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    },\n    set: function set(target, name, value) {\n      target[name] = value;\n      return true;\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 10:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! exports provided: log, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"log\", function() { return log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return formatLog; });\nfunction typof (v) {\n  var s = Object.prototype.toString.call(v)\n  return s.substring(8, s.length - 1)\n}\n\nfunction isDebugMode () {\n  /* eslint-disable no-undef */\n  return typeof __channelId__ === 'string' && __channelId__\n}\n\nfunction log (type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key]\n  }\n  console[type].apply(console, args)\n}\n\nfunction formatLog () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key]\n  }\n  var type = args.shift()\n  if (isDebugMode()) {\n    args.push(args.pop().replace('at ', 'uni-app:///'))\n    return console[type].apply(console, args)\n  }\n\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v).toLowerCase()\n\n    if (type === '[object object]' || type === '[object array]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---'\n      } catch (e) {\n        v = '[object object]'\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---'\n      } else if (v === undefined) {\n        v = '---UNDEFINED---'\n      } else {\n        var vType = typof(v).toUpperCase()\n\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---'\n        } else {\n          v = String(v)\n        }\n      }\n    }\n\n    return v\n  })\n  var msg = ''\n\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop()\n    msg = msgs.join('---COMMA---')\n\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg\n    } else {\n      msg += '---COMMA---' + lastMsg\n    }\n  } else {\n    msg = msgs[0]\n  }\n\n  console[type](msg)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1Asd0ZBQXdGLGFBQWE7QUFDckc7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZixxRUFBcUUsYUFBYTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHR5cG9mICh2KSB7XG4gIHZhciBzID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpXG4gIHJldHVybiBzLnN1YnN0cmluZyg4LCBzLmxlbmd0aCAtIDEpXG59XG5cbmZ1bmN0aW9uIGlzRGVidWdNb2RlICgpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cbiAgcmV0dXJuIHR5cGVvZiBfX2NoYW5uZWxJZF9fID09PSAnc3RyaW5nJyAmJiBfX2NoYW5uZWxJZF9fXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2cgKHR5cGUpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldXG4gIH1cbiAgY29uc29sZVt0eXBlXS5hcHBseShjb25zb2xlLCBhcmdzKVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRMb2cgKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldXG4gIH1cbiAgdmFyIHR5cGUgPSBhcmdzLnNoaWZ0KClcbiAgaWYgKGlzRGVidWdNb2RlKCkpIHtcbiAgICBhcmdzLnB1c2goYXJncy5wb3AoKS5yZXBsYWNlKCdhdCAnLCAndW5pLWFwcDovLy8nKSlcbiAgICByZXR1cm4gY29uc29sZVt0eXBlXS5hcHBseShjb25zb2xlLCBhcmdzKVxuICB9XG5cbiAgdmFyIG1zZ3MgPSBhcmdzLm1hcChmdW5jdGlvbiAodikge1xuICAgIHZhciB0eXBlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpLnRvTG93ZXJDYXNlKClcblxuICAgIGlmICh0eXBlID09PSAnW29iamVjdCBvYmplY3RdJyB8fCB0eXBlID09PSAnW29iamVjdCBhcnJheV0nKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2ID0gJy0tLUJFR0lOOkpTT04tLS0nICsgSlNPTi5zdHJpbmdpZnkodikgKyAnLS0tRU5EOkpTT04tLS0nXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHYgPSAnW29iamVjdCBvYmplY3RdJ1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodiA9PT0gbnVsbCkge1xuICAgICAgICB2ID0gJy0tLU5VTEwtLS0nXG4gICAgICB9IGVsc2UgaWYgKHYgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2ID0gJy0tLVVOREVGSU5FRC0tLSdcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB2VHlwZSA9IHR5cG9mKHYpLnRvVXBwZXJDYXNlKClcblxuICAgICAgICBpZiAodlR5cGUgPT09ICdOVU1CRVInIHx8IHZUeXBlID09PSAnQk9PTEVBTicpIHtcbiAgICAgICAgICB2ID0gJy0tLUJFR0lOOicgKyB2VHlwZSArICctLS0nICsgdiArICctLS1FTkQ6JyArIHZUeXBlICsgJy0tLSdcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2ID0gU3RyaW5nKHYpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdlxuICB9KVxuICB2YXIgbXNnID0gJydcblxuICBpZiAobXNncy5sZW5ndGggPiAxKSB7XG4gICAgdmFyIGxhc3RNc2cgPSBtc2dzLnBvcCgpXG4gICAgbXNnID0gbXNncy5qb2luKCctLS1DT01NQS0tLScpXG5cbiAgICBpZiAobGFzdE1zZy5pbmRleE9mKCcgYXQgJykgPT09IDApIHtcbiAgICAgIG1zZyArPSBsYXN0TXNnXG4gICAgfSBlbHNlIHtcbiAgICAgIG1zZyArPSAnLS0tQ09NTUEtLS0nICsgbGFzdE1zZ1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBtc2cgPSBtc2dzWzBdXG4gIH1cblxuICBjb25zb2xlW3R5cGVdKG1zZylcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),

/***/ 11:
/*!*********************************************************************************************!*\
  !*** ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/regenerator/index.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ 12);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxtQkFBTyxDQUFDLDZCQUFELENBQXhCIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),

/***/ 12:
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(/*! ./runtime */ 13);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLG1CQUFXOztBQUVwQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG59KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),

/***/ 13:
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n");

/***/ }),

/***/ 14:
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return Store; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"install\", function() { return install; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapState\", function() { return mapState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapMutations\", function() { return mapMutations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapGetters\", function() { return mapGetters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapActions\", function() { return mapActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNamespacedHelpers\", function() { return createNamespacedHelpers; });\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (true) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (true) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (true) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (true) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (true) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (true) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n     true &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (true) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (true) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ( true && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ( true && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (true) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (true) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (true) {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (true) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if ( true && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if ( true && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index_esm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 21:
/*!**********************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/page-animation/index.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n    if(false) { var cssReload; }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBTyxLQUFVLEVBQUUsa0JBS2QiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTg5NTk1ODc2MDAwXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkM6L1Byb2dyYW0gRmlsZXMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJobXJcIjp0cnVlLFwicHVibGljUGF0aFwiOlwiLi4vLi4vXCIsXCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n");

/***/ }),

/***/ 22:
/*!***********************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/page-animation/setting.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nvar pageIndexSetting = [\n{ path: 'pages/index/index', index: 1 },\n{ path: 'pages/zongci/zongci', index: 2 },\n{ path: 'pages/shanghui/shanghui', index: 3 },\n{ path: 'pages/my/my', index: 4 },\n{ path: 'pages/vips/vipList', index: 5 },\n{ path: 'pages/my/userInfo', index: 5 },\n{ path: 'pages/my/setting', index: 5 },\n{ path: 'pages/my/security', index: 5 },\n{ path: 'pages/my/editPsdOrPhone', index: 5 },\n{ path: 'pages/my/editUserInfo', index: 5 },\n{ path: 'pages/my/mySH', index: 5 },\n{ path: 'pages/my/myFans', index: 5 },\n{ path: 'pages/my/myFollow', index: 5 },\n{ path: 'pages/my/myShouCang', index: 5 },\n{ path: 'pages/my/myActivity', index: 5 },\n{ path: 'pages/forgetPsd', index: 5 },\n{ path: 'pages/login', index: 5 },\n{ path: 'pages/news/newsInfo', index: 5 },\n{ path: 'pages/shanghui/shanghuiList', index: 5 },\n{ path: 'pages/shanghui/peopleList', index: 5 },\n{ path: 'pages/shanghui/shanghuiInfo', index: 5 },\n{ path: 'pages/shanghui/shanghuiSettled', index: 5 },\n{ path: 'pages/shanghui/shanghuiJoin', index: 5 },\n{ path: 'pages/shanghui/selectSH', index: 5 },\n{ path: 'pages/shanghui/newsList', index: 5 },\n{ path: 'pages/shanghui/mySH', index: 5 },\n{ path: 'pages/activity/activityList', index: 5 },\n{ path: 'pages/activity/activityInfo', index: 5 },\n{ path: 'pages/activity/activityJoin', index: 5 },\n{ path: 'pages/activity/activityAdd', index: 5 },\n{ path: 'pages/news/addNew', index: 5 },\n{ path: 'pages/news/plInfo', index: 5 },\n{ path: 'pages/zongci/zongciList', index: 5 },\n{ path: 'pages/zongci/zongciInfo', index: 5 },\n{ path: 'pages/zongci/zongciCreate', index: 5 },\n{ path: 'pages/zongci/createZC', index: 5 },\n{ path: 'pages/zongci/myZC', index: 5 },\n{ path: 'pages/zongci/realAuth', index: 5 },\n{ path: 'pages/zongci/newList', index: 5 },\n{ path: 'pages/template/search', index: 5 },\n{ path: 'pages/template/newsSearch', index: 5 }];\n\nmodule.exports = {\n  pageIndexSetting: pageIndexSetting };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9wYWdlLWFuaW1hdGlvbi9zZXR0aW5nLmpzIl0sIm5hbWVzIjpbInBhZ2VJbmRleFNldHRpbmciLCJwYXRoIiwiaW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSUEsZ0JBQWdCLEdBQUc7QUFDdEIsRUFBQ0MsSUFBSSxFQUFDLG1CQUFOLEVBQTBCQyxLQUFLLEVBQUMsQ0FBaEMsRUFEc0I7QUFFdEIsRUFBQ0QsSUFBSSxFQUFDLHFCQUFOLEVBQTRCQyxLQUFLLEVBQUMsQ0FBbEMsRUFGc0I7QUFHdEIsRUFBQ0QsSUFBSSxFQUFDLHlCQUFOLEVBQWdDQyxLQUFLLEVBQUMsQ0FBdEMsRUFIc0I7QUFJdEIsRUFBQ0QsSUFBSSxFQUFDLGFBQU4sRUFBb0JDLEtBQUssRUFBQyxDQUExQixFQUpzQjtBQUt0QixFQUFDRCxJQUFJLEVBQUMsb0JBQU4sRUFBMkJDLEtBQUssRUFBQyxDQUFqQyxFQUxzQjtBQU10QixFQUFDRCxJQUFJLEVBQUMsbUJBQU4sRUFBMEJDLEtBQUssRUFBQyxDQUFoQyxFQU5zQjtBQU90QixFQUFDRCxJQUFJLEVBQUMsa0JBQU4sRUFBeUJDLEtBQUssRUFBQyxDQUEvQixFQVBzQjtBQVF0QixFQUFDRCxJQUFJLEVBQUMsbUJBQU4sRUFBMEJDLEtBQUssRUFBQyxDQUFoQyxFQVJzQjtBQVN0QixFQUFDRCxJQUFJLEVBQUMseUJBQU4sRUFBZ0NDLEtBQUssRUFBQyxDQUF0QyxFQVRzQjtBQVV0QixFQUFDRCxJQUFJLEVBQUMsdUJBQU4sRUFBOEJDLEtBQUssRUFBQyxDQUFwQyxFQVZzQjtBQVd0QixFQUFDRCxJQUFJLEVBQUMsZUFBTixFQUFzQkMsS0FBSyxFQUFDLENBQTVCLEVBWHNCO0FBWXRCLEVBQUNELElBQUksRUFBQyxpQkFBTixFQUF3QkMsS0FBSyxFQUFDLENBQTlCLEVBWnNCO0FBYXRCLEVBQUNELElBQUksRUFBQyxtQkFBTixFQUEwQkMsS0FBSyxFQUFDLENBQWhDLEVBYnNCO0FBY3RCLEVBQUNELElBQUksRUFBQyxxQkFBTixFQUE0QkMsS0FBSyxFQUFDLENBQWxDLEVBZHNCO0FBZXRCLEVBQUNELElBQUksRUFBQyxxQkFBTixFQUE0QkMsS0FBSyxFQUFDLENBQWxDLEVBZnNCO0FBZ0J0QixFQUFDRCxJQUFJLEVBQUMsaUJBQU4sRUFBd0JDLEtBQUssRUFBQyxDQUE5QixFQWhCc0I7QUFpQnRCLEVBQUNELElBQUksRUFBQyxhQUFOLEVBQW9CQyxLQUFLLEVBQUMsQ0FBMUIsRUFqQnNCO0FBa0J0QixFQUFDRCxJQUFJLEVBQUMscUJBQU4sRUFBNEJDLEtBQUssRUFBQyxDQUFsQyxFQWxCc0I7QUFtQnRCLEVBQUNELElBQUksRUFBQyw2QkFBTixFQUFvQ0MsS0FBSyxFQUFDLENBQTFDLEVBbkJzQjtBQW9CdEIsRUFBQ0QsSUFBSSxFQUFDLDJCQUFOLEVBQWtDQyxLQUFLLEVBQUMsQ0FBeEMsRUFwQnNCO0FBcUJ0QixFQUFDRCxJQUFJLEVBQUMsNkJBQU4sRUFBb0NDLEtBQUssRUFBQyxDQUExQyxFQXJCc0I7QUFzQnRCLEVBQUNELElBQUksRUFBQyxnQ0FBTixFQUF1Q0MsS0FBSyxFQUFDLENBQTdDLEVBdEJzQjtBQXVCdEIsRUFBQ0QsSUFBSSxFQUFDLDZCQUFOLEVBQW9DQyxLQUFLLEVBQUMsQ0FBMUMsRUF2QnNCO0FBd0J0QixFQUFDRCxJQUFJLEVBQUMseUJBQU4sRUFBZ0NDLEtBQUssRUFBQyxDQUF0QyxFQXhCc0I7QUF5QnRCLEVBQUNELElBQUksRUFBQyx5QkFBTixFQUFnQ0MsS0FBSyxFQUFDLENBQXRDLEVBekJzQjtBQTBCdEIsRUFBQ0QsSUFBSSxFQUFDLHFCQUFOLEVBQTRCQyxLQUFLLEVBQUMsQ0FBbEMsRUExQnNCO0FBMkJ0QixFQUFDRCxJQUFJLEVBQUMsNkJBQU4sRUFBb0NDLEtBQUssRUFBQyxDQUExQyxFQTNCc0I7QUE0QnRCLEVBQUNELElBQUksRUFBQyw2QkFBTixFQUFvQ0MsS0FBSyxFQUFDLENBQTFDLEVBNUJzQjtBQTZCdEIsRUFBQ0QsSUFBSSxFQUFDLDZCQUFOLEVBQW9DQyxLQUFLLEVBQUMsQ0FBMUMsRUE3QnNCO0FBOEJ0QixFQUFDRCxJQUFJLEVBQUMsNEJBQU4sRUFBbUNDLEtBQUssRUFBQyxDQUF6QyxFQTlCc0I7QUErQnRCLEVBQUNELElBQUksRUFBQyxtQkFBTixFQUEwQkMsS0FBSyxFQUFDLENBQWhDLEVBL0JzQjtBQWdDdEIsRUFBQ0QsSUFBSSxFQUFDLG1CQUFOLEVBQTBCQyxLQUFLLEVBQUMsQ0FBaEMsRUFoQ3NCO0FBaUN0QixFQUFDRCxJQUFJLEVBQUMseUJBQU4sRUFBZ0NDLEtBQUssRUFBQyxDQUF0QyxFQWpDc0I7QUFrQ3RCLEVBQUNELElBQUksRUFBQyx5QkFBTixFQUFnQ0MsS0FBSyxFQUFDLENBQXRDLEVBbENzQjtBQW1DdEIsRUFBQ0QsSUFBSSxFQUFDLDJCQUFOLEVBQWtDQyxLQUFLLEVBQUMsQ0FBeEMsRUFuQ3NCO0FBb0N0QixFQUFDRCxJQUFJLEVBQUMsdUJBQU4sRUFBOEJDLEtBQUssRUFBQyxDQUFwQyxFQXBDc0I7QUFxQ3RCLEVBQUNELElBQUksRUFBQyxtQkFBTixFQUEwQkMsS0FBSyxFQUFDLENBQWhDLEVBckNzQjtBQXNDdEIsRUFBQ0QsSUFBSSxFQUFDLHVCQUFOLEVBQThCQyxLQUFLLEVBQUMsQ0FBcEMsRUF0Q3NCO0FBdUN0QixFQUFDRCxJQUFJLEVBQUMsc0JBQU4sRUFBNkJDLEtBQUssRUFBQyxDQUFuQyxFQXZDc0I7QUF3Q3RCLEVBQUNELElBQUksRUFBQyx1QkFBTixFQUE4QkMsS0FBSyxFQUFDLENBQXBDLEVBeENzQjtBQXlDdEIsRUFBQ0QsSUFBSSxFQUFDLDJCQUFOLEVBQWtDQyxLQUFLLEVBQUMsQ0FBeEMsRUF6Q3NCLENBQXZCOztBQTJDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWdCO0FBQ2ZKLGtCQUFnQixFQUFoQkEsZ0JBRGUsRUFBaEIiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxudmFyIHBhZ2VJbmRleFNldHRpbmcgPSBbXHJcblx0e3BhdGg6J3BhZ2VzL2luZGV4L2luZGV4JyxpbmRleDoxfSxcclxuXHR7cGF0aDoncGFnZXMvem9uZ2NpL3pvbmdjaScsaW5kZXg6Mn0sXHJcblx0e3BhdGg6J3BhZ2VzL3NoYW5naHVpL3NoYW5naHVpJyxpbmRleDozfSxcclxuXHR7cGF0aDoncGFnZXMvbXkvbXknLGluZGV4OjR9LFxyXG5cdHtwYXRoOidwYWdlcy92aXBzL3ZpcExpc3QnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9teS91c2VySW5mbycsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL215L3NldHRpbmcnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9teS9zZWN1cml0eScsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL215L2VkaXRQc2RPclBob25lJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvbXkvZWRpdFVzZXJJbmZvJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvbXkvbXlTSCcsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL215L215RmFucycsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL215L215Rm9sbG93JyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvbXkvbXlTaG91Q2FuZycsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL215L215QWN0aXZpdHknLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9mb3JnZXRQc2QnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9sb2dpbicsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL25ld3MvbmV3c0luZm8nLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9zaGFuZ2h1aS9zaGFuZ2h1aUxpc3QnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9zaGFuZ2h1aS9wZW9wbGVMaXN0JyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvc2hhbmdodWkvc2hhbmdodWlJbmZvJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvc2hhbmdodWkvc2hhbmdodWlTZXR0bGVkJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvc2hhbmdodWkvc2hhbmdodWlKb2luJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvc2hhbmdodWkvc2VsZWN0U0gnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9zaGFuZ2h1aS9uZXdzTGlzdCcsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL3NoYW5naHVpL215U0gnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9hY3Rpdml0eS9hY3Rpdml0eUxpc3QnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9hY3Rpdml0eS9hY3Rpdml0eUluZm8nLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9hY3Rpdml0eS9hY3Rpdml0eUpvaW4nLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy9hY3Rpdml0eS9hY3Rpdml0eUFkZCcsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL25ld3MvYWRkTmV3JyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvbmV3cy9wbEluZm8nLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy96b25nY2kvem9uZ2NpTGlzdCcsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL3pvbmdjaS96b25nY2lJbmZvJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvem9uZ2NpL3pvbmdjaUNyZWF0ZScsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL3pvbmdjaS9jcmVhdGVaQycsaW5kZXg6NX0sXHJcblx0e3BhdGg6J3BhZ2VzL3pvbmdjaS9teVpDJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvem9uZ2NpL3JlYWxBdXRoJyxpbmRleDo1fSxcclxuXHR7cGF0aDoncGFnZXMvem9uZ2NpL25ld0xpc3QnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy90ZW1wbGF0ZS9zZWFyY2gnLGluZGV4OjV9LFxyXG5cdHtwYXRoOidwYWdlcy90ZW1wbGF0ZS9uZXdzU2VhcmNoJyxpbmRleDo1fVxyXG5dXHJcbm1vZHVsZS5leHBvcnRzPSB7XHJcblx0cGFnZUluZGV4U2V0dGluZ1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n");

/***/ }),

/***/ 23:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode, /* vue-cli only */\n  components, // fixed by xxxxxx auto components\n  renderjs // fixed by xxxxxx renderjs\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // fixed by xxxxxx auto components\n  if (components) {\n    if (!options.components) {\n      options.components = {}\n    }\n    var hasOwn = Object.prototype.hasOwnProperty\n    for (var name in components) {\n      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {\n        options.components[name] = components[name]\n      }\n    }\n  }\n  // fixed by xxxxxx renderjs\n  if (renderjs) {\n    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {\n      this[renderjs.__module] = this\n    });\n    (options.mixins || (options.mixins = [])).push(renderjs)\n  }\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSwgLyogdnVlLWNsaSBvbmx5ICovXG4gIGNvbXBvbmVudHMsIC8vIGZpeGVkIGJ5IHh4eHh4eCBhdXRvIGNvbXBvbmVudHNcbiAgcmVuZGVyanMgLy8gZml4ZWQgYnkgeHh4eHh4IHJlbmRlcmpzXG4pIHtcbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyBmaXhlZCBieSB4eHh4eHggYXV0byBjb21wb25lbnRzXG4gIGlmIChjb21wb25lbnRzKSB7XG4gICAgaWYgKCFvcHRpb25zLmNvbXBvbmVudHMpIHtcbiAgICAgIG9wdGlvbnMuY29tcG9uZW50cyA9IHt9XG4gICAgfVxuICAgIHZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5XG4gICAgZm9yICh2YXIgbmFtZSBpbiBjb21wb25lbnRzKSB7XG4gICAgICBpZiAoaGFzT3duLmNhbGwoY29tcG9uZW50cywgbmFtZSkgJiYgIWhhc093bi5jYWxsKG9wdGlvbnMuY29tcG9uZW50cywgbmFtZSkpIHtcbiAgICAgICAgb3B0aW9ucy5jb21wb25lbnRzW25hbWVdID0gY29tcG9uZW50c1tuYW1lXVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBmaXhlZCBieSB4eHh4eHggcmVuZGVyanNcbiAgaWYgKHJlbmRlcmpzKSB7XG4gICAgKHJlbmRlcmpzLmJlZm9yZUNyZWF0ZSB8fCAocmVuZGVyanMuYmVmb3JlQ3JlYXRlID0gW10pKS51bnNoaWZ0KGZ1bmN0aW9uKCkge1xuICAgICAgdGhpc1tyZW5kZXJqcy5fX21vZHVsZV0gPSB0aGlzXG4gICAgfSk7XG4gICAgKG9wdGlvbnMubWl4aW5zIHx8IChvcHRpb25zLm1peGlucyA9IFtdKSkucHVzaChyZW5kZXJqcylcbiAgfVxuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),

/***/ 26:
/*!************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/md5.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__f__) {/*\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\n\n/*\r\n     * Configurable variables. You may need to tweak these to be compatible with\r\n     * the server-side, but the defaults work in most cases.\r\n     */\nvar hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\nvar chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n/*\r\n                                                                             * These are the functions you'll usually want to call\r\n                                                                             * They take string arguments and return either hex or base-64 encoded strings\r\n                                                                             */\nfunction hex_md5(s) {return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\nfunction b64_md5(s) {return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\nfunction str_md5(s) {return binl2str(core_md5(str2binl(s), s.length * chrsz));}\nfunction hex_hmac_md5(key, data) {return binl2hex(core_hmac_md5(key, data));}\nfunction b64_hmac_md5(key, data) {return binl2b64(core_hmac_md5(key, data));}\nfunction str_hmac_md5(key, data) {return binl2str(core_hmac_md5(key, data));}\n\n/*\r\n                                                                               * Perform a simple self-test to see if the VM is working\r\n                                                                               */\nfunction md5_vm_test()\n{\n  return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n}\n\n/*\r\n   * Calculate the MD5 of an array of little-endian words, and a bit length\r\n   */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\r\n   * These functions implement the four basic operations the algorithm uses.\r\n   */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/*\r\n   * Calculate the HMAC-MD5, of a key and some data\r\n   */\nfunction core_hmac_md5(key, data)\n{\n  var bkey = str2binl(key);\n  if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\n\n  var ipad = Array(16),opad = Array(16);\n  for (var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\n  return core_md5(opad.concat(hash), 512 + 128);\n}\n\n/*\r\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n   * to work around bugs in some JS interpreters.\r\n   */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xFFFF;\n}\n\n/*\r\n   * Bitwise rotate a 32-bit number to the left.\r\n   */\nfunction bit_rol(num, cnt)\n{\n  return num << cnt | num >>> 32 - cnt;\n}\n\n/*\r\n   * Convert a string to an array of little-endian words\r\n   * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\r\n   */\nfunction str2binl(str)\n{\n  var bin = Array();\n  var mask = (1 << chrsz) - 1;\n  for (var i = 0; i < str.length * chrsz; i += chrsz) {\n    bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;}\n  return bin;\n}\n\n/*\r\n   * Convert an array of little-endian words to a string\r\n   */\nfunction binl2str(bin)\n{\n  var str = \"\";\n  var mask = (1 << chrsz) - 1;\n  for (var i = 0; i < bin.length * 32; i += chrsz) {\n    str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);}\n  return str;\n}\n\n/*\r\n   * Convert an array of little-endian words to a hex string.\r\n   */\nfunction binl2hex(binarray)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var str = \"\";\n  for (var i = 0; i < binarray.length * 4; i++)\n  {\n    str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) +\n    hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n  }\n  return str;\n}\n\n/*\r\n   * Convert an array of little-endian words to a base-64 string\r\n   */\nfunction binl2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  for (var i = 0; i < binarray.length * 4; i += 3)\n  {\n    var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 0xFF) << 16 |\n    (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 0xFF) << 8 |\n    binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 0xFF;\n    for (var j = 0; j < 4; j++)\n    {\n      if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;else\n      str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n    }\n  }\n  return str;\n}\n\n\n\n\n// md5----start\nfunction getSign(params) {var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'TOgq9aWLY4hbQA3PR0NyU9zlactD8VAn';\n  params['key'] = key;\n  params = JsonSort(params);\n  var arr = [];\n  for (var i in params) {\n    if (params[i]) {\n      arr.push(i + \"=\" + params[i]);\n    }\n  }\n  return paramsStrSort(arr.join(\"&\"));\n}\n\nfunction JsonSort(jsonData) {\n  try {\n    var tempJsonObj = {};\n    var sdic = Object.keys(jsonData).sort();\n    sdic.map(function (item, index) {\n      tempJsonObj[item] = jsonData[sdic[index]];\n    });\n    return tempJsonObj;\n  } catch (e) {\n    return jsonData;\n  }\n}\n\nfunction paramsStrSort(paramsStr) {\n  var url = paramsStr.split(\"&\").sort().join(\"&\");\n  __f__(\"log\", url, \" at common\\\\md5.js:289\");\n  return hex_md5(url);\n}\n\n// md5----end\n\n\nmodule.exports = {\n  getSign: getSign };\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///26\n");

/***/ }),

/***/ 27:
/*!***************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/common.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__f__, uni) {var _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/regenerator */ 11);function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);}_next(undefined);});};}var timeFormat = {\n  UNITS: {\n    '年': 31557600000,\n    '月': 2629800000,\n    '天': 86400000,\n    '小时': 3600000,\n    '分钟': 60000,\n    '秒': 1000 },\n\n  humanize: function humanize(milliseconds) {\n    var humanize = '';\n    for (var key in this.UNITS) {\n      if (milliseconds >= this.UNITS[key]) {\n        humanize = Math.floor(milliseconds / this.UNITS[key]) + key + '前';\n        break;\n      }\n    }\n    return humanize || '刚刚';\n  },\n  // 2019-12-20 02:33:30   ---->    2019年12月03日01时10分     t:是否显示刚刚  默认：false显示\n  format: function format(dateStr, t) {\n    var date = this.parse(dateStr);\n    var diff = Date.now() - date.getTime();\n    if (diff < this.UNITS['天'] && !t) {\n      return this.humanize(diff);\n    }\n    var _format = function _format(number) {\n      return number < 10 ? '0' + number : number;\n    };\n    return date.getFullYear() + '年' + _format(date.getMonth() + 1) + '月' + _format(date.getDate()) + '日' +\n    _format(date.getHours()) + '时' + _format(date.getMinutes()) + '分';\n  },\n  noYearFormat: function noYearFormat(dateStr, t) {\n    var date = this.parse(dateStr);\n    var diff = Date.now() - date.getTime();\n    if (diff < this.UNITS['天'] && !t) {\n      return this.humanize(diff);\n    }\n    var _format = function _format(number) {\n      return number < 10 ? '0' + number : number;\n    };\n    return _format(date.getMonth() + 1) + '月' + _format(date.getDate()) + '日' +\n    _format(date.getHours()) + '时' + _format(date.getMinutes()) + '分';\n  },\n  parse: function parse(str) {//将\"yyyy-mm-dd HH:MM:ss\"格式的字符串，转化为一个Date对象\n    var a = str.split(/[^0-9]/);\n    return new Date(a[0], a[1] - 1, a[2], a[3], a[4], a[5]);\n  } };\n\n\n\n/**\r\n        * \r\n        * @param {Object} n 时间戳转字符串\r\n        * 1586515001 ----> 2020-08-09 12:00:00\r\n        */\nfunction numberToDate(n) {\n  var date = new Date(n * 1000);\n  var _format = function _format(number) {\n    return number < 10 ? '0' + number : number;\n  };\n  var date_str = date.getFullYear() + '-' + _format(date.getMonth() + 1) + '-' + _format(date.getDay()) + ' ' +\n  _format(date.getHours()) + ':' + _format(date.getMinutes()) + ':' + _format(date.getSeconds());\n  __f__(\"log\", date_str, \" at common\\\\common.js:64\");\n  __f__(\"log\", timeFormat.noYearFormat(date_str), \" at common\\\\common.js:65\");\n  return timeFormat.noYearFormat(date_str);\n}\n\n\n/**\r\n   * 两个时间的相差天数\r\n   * @param {Object} sDate1\r\n   * @param {Object} sDate2\r\n   */\nfunction DateDiff(start, end) {\n  var times = new Date(end).getTime() - new Date(start).getTime();\n  var days = Math.floor(times / (24 * 3600 * 1000));\n  var hours = Math.floor(times % (24 * 3600 * 1000) / (3600 * 1000));\n  var month = Math.floor(times % (24 * 3600 * 1000) / (60 * 1000)) % 60;\n  return (days ? days + '天' : '') + (hours ? hours + '小时' : '') + (month ? month + '分钟' : '');\n}\n\n// 新闻类资讯文本超出省略号\nvar newContentFormat = function newContentFormat(str) {\n  var newStr, flag;\n  if (str.length > 78) {\n    newStr = str.substring(0, 70) + '......';\n    flag = true;\n  } else {\n    newStr = str;\n    flag = false;\n  }\n  return [newStr, flag];\n};\n\n// 跳转\nvar navTo = function navTo(url) {\n  uni.navigateTo({\n    url: url });\n\n};\n// 返回\nvar navBack = function navBack() {\n\n  uni.navigateBack();\n\n\n\n\n};\n\n// 重定向\nvar closeNavTo = function closeNavTo(url) {\n  uni.redirectTo({\n    url: url });\n\n};\n\n/**\r\n    * 判断运行在哪个平台\r\n    */\nfunction whichApp() {\n  return new Promise(function (resolve, reject) {\n    switch (uni.getSystemInfoSync().platform) {\n      case 'android':\n        __f__(\"log\", '运行Android上', \" at common\\\\common.js:126\");\n        resolve(1);\n        break;\n      case 'ios':\n        __f__(\"log\", '运行iOS上', \" at common\\\\common.js:130\");\n        resolve(2);\n        break;\n      default:\n        __f__(\"log\", '运行在开发者工具上', \" at common\\\\common.js:134\");\n        break;}\n\n  });\n}\n\n\n/**\r\n   * 刷新页面\r\n   */\nfunction refrashPage() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  page.onLoad();\n}\n\n\n/**\r\n   * 上一个页面\r\n   * @param {Object} beforTwo  上上个页面\r\n   */\nfunction getBeforePage(beforTwo) {\n  var that = this;\n  var pages = getCurrentPages(); //当前页面栈  \n  var beforePage;\n  if (pages.length > 1) {\n    beforePage = beforTwo ? pages[pages.length - 3] : pages[pages.length - 2]; //获取上一个页面实例对象  \n  }\n  return beforePage;\n\n}\n\n\n\n// 弹窗\nvar uniMsg = function uniMsg(msg, type) {\n  if (type == 'success') {\n    uni.showToast({\n      icon: 'success',\n      title: msg,\n      duration: 2000 });\n\n  } else if (type == 'error') {\n    uni.showToast({\n      icon: '',\n      title: msg,\n      duration: 2000 });\n\n  } else {\n    uni.showToast({\n      icon: 'none',\n      title: msg,\n      duration: 2000 });\n\n  }\n};\n\n// 获取form表单值\nvar getFomrValue = function getFomrValue(t, paramArr) {\n  var formDatas = paramArr.map(function (item) {\n    return t.$refs[item.ref][0].returnVal();\n  });\n  return formDatas;\n};\n\n\nvar isOpenGps = function isOpenGps() {\n  return new Promise(function (resolve, reject) {\n    var system = uni.getSystemInfoSync(); // 获取系统信息\n    __f__(\"log\", JSON.stringify(system), \" at common\\\\common.js:203\");\n    if (system.platform === 'android') {// 判断平台\n      var context = plus.android.importClass(\"android.content.Context\");\n      var locationManager = plus.android.importClass(\"android.location.LocationManager\");\n      var main = plus.android.runtimeMainActivity();\n      var mainSvr = main.getSystemService(context.LOCATION_SERVICE);\n      if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n        uni.showModal({\n          title: '提示',\n          content: '请打开定位服务功能',\n          showCancel: false, // 不显示取消按钮\n          success: function success() {\n            if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n              var Intent = plus.android.importClass('android.content.Intent');\n              var Settings = plus.android.importClass('android.provider.Settings');\n              var intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n              main.startActivity(intent); // 打开系统设置GPS服务页面\n            } else {\n              resolve(1);\n            }\n          } });\n\n      }\n    }\n  });\n};\n\n\n// 定位\nvar getCity = function getCity() {\n  return new Promise(function (resolve, reject) {\n    if (checkPermission) {\n      uni.getLocation({\n        type: 'wgs84',\n        geocode: true,\n        success: function success(res) {\n          resolve(res);\n        },\n        fail: function fail(err) {\n          reject(err);\n        } });\n\n    }\n  });\n};\n\n\n/**\r\n    * 手动定位\r\n    */\nvar changeCity = function changeCity() {\n  return new Promise(function (resolve, reject) {\n    isOpenGps().then(function (res) {\n      if (res) {\n        uni.chooseLocation({\n          success: function success(res) {\n            resolve(res);\n          },\n          fail: function fail(err) {\n            reject(err);\n          } });\n\n      }\n    });\n  });\n};\n\n\n// 获取经纬度\nfunction formatLocation(longitude, latitude) {\n  if (typeof longitude === 'string' && typeof latitude === 'string') {\n    longitude = parseFloat(longitude);\n    latitude = parseFloat(latitude);\n  }\n  longitude = longitude.toFixed(2);\n  latitude = latitude.toFixed(2);\n  return {\n    longitude: longitude.toString().split('.'),\n    latitude: latitude.toString().split('.') };\n\n}\n\n// 选择地点\nvar chooseLocation = function chooseLocation() {\n  return new Promise(function (resolve, reject) {\n    uni.chooseLocation({\n      success: function success(res) {\n        resolve(res);\n      },\n      fail: function fail(err) {\n        reject(err);\n      } });\n\n  });\n};\n\nvar checkPermission = /*#__PURE__*/function () {var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(code) {var type, status;return _regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n            type = code ? code - 1 : this.sourceTypeIndex;if (!\n            permision.isIOS) {_context.next = 7;break;}_context.next = 4;return permision.requestIOS(sourceType[type][0]);case 4:_context.t0 = _context.sent;_context.next = 10;break;case 7:_context.next = 9;return (\n              permision.requestAndroid(type === 0 ? 'android.permission.CAMERA' :\n              'android.permission.READ_EXTERNAL_STORAGE'));case 9:_context.t0 = _context.sent;case 10:status = _context.t0;\n            if (status === null || status === 1) {\n              status = 1;\n            } else {\n              uni.showModal({\n                content: \"没有开启权限\",\n                confirmText: \"设置\",\n                success: function success(res) {\n                  if (res.confirm) {\n                    permision.gotoAppSetting();\n                  }\n                } });\n\n            }return _context.abrupt(\"return\",\n\n            status);case 13:case \"end\":return _context.stop();}}}, _callee, this);}));return function checkPermission(_x) {return _ref.apply(this, arguments);};}();\n\n\n// 选择媒体文件\nfunction chooseImage(len) {var _this = this;\n  return new Promise(function (resolve, reject) {\n    uni.chooseImage({\n      sourceType: ['camera', 'album'],\n      sizeType: ['compressed', 'original'],\n      count: len,\n      success: function success(res) {\n        resolve(res.tempFilePaths);\n      },\n      fail: function fail(err) {\n\n        if (err['code'] && err.code !== 0 && _this.sourceTypeIndex === 2) {\n          checkPermission(err.code);\n        }\n\n      } });\n\n  });\n}\n\n\n\nfunction urlTobase64(url) {\n  return new Promise(function (resolve, reject) {\n    var toBase64Url;\n    uni.request({\n      url: url,\n      method: 'GET',\n      responseType: 'arraybuffer',\n      success: function success(res) {\n        var base64 = uni.arrayBufferToBase64(res.data); //把arraybuffer转成base64\n        var toBase64Url = 'data:image/jpeg;base64,' + base64; //不加上这串字符，在页面无法显示\n        resolve(toBase64Url);\n      } });\n\n  });\n}\n\n/**\r\n   * 预览图片\r\n   * @param {Object} e 当前图片的data-src\r\n   * @param {Object} arr 要预览的图片数组\r\n   */\nfunction previewImage(e, arr, i) {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  uni.previewImage({\n    current: e,\n    urls: arr });\n\n\n\n}\n\n\n\n/**\r\n   * 删除数组的某一项\r\n   * @param {Object} arr 需要操作的数组\r\n   * @param {Object} key 需要对比的key\r\n   * @param {Object} val 需要对比的值\r\n   */\nfunction deleteArrIndex(arr, key, val) {\n  return arr.splice(arr.findIndex(function (item) {return item[key] === val;}), 1);\n}\n\n\n// 是否登陆\nfunction isLogin() {\n  return new Promise(function (resolve, reject) {\n    if (uni.getStorageSync('accesstoken')) {\n      resolve(1);\n    } else {\n      __f__(\"log\", '没有登陆', \" at common\\\\common.js:410\");\n      navTo('/pages/login');\n    }\n  });\n}\n\n\n// 跳转至的登陆页\nfunction toLoginPage() {\n  uni.navigateTo({\n    url: '/pages/login' });\n\n}\n\n\n/**\r\n   * app 分享\r\n   * type:   :    0:图文   1：纯文字    2：纯图片    3：音乐    4：视频     5:小程序\r\n   * scene   :    WXSceneSession:分享到聊天界面     WXSenceTimeline:分享到朋友圈     WXSceneFavorite:分享到微信收藏\r\n   */\nfunction shareYzkkToWx(option) {\n  return new Promise(function (resolve, reject) {\n    var sceneList = ['WXSceneSession', 'WXSenceTimeline', 'WXSceneFavorite'];\n    uni.share({\n      provider: \"weixin\",\n      scene: sceneList[option.scene],\n      type: option.type || 0,\n      href: option.link,\n      title: option.title,\n      summary: option.desc,\n      imageUrl: option.shareImg || '',\n      success: function success(res) {\n        __f__(\"log\", \"success:\" + JSON.stringify(res), \" at common\\\\common.js:442\");\n        resolve(res);\n      },\n      fail: function fail(err) {\n        __f__(\"log\", \"fail:\" + JSON.stringify(err), \" at common\\\\common.js:446\");\n        reject(err);\n      } });\n\n  });\n}\n\n\n\nmodule.exports = {\n  shareYzkkToWx: shareYzkkToWx,\n  urlTobase64: urlTobase64,\n  isLogin: isLogin,\n  timeFormat: timeFormat,\n  numberToDate: numberToDate,\n  DateDiff: DateDiff,\n  newContentFormat: newContentFormat,\n  navTo: navTo,\n  navBack: navBack,\n  closeNavTo: closeNavTo,\n  getFomrValue: getFomrValue,\n  uniMsg: uniMsg,\n  getCity: getCity,\n  formatLocation: formatLocation,\n  chooseLocation: chooseLocation,\n  chooseImage: chooseImage,\n  previewImage: previewImage,\n  deleteArrIndex: deleteArrIndex,\n  whichApp: whichApp,\n  getBeforePage: getBeforePage,\n  changeCity: changeCity,\n  refrashPage: refrashPage,\n  toLoginPage: toLoginPage };\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n");

/***/ }),

/***/ 28:
/*!************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/api.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _module$exports;function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var utils = __webpack_require__(/*! ./http.js */ 29);\n// const http = \"http://39.98.119.186:8082\";\n// const http_no_v = \"http://admin.youzikankan.com/api/\";\n// const http = \"http://admin.youzikankan.com/api/v1/\";\n\n// 正式\n// const http_no_v = \"http://fas.youzikankan.com/api/\";\n// const http = \"http://fas.youzikankan.com/api/v1/\";\n\n\n// 测试\nvar http_no_v = \"http://testfas.youzikankan.com/api/\";\nvar http = \"http://testfas.youzikankan.com/api/v1/\";\n\n\nmodule.exports = (_module$exports = {\n  http: http,\n  getSignPackage: function getSignPackage(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //得到分享签名\n    return utils.postRequest(\n    http_no_v + 'getSignPackage',\n    data,\n    config);\n\n  },\n  getIndexColumn: function getIndexColumn(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //资讯栏目\n    return utils.getRequest(\n    http + 'getIndexColumn',\n    data,\n    config);\n\n  },\n  upUserImage: function upUserImage(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //修改用户头像\n    return utils.postRequest(\n    http + 'upUserImage',\n    data,\n    config);\n\n  },\n  upUser: function upUser(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //修改用户资料\n    return utils.postRequest(\n    http + 'upUser',\n    data,\n    config);\n\n  },\n  upPwd: function upPwd(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //修改密码\n    return utils.postRequest(\n    http + 'upPwd',\n    data,\n    config);\n\n  },\n  getTempleJoinStatus: function getTempleJoinStatus(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //寺庙入驻状态\n    return utils.getRequest(\n    http + 'getTempleJoinStatus',\n    data,\n    config);\n\n  },\n  setTempleJoinID: function setTempleJoinID(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙入驻身份证上传\n    return utils.postRequest(\n    http + 'setTempleJoinID',\n    data,\n    config);\n\n  },\n  setTempleJoin: function setTempleJoin(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙入驻\n    return utils.postRequest(\n    http + 'setTempleJoin',\n    data,\n    config);\n\n  },\n  getAllNewList: function getAllNewList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页资讯\n    return utils.postRequest(\n    http + 'getNewsList/' + data.page,\n    data,\n    config);\n\n  },\n  getNewsList: function getNewsList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页推荐\n    return utils.getRequest(\n    http + 'getRecommendList/' + data.page,\n    data,\n    config);\n\n  },\n  getHotList: function getHotList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页热门新闻\n    return utils.getRequest(\n    http + 'getHotList/' + data.page,\n    data,\n    config);\n\n  },\n  getNewsSearch: function getNewsSearch(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页搜索\n    return utils.postRequest(\n    http + 'getNewsSearch/' + data.page,\n    data,\n    config);\n\n  },\n  getVideoList: function getVideoList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页视频列表\n    return utils.postRequest(\n    http + 'getVideoList/' + data.page,\n    data,\n    config);\n\n  },\n  getPictureList: function getPictureList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //首页图片列表\n    return utils.postRequest(\n    http + 'getPictureList/' + data.page,\n    data,\n    config);\n\n  },\n  getNewsInfo: function getNewsInfo(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLogin: true }; //资讯详情\n    return utils.getRequest(\n    http + 'getNewsDetail/' + data.id,\n    data,\n    config);\n\n  },\n  getChamberUser: function getChamberUser(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //成员列表\n    return utils.getRequest(\n    http + 'getChamberUser/' + data.id,\n    data,\n    config);\n\n  },\n  getLoginChamberList: function getLoginChamberList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //获取商会列表，加入商会时候的选择列表\n    return utils.getRequest(\n    http + 'getLoginChamberList/' + data.page,\n    data,\n    config);\n\n  } }, _defineProperty(_module$exports, \"getVideoList\",\nfunction getVideoList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取视频列表\n  return utils.postRequest(\n  http + 'getVideoList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getVideoDetail\",\nfunction getVideoDetail(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取视频详情\n  return utils.getRequest(\n  http + 'getVideoDetail/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getMyChamberList\",\nfunction getMyChamberList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会列表\n  return utils.getRequest(\n  http + 'getMyChamberList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberList\",\nfunction getChamberList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会列表\n  return utils.getRequest(\n  http + 'getChamberList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberJoin\",\nfunction getChamberJoin(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会入驻状态\n  return utils.getRequest(\n  http + 'getChamberJoin',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setChamberJoin\",\nfunction setChamberJoin(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //商会入驻\n  return utils.postRequest(\n  http + 'setChamberJoin',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setChamberAdd\",\nfunction setChamberAdd(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //加入商会\n  return utils.postRequest(\n  http + 'setChamberAdd',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberDetail\",\nfunction getChamberDetail(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会详情\n  return utils.getRequest(\n  http + 'getChamberDetail/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberNewsList\",\nfunction getChamberNewsList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会资讯列表\n  return utils.getRequest(\n  http + 'getChamberNewsList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getActivityEnrollStatus\",\nfunction getActivityEnrollStatus(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会活动报名状态\n  return utils.getRequest(\n  http + 'getActivityEnrollStatus/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"activityEnroll\",\nfunction activityEnroll(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //商会活动报名\n  return utils.postRequest(\n  http + 'activityEnroll',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberActivityList\",\n\nfunction getChamberActivityList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会活动列表\n  return utils.getRequest(\n  http + 'getChamberActivityList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getMyChamberActivity\",\nfunction getMyChamberActivity(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取我的活动\n  return utils.getRequest(\n  http + 'getMyChamberActivity/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setCollectionActivity\",\nfunction setCollectionActivity(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //收藏商会活动\n  return utils.postRequest(\n  http + 'setCollectionActivity',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getCollectionActivity\",\nfunction getCollectionActivity(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //活动收藏状态\n  return utils.getRequest(\n  http + 'getCollectionActivity/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setCollectionNews\", function setCollectionNews(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //收藏新闻\n  return utils.postRequest(\n  http + 'setCollectionNews',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getCollectionNews\",\nfunction getCollectionNews(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //新闻收藏状态\n  return utils.getRequest(\n  http + 'getCollectionNews/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getChamberActivityDetail\",\nfunction getChamberActivityDetail(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取商会活动详情\n  return utils.getRequest(\n  http + 'getChamberActivityDetail/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getTempleNewsPopularList\",\nfunction getTempleNewsPopularList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙热门资讯\n  return utils.getRequest(\n  http + 'getTempleNewsPopularList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getTemplePopularList\",\nfunction getTemplePopularList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //热门寺庙\n  return utils.getRequest(\n  http + 'getTemplePopularList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getTempleNewsList\",\nfunction getTempleNewsList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙新闻列表\n  return utils.getRequest(\n  http + 'getTempleNewsList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"zongciList\",\nfunction zongciList(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙列表\n  return utils.getRequest(\n  http + 'getTempleList/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getTempleNewsDetail\",\nfunction getTempleNewsDetail(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙详情\n  return utils.getRequest(\n  http + 'getTempleNewsDetail/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"zongciInfo\",\nfunction zongciInfo(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //寺庙详情\n  return utils.getRequest(\n  http + 'getTempleDetail/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getComment\",\n\nfunction getComment(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获得评论列表\n  return utils.getRequest(\n  http + 'getComment/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getLoginComment\",\nfunction getLoginComment(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //获得登陆后的评论列表（显示点赞状态）\n  return utils.getRequest(\n  http + 'getLoginComment/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getCommentReply\",\nfunction getCommentReply(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获得回复列表\n  return utils.getRequest(\n  http + 'getCommentReply/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"replyComment\",\n\nfunction replyComment(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //回复评论\n  return utils.postRequest(\n  http + 'replyComment',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setComment\",\nfunction setComment(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //评论\n  return utils.postRequest(\n  http + 'setComment',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setFabulousUser\",\nfunction setFabulousUser(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //给评论点赞\n  return utils.postRequest(\n  http + 'setFabulousUser',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getFabulousUserCode\",\nfunction getFabulousUserCode(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取用户点赞状态\n  return utils.getRequest(\n  http + 'getFabulousUserCode/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getLoginCommentReply\",\nfunction getLoginCommentReply(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //二级回复的点赞（评论详情页点赞）\n  return utils.getRequest(\n  http + 'getLoginCommentReply/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setFabulousNews\",\nfunction setFabulousNews(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //点赞新闻\n  return utils.postRequest(\n  http + 'setFabulousNews',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getFabulousNewsCode\",\nfunction getFabulousNewsCode(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //获取新闻点赞状态\n  return utils.getRequest(\n  http + 'getFabulousNewsCode/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"setFollow\",\nfunction setFollow(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //关注作者\n  return utils.postRequest(\n  http + 'setFollow',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getFollowCode\",\nfunction getFollowCode(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { noLoginCanSee: true }; //获取关注作者状态\n  return utils.getRequest(\n  http + 'getFollowCode/' + data.id,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"myCollection\",\n\nfunction myCollection(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取我的收藏\n  return utils.getRequest(\n  http + 'myCollection/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"myFollow\",\nfunction myFollow(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取我的关注\n  return utils.getRequest(\n  http + 'myFollow/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"myFans\",\n\nfunction myFans(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取我的粉丝\n  return utils.getRequest(\n  http + 'myFans/' + data.page,\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"login\",\n\nfunction login(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //用户登陆\n  return utils.postRequest(\n  http + 'login',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getUser\",\nfunction getUser(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取用户信息\n  return utils.getRequest(\n  http + 'getUser',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"phoneLogin\",\nfunction phoneLogin(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //手机号登陆\n  return utils.postRequest(\n  http + 'phoneLogin',\n  data,\n  config);\n\n}), _defineProperty(_module$exports, \"getCode\",\nfunction getCode(data) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //获取验证码\n  return utils.postRequest(\n  http + 'getCode',\n  data,\n  config);\n\n}), _module$exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n");

/***/ }),

/***/ 29:
/*!*************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/http.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.getCommonHeader = getCommonHeader;exports.request = request;exports.getRequest = getRequest;exports.postRequest = postRequest;exports.ajaxUploadFile = ajaxUploadFile;var _common = _interopRequireDefault(__webpack_require__(/*! ./common.js */ 27));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n/**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                     * 获取header\r\n                                                                                                                                                                                                                                                                                                                                                                                                                     */\nfunction getCommonHeader(imgUpload) {\n  var header;\n  if (imgUpload) {\n    header = {\n      'Content-type': 'multipart/form-data' };\n\n  } else {\n    header = {\n      'Content-type': 'application/json;charset=UTF-8' };\n\n  }\n\n  // 如果token有值则带上\n  var token = uni.getStorageSync(\"accesstoken\");\n  // let token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMzA3Nzg4NTQ5OSIsImNyZWF0ZWQiOjE1NzYyMjY5OTQ0NzgsImV4cCI6MTU3NjMxMzM5NH0.KSRIiSiFtdUkXFF7XTUR-ueaOmdZfW93M5QuuVoPW2nIZ5DNlEZpLp6_9lvIrL2MW1LmZnOdrTTKo1u2NlYEDQ\";\n  header = {\n    'accesstoken': token || '0',\n\n\n\n\n    'equipment': 'app' };\n\n\n  return header;\n};\n\n\n/** \r\n    * 网络请求\r\n    * config['noLoginCanSee'] :  无需登陆也可查看     resolve('seeOther')\r\n    */\nfunction request(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"POST\";var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var timeout = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 10000;\n  // header 空值处理\n  var _header = getCommonHeader();\n\n  return new Promise(function (resolve, reject) {\n    uni.request({\n      url: url,\n      data: data,\n      timeout: timeout,\n      header: _header,\n      method: method,\n      success: function success(res) {\n        // 浏览器状态码\n        var statusCode = res.statusCode;\n        // 服务器返回的data\n        var result = res.data;\n        // 服务器 非200 错误\n        if (statusCode == 200) {\n          if (result.status != 1) {\n            uni.showToast({\n              title: result.message,\n              icon: 'none' });\n\n            return;\n          }\n        } else if (statusCode == 401) {\n          if (config.noLoginCanSee) {\n            resolve('seeOther');\n          } else {\n            uni.setStorageSync('userInfo', {\n              defaultHeadImg: \"/static/images/icon/defLogo.png\" });\n\n            uni.showToast({\n              title: result.message,\n              icon: 'none' });\n\n            uni.navigateTo({\n              url: '/pages/login' });\n\n            return;\n          }\n        } else if (statusCode == 404) {\n          uni.showToast({\n            title: '网络错误--' + err.errMsg,\n            icon: 'none' });\n\n          return;\n        }\n        resolve(result.data);\n      },\n      fail: function fail(err) {\n        if (err.errMsg == \"request:fail timeout\" || err.errMsg.includes(\"时\")) {\n          uni.showToast({\n            title: '请求超时',\n            icon: 'none' });\n\n        } else if (err.errMsg == \"request:fail\") {\n          // uni.showToast({\n          // \ttitle: '网络错误--'+err.errMsg,\n          // \ticon: 'none'\n          // });\n        }\n        reject(err);\n        return;\n      } });\n\n  });\n\n};\n\n/**\r\n    * 请求状态码\r\n    * @param {Object} s\r\n    */\nfunction checkCode(s) {\n  return new Promise(function (resolve, reject) {\n    switch (Number(s)) {\n      case 1:\n        uni.showToast({\n          title: '服务器 ' + result.status + ' 错误',\n          icon: 'none' });\n\n        resolve(result.data);\n        return;\n        break;\n      case 401:\n        uni.setStorageSync('userInfo', {\n          defaultHeadImg: \"/static/images/icon/defLogo.png\" });\n\n        uni.navigateTo({\n          url: '/pages/login' });\n\n        return;\n        break;\n      default:\n        break;}\n\n\n  });\n}\n\n\n/**\r\n   * get 网络请求\r\n   */\nfunction getRequest(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return request(url, data, \"GET\", config);\n}\n\n/**\r\n   * post 网络请求 \r\n   */\nfunction postRequest(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var timeout = arguments.length > 3 ? arguments[3] : undefined;\n  return request(url, data, \"POST\", config, timeout);\n}\n\n/**\r\n   * 文件上传\r\n   */\n\nfunction ajaxUploadFile(url, tempFilePaths) {var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var headerConfig = getCommonHeader(1);\n  return new Promise(function (resolve, reject) {\n    __f__(\"log\", '上传的图片文件为' + tempFilePaths, \" at common\\\\http.js:160\");\n    var uploadTask = uni.uploadFile({\n      url: url,\n      filePath: tempFilePaths.file,\n      name: 'file',\n      header: headerConfig,\n      success: function success(res) {\n        // 服务器 非200 错误\n        if (res.status && res.status != 200) {\n          uni.showToast({\n            title: '服务器 ' + res.status + ' 错误',\n            icon: 'none' });\n\n          resolve(res);\n          return;\n        } else if (res.data.code == 2001) {//token过期了，重新登录\n          uni.reLaunch({\n            url: '/pages/login/index' });\n\n        }\n        resolve(res.data);\n      },\n      fail: function fail(err) {\n        if (err.errMsg.indexOf('url not in domain list') > -1) {\n          uni.showToast({\n            title: '请求url不在合法域名中，请打开调试模式',\n            icon: 'none' });\n\n        }\n        reject(err);\n      } });\n\n    uploadTask.onProgressUpdate(function (res) {\n      __f__(\"log\", '上传进度', res.progress, \" at common\\\\http.js:193\");\n    });\n  });\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n");

/***/ }),

/***/ 298:
/*!**********************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/app-share/utils/share.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = _default;exports.closeShare = void 0;function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\nvar alphaBg, shareMenu;\n// 关闭弹窗\nvar closeShare = function closeShare() {\n  alphaBg && alphaBg.close();\n  alphaBg && shareMenu.close();\n};\n// 复制\nexports.closeShare = closeShare;function onCopy(item, shareInfo, callback) {\n  var copyInfo = shareInfo.shareUrl || shareInfo.shareContent || shareInfo.shareImg;\n  if (copyInfo) {\n    uni.setClipboardData({\n      data: copyInfo,\n      success: function success() {\n        uni.showToast({\n          title: \"已复制到剪贴板\",\n          icon: \"none\" });\n\n        callback && callback(item);\n      } });\n\n  }\n}\n// 更多\nfunction onMore(item, shareInfo, callback) {\n  plus.share.sendWithSystem({\n    type: \"text\",\n    title: shareInfo.shareTitle || \"\",\n    href: shareInfo.shareUrl || \"\",\n    content: shareInfo.shareContent || \"\" },\n  function (res) {\n    callback && callback(item);\n  }, function (err) {\n    __f__(\"log\", err, \" at components\\\\app-share\\\\utils\\\\share.js:34\");\n  });\n}\n// 分享\nfunction onShare(item, shareInfo, callback) {\n  if (shareInfo.type == undefined) {\n    shareInfo.type = item.type;\n  }\n  var shareObj = {\n    provider: item.provider,\n    type: shareInfo.type,\n    success: function success(res) {\n      callback && callback(item);\n      __f__(\"log\", \"success:\" + JSON.stringify(res), \" at components\\\\app-share\\\\utils\\\\share.js:47\");\n    },\n    fail: function fail(err) {\n      __f__(\"log\", \"分享失败，参数缺失 fail:\" + JSON.stringify(err), \" at components\\\\app-share\\\\utils\\\\share.js:50\");\n    } };\n\n  if (shareInfo.shareTitle) {\n    shareObj.title = shareInfo.shareTitle;\n  } else if (item.provider == \"qq\") {\n    uni.showToast({\n      title: \"缺失分享的标题\",\n      icon: \"none\" });\n\n    return;\n  }\n  if (shareInfo.type == 0 || item.provider == \"qq\") {\n    if (shareInfo.shareUrl) {\n      shareObj.href = shareInfo.shareUrl;\n    } else {\n      uni.showToast({\n        title: \"缺失分享的地址\",\n        icon: \"none\" });\n\n      return;\n    }\n  }\n  if ([0, 1, 3, 4].includes(shareInfo.type)) {\n    if (shareInfo.shareContent) {\n      shareObj.summary = shareInfo.shareContent;\n    } else {\n      uni.showToast({\n        title: \"缺失分享的描述\",\n        icon: \"none\" });\n\n      return;\n    }\n  }\n  if ([0, 2, 5].includes(shareInfo.type)) {\n    if (shareInfo.shareImg) {\n      shareObj.imageUrl = shareInfo.shareImg;\n    } else {\n      uni.showToast({\n        title: \"缺失分享的图片\",\n        icon: \"none\" });\n\n      return;\n    }\n  }\n  if ([3, 4].includes(shareInfo.type)) {\n    if (shareInfo.mediaUrl) {\n      shareObj.mediaUrl = shareInfo.mediaUrl;\n    } else {\n      uni.showToast({\n        title: \"缺失分享的音视频地址\",\n        icon: \"none\" });\n\n      return;\n    }\n  }\n  if (shareInfo.type == 5) {\n    if (shareInfo.appId && shareInfo.appPath && shareInfo.appWebUrl) {\n      shareObj.miniProgram = {\n        id: shareInfo.appId,\n        path: shareInfo.appPath,\n        webUrl: shareInfo.appWebUrl };\n\n      if (shareInfo.appType) {\n        shareObj.miniProgram.type = shareInfo.appType;\n      }\n    } else {\n      uni.showToast({\n        title: \"缺失分享小程序的参数\",\n        icon: \"none\" });\n\n      return;\n    }\n  }\n\n  if (item.scene) {\n    shareObj.scene = item.scene;\n  }\n  uni.share(shareObj);\n}\nvar otherShareList = [\n  // {\n  // \ticon: \"/static/share/icon_copy.png\",\n  // \ttext: \"复制\",\n  // \tprovider: \"copy\",\n  // \tonClick: onCopy\n  // },\n  // {\n  // \ticon: \"/static/share/icon_more.png\",\n  // \ttext: \"更多\",\n  // \tprovider: \"more\",\n  // \tonClick: onMore\n  // }\n];\nvar platformShareList = [];\n// 获取服务商支持的分享\nuni.getProvider({\n  service: 'share',\n  success: function success(res) {\n    if (res.provider.includes('sinaweibo')) {\n      platformShareList = [{\n        icon: \"../static/share/icon_weibo.png\",\n        text: \"新浪微博\",\n        onClick: onShare,\n        provider: \"sinaweibo\",\n        type: 0 }].\n      concat(platformShareList);\n    }\n    if (res.provider.includes('qq')) {\n      platformShareList = [{\n        icon: \"/components/app-share/static/share/icon_qq.png\",\n        text: \"QQ\",\n        onClick: onShare,\n        provider: \"qq\",\n        type: 1 }].\n      concat(platformShareList);\n    }\n    if (res.provider.includes('weixin')) {\n      platformShareList = [{\n        icon: \"/components/app-share/static/share/icon_weixin.png\",\n        text: \"微信好友\",\n        onClick: onShare,\n        provider: \"weixin\",\n        scene: \"WXSceneSession\",\n        type: 0 },\n\n      {\n        icon: \"/components/app-share/static/share/icon_pengyouquan.png\",\n        text: \"朋友圈\",\n        onClick: onShare,\n        provider: \"weixin\",\n        scene: \"WXSenceTimeline\",\n        type: 0 },\n\n      {\n        icon: \"/components/app-share/static/share/ic_xiaochengxu.png\",\n        text: \"小程序\",\n        onClick: onShare,\n        provider: \"weixin\",\n        scene: \"WXSceneSession\",\n        type: 5 }].\n      concat(platformShareList);\n    }\n  } });\n\n// 根据type类型过滤掉不支持的平台\nfunction platformFilter(data) {\n  var platformList = [];\n  var supportList = [\n  [\"weixin\", \"sinaweibo\"],\n  [\"weixin\", \"sinaweibo\", \"qq\"],\n  [\"weixin\", \"sinaweibo\", \"qq\"],\n  [\"weixin\", \"qq\"],\n  [\"weixin\", \"sinaweibo\"],\n  [\"weixin\"]];\n\n  var currentSupport = [];\n  if (data.type >= 0 && data.type <= 5) {\n    currentSupport = supportList[data.type];\n  }\n  platformShareList.forEach(function (item, index) {\n    if (data.type >= 0 && data.type <= 5) {\n      if (currentSupport.includes(item.provider)) {\n        if (item.provider == \"weixin\") {\n          if (item.text == \"小程序\") {\n            if (data.type == 5) {\n              platformList.push(item);\n            }\n          } else if (data.type !== 5) {\n            platformList.push(item);\n          }\n        } else {\n          platformList.push(item);\n        }\n      }\n    } else {\n      if (item.provider == \"weixin\") {\n        if (item.text == \"小程序\") {\n          if (data.appId && data.appPath) {\n            platformList.push(item);\n          }\n        } else {\n          platformList.push(item);\n        }\n      } else {\n        platformList.push(item);\n      }\n    }\n  });\n  return platformList.concat(otherShareList);\n}\n// 数据处理\nfunction dataFactory() {var shareInfo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var config = _objectSpread({},\n  shareInfo);\n\n  config.shareUrl = shareInfo.shareUrl || \"\";\n  config.shareContent = shareInfo.shareContent || \"分享的描述\";\n  config.shareImg = shareInfo.shareImg || \"分享的图片\";\n  return config;\n}\nfunction _default(shareInfo, callback) {\n  shareInfo = dataFactory(shareInfo);\n  // 以下为计算菜单的nview绘制布局，为固定算法，使用者无关关心\n  var screenWidth = plus.screen.resolutionWidth;\n  //以360px宽度屏幕为例，上下左右边距及2排按钮边距留25像素，图标宽度55像素，同行图标间的间距在360宽的屏幕是30px，但需要动态计算，以此原则计算4列图标分别的left位置\n  //图标下的按钮文字距离图标5像素，文字大小12像素\n  //底部取消按钮高度固定为44px\n  //TODO 未处理横屏和pad，这些情况6个图标应该一排即可\n  var marginTop = 25, //上间距\n  marginLeft = 25, //左间距\n  iconWidth = 55, //图标宽宽\n  iconHeight = 55, //图标高度\n  icontextSpace = 10, //图标与文字间距\n  textHeight = 12; //文字大小\n  var left1 = marginLeft / 360 * screenWidth;\n  var colNumber = Math.floor(screenWidth / (iconWidth + marginLeft));\n  var i = (screenWidth - (iconWidth + marginLeft) * colNumber - marginLeft) / (colNumber + 1);\n  var initMargin = marginLeft + i;\n  var itemWidth = iconWidth + initMargin;\n  var itemHeight = iconHeight + icontextSpace + textHeight + marginTop;\n  var textTop = iconHeight + icontextSpace;\n  alphaBg = new plus.nativeObj.View(\"alphaBg\", { //先创建遮罩层\n    top: '0px',\n    left: '0px',\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'rgba(0,0,0,0.5)' });\n\n  alphaBg.addEventListener(\"click\", function () {//处理遮罩层点击\n    alphaBg.close();\n    shareMenu.close();\n  });\n  var shareList = platformFilter(shareInfo);\n  shareMenu = new plus.nativeObj.View(\"shareMenu\", { //创建底部图标菜单\n    bottom: '0px',\n    left: '0px',\n    height: Math.ceil(shareList.length / colNumber) * itemHeight + marginTop + 44 + 1 + 'px',\n    width: '100%',\n    backgroundColor: 'rgb(255,255,255)' });\n\n  //绘制底部图标菜单的内容\n  shareMenu.draw([{\n    tag: 'rect', //菜单顶部的分割灰线\n    color: '#e7e7e7',\n    position: {\n      top: '0px',\n      height: '1px' } },\n\n\n  {\n    tag: 'font',\n    id: 'sharecancel', //底部取消按钮的文字\n    text: '取消分享',\n    textStyles: {\n      size: '14px' },\n\n    position: {\n      bottom: '0px',\n      height: '44px' } },\n\n\n  {\n    tag: 'rect', //底部取消按钮的顶部边线\n    color: '#e7e7e7',\n    position: {\n      bottom: '45px',\n      height: '1px' } }]);\n\n\n\n  shareList.map(function (v, k) {\n    var time = new Date().getTime();\n    var row = Math.floor(k / colNumber);\n    var col = k % colNumber;\n    var item = [{\n      src: v.icon,\n      id: Math.random() * 1000 + time,\n      tag: \"img\",\n      position: {\n        top: row * itemHeight + marginTop,\n        left: col * itemWidth + initMargin,\n        width: iconWidth,\n        height: iconWidth } },\n\n    {\n      text: v.text,\n      id: Math.random() * 1000 + time,\n      tag: \"font\",\n      textStyles: {\n        size: textHeight },\n\n      position: {\n        top: row * itemHeight + textTop,\n        left: col * itemWidth + initMargin,\n        width: iconWidth,\n        height: iconWidth } }];\n\n\n    shareMenu.draw(item);\n  });\n  shareMenu.addEventListener(\"click\", function (e) {//处理底部图标菜单的点击事件，根据点击位置触发不同的逻辑\n    if (e.screenY > plus.screen.resolutionHeight - 44) {//点击了底部取消按钮\n      alphaBg.close();\n      shareMenu.close();\n    } else if (e.clientX < 5 || e.clientX > screenWidth - 5 || e.clientY < 5) {\n      //屏幕左右边缘5像素及菜单顶部5像素不处理点击\n    } else {//点击了图标按钮\n      var x = e.clientX;\n      var y = e.clientY;\n      var colIdx = Math.floor(x / itemWidth);\n      var rowIdx = Math.floor(y / itemHeight);\n      var tapIndex = colIdx + rowIdx * colNumber;\n      shareList[tapIndex].onClick(shareList[tapIndex], shareInfo, callback);\n    }\n  });\n  alphaBg.show();\n  shareMenu.show();\n  return {\n    close: function close() {\n      alphaBg && alphaBg.close();\n      alphaBg && shareMenu.close();\n    } };\n\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9hcHAtc2hhcmUvdXRpbHMvc2hhcmUuanMiXSwibmFtZXMiOlsiYWxwaGFCZyIsInNoYXJlTWVudSIsImNsb3NlU2hhcmUiLCJjbG9zZSIsIm9uQ29weSIsIml0ZW0iLCJzaGFyZUluZm8iLCJjYWxsYmFjayIsImNvcHlJbmZvIiwic2hhcmVVcmwiLCJzaGFyZUNvbnRlbnQiLCJzaGFyZUltZyIsInVuaSIsInNldENsaXBib2FyZERhdGEiLCJkYXRhIiwic3VjY2VzcyIsInNob3dUb2FzdCIsInRpdGxlIiwiaWNvbiIsIm9uTW9yZSIsInBsdXMiLCJzaGFyZSIsInNlbmRXaXRoU3lzdGVtIiwidHlwZSIsInNoYXJlVGl0bGUiLCJocmVmIiwiY29udGVudCIsInJlcyIsImVyciIsIm9uU2hhcmUiLCJ1bmRlZmluZWQiLCJzaGFyZU9iaiIsInByb3ZpZGVyIiwiSlNPTiIsInN0cmluZ2lmeSIsImZhaWwiLCJpbmNsdWRlcyIsInN1bW1hcnkiLCJpbWFnZVVybCIsIm1lZGlhVXJsIiwiYXBwSWQiLCJhcHBQYXRoIiwiYXBwV2ViVXJsIiwibWluaVByb2dyYW0iLCJpZCIsInBhdGgiLCJ3ZWJVcmwiLCJhcHBUeXBlIiwic2NlbmUiLCJvdGhlclNoYXJlTGlzdCIsInBsYXRmb3JtU2hhcmVMaXN0IiwiZ2V0UHJvdmlkZXIiLCJzZXJ2aWNlIiwidGV4dCIsIm9uQ2xpY2siLCJjb25jYXQiLCJwbGF0Zm9ybUZpbHRlciIsInBsYXRmb3JtTGlzdCIsInN1cHBvcnRMaXN0IiwiY3VycmVudFN1cHBvcnQiLCJmb3JFYWNoIiwiaW5kZXgiLCJwdXNoIiwiZGF0YUZhY3RvcnkiLCJjb25maWciLCJzY3JlZW5XaWR0aCIsInNjcmVlbiIsInJlc29sdXRpb25XaWR0aCIsIm1hcmdpblRvcCIsIm1hcmdpbkxlZnQiLCJpY29uV2lkdGgiLCJpY29uSGVpZ2h0IiwiaWNvbnRleHRTcGFjZSIsInRleHRIZWlnaHQiLCJsZWZ0MSIsImNvbE51bWJlciIsIk1hdGgiLCJmbG9vciIsImkiLCJpbml0TWFyZ2luIiwiaXRlbVdpZHRoIiwiaXRlbUhlaWdodCIsInRleHRUb3AiLCJuYXRpdmVPYmoiLCJWaWV3IiwidG9wIiwibGVmdCIsImhlaWdodCIsIndpZHRoIiwiYmFja2dyb3VuZENvbG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNoYXJlTGlzdCIsImJvdHRvbSIsImNlaWwiLCJsZW5ndGgiLCJkcmF3IiwidGFnIiwiY29sb3IiLCJwb3NpdGlvbiIsInRleHRTdHlsZXMiLCJzaXplIiwibWFwIiwidiIsImsiLCJ0aW1lIiwiRGF0ZSIsImdldFRpbWUiLCJyb3ciLCJjb2wiLCJzcmMiLCJyYW5kb20iLCJlIiwic2NyZWVuWSIsInJlc29sdXRpb25IZWlnaHQiLCJjbGllbnRYIiwiY2xpZW50WSIsIngiLCJ5IiwiY29sSWR4Iiwicm93SWR4IiwidGFwSW5kZXgiLCJzaG93Il0sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSUEsT0FBSixFQUFhQyxTQUFiO0FBQ0E7QUFDTyxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxHQUFVO0FBQ25DRixTQUFPLElBQUlBLE9BQU8sQ0FBQ0csS0FBUixFQUFYO0FBQ0FILFNBQU8sSUFBSUMsU0FBUyxDQUFDRSxLQUFWLEVBQVg7QUFDQSxDQUhNO0FBSVA7Z0NBQ0EsU0FBU0MsTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0JDLFNBQXRCLEVBQWdDQyxRQUFoQyxFQUEwQztBQUN6QyxNQUFJQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csUUFBVixJQUFzQkgsU0FBUyxDQUFDSSxZQUFoQyxJQUFnREosU0FBUyxDQUFDSyxRQUF6RTtBQUNBLE1BQUlILFFBQUosRUFBYztBQUNiSSxPQUFHLENBQUNDLGdCQUFKLENBQXFCO0FBQ3BCQyxVQUFJLEVBQUVOLFFBRGM7QUFFcEJPLGFBQU8sRUFBQyxtQkFBTTtBQUNiSCxXQUFHLENBQUNJLFNBQUosQ0FBYztBQUNiQyxlQUFLLEVBQUUsU0FETTtBQUViQyxjQUFJLEVBQUUsTUFGTyxFQUFkOztBQUlBWCxnQkFBUSxJQUFJQSxRQUFRLENBQUNGLElBQUQsQ0FBcEI7QUFDQSxPQVJtQixFQUFyQjs7QUFVQTtBQUNEO0FBQ0Q7QUFDQSxTQUFTYyxNQUFULENBQWdCZCxJQUFoQixFQUFzQkMsU0FBdEIsRUFBZ0NDLFFBQWhDLEVBQTBDO0FBQ3pDYSxNQUFJLENBQUNDLEtBQUwsQ0FBV0MsY0FBWCxDQUEwQjtBQUN6QkMsUUFBSSxFQUFFLE1BRG1CO0FBRXpCTixTQUFLLEVBQUVYLFNBQVMsQ0FBQ2tCLFVBQVYsSUFBd0IsRUFGTjtBQUd6QkMsUUFBSSxFQUFFbkIsU0FBUyxDQUFDRyxRQUFWLElBQXNCLEVBSEg7QUFJekJpQixXQUFPLEVBQUVwQixTQUFTLENBQUNJLFlBQVYsSUFBMEIsRUFKVixFQUExQjtBQUtFLFlBQVNpQixHQUFULEVBQWE7QUFDZHBCLFlBQVEsSUFBSUEsUUFBUSxDQUFDRixJQUFELENBQXBCO0FBQ0EsR0FQRCxFQU9FLFVBQVN1QixHQUFULEVBQWE7QUFDZCxpQkFBWUEsR0FBWjtBQUNBLEdBVEQ7QUFVQTtBQUNEO0FBQ0EsU0FBU0MsT0FBVCxDQUFpQnhCLElBQWpCLEVBQXVCQyxTQUF2QixFQUFpQ0MsUUFBakMsRUFBMkM7QUFDMUMsTUFBSUQsU0FBUyxDQUFDaUIsSUFBVixJQUFrQk8sU0FBdEIsRUFBaUM7QUFDaEN4QixhQUFTLENBQUNpQixJQUFWLEdBQWlCbEIsSUFBSSxDQUFDa0IsSUFBdEI7QUFDQTtBQUNELE1BQUlRLFFBQVEsR0FBRztBQUNkQyxZQUFRLEVBQUUzQixJQUFJLENBQUMyQixRQUREO0FBRWRULFFBQUksRUFBRWpCLFNBQVMsQ0FBQ2lCLElBRkY7QUFHZFIsV0FBTyxFQUFFLGlCQUFDWSxHQUFELEVBQVM7QUFDakJwQixjQUFRLElBQUlBLFFBQVEsQ0FBQ0YsSUFBRCxDQUFwQjtBQUNBLG1CQUFZLGFBQWE0QixJQUFJLENBQUNDLFNBQUwsQ0FBZVAsR0FBZixDQUF6QjtBQUNBLEtBTmE7QUFPZFEsUUFBSSxFQUFFLGNBQUNQLEdBQUQsRUFBUztBQUNkLG1CQUFZLG9CQUFvQkssSUFBSSxDQUFDQyxTQUFMLENBQWVOLEdBQWYsQ0FBaEM7QUFDQSxLQVRhLEVBQWY7O0FBV0EsTUFBSXRCLFNBQVMsQ0FBQ2tCLFVBQWQsRUFBMEI7QUFDekJPLFlBQVEsQ0FBQ2QsS0FBVCxHQUFpQlgsU0FBUyxDQUFDa0IsVUFBM0I7QUFDQSxHQUZELE1BRU0sSUFBR25CLElBQUksQ0FBQzJCLFFBQUwsSUFBaUIsSUFBcEIsRUFBeUI7QUFDOUJwQixPQUFHLENBQUNJLFNBQUosQ0FBYztBQUNiQyxXQUFLLEVBQUUsU0FETTtBQUViQyxVQUFJLEVBQUUsTUFGTyxFQUFkOztBQUlBO0FBQ0E7QUFDRCxNQUFHWixTQUFTLENBQUNpQixJQUFWLElBQWtCLENBQWxCLElBQXVCbEIsSUFBSSxDQUFDMkIsUUFBTCxJQUFpQixJQUEzQyxFQUFnRDtBQUMvQyxRQUFJMUIsU0FBUyxDQUFDRyxRQUFkLEVBQXdCO0FBQ3ZCc0IsY0FBUSxDQUFDTixJQUFULEdBQWdCbkIsU0FBUyxDQUFDRyxRQUExQjtBQUNBLEtBRkQsTUFFSztBQUNKRyxTQUFHLENBQUNJLFNBQUosQ0FBYztBQUNiQyxhQUFLLEVBQUUsU0FETTtBQUViQyxZQUFJLEVBQUUsTUFGTyxFQUFkOztBQUlBO0FBQ0E7QUFDRDtBQUNELE1BQUcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVVrQixRQUFWLENBQW1COUIsU0FBUyxDQUFDaUIsSUFBN0IsQ0FBSCxFQUFzQztBQUNyQyxRQUFJakIsU0FBUyxDQUFDSSxZQUFkLEVBQTRCO0FBQzNCcUIsY0FBUSxDQUFDTSxPQUFULEdBQW1CL0IsU0FBUyxDQUFDSSxZQUE3QjtBQUNBLEtBRkQsTUFFSztBQUNKRSxTQUFHLENBQUNJLFNBQUosQ0FBYztBQUNiQyxhQUFLLEVBQUUsU0FETTtBQUViQyxZQUFJLEVBQUUsTUFGTyxFQUFkOztBQUlBO0FBQ0E7QUFDRDtBQUNELE1BQUcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBUWtCLFFBQVIsQ0FBaUI5QixTQUFTLENBQUNpQixJQUEzQixDQUFILEVBQW9DO0FBQ25DLFFBQUlqQixTQUFTLENBQUNLLFFBQWQsRUFBd0I7QUFDdkJvQixjQUFRLENBQUNPLFFBQVQsR0FBb0JoQyxTQUFTLENBQUNLLFFBQTlCO0FBQ0EsS0FGRCxNQUVLO0FBQ0pDLFNBQUcsQ0FBQ0ksU0FBSixDQUFjO0FBQ2JDLGFBQUssRUFBRSxTQURNO0FBRWJDLFlBQUksRUFBRSxNQUZPLEVBQWQ7O0FBSUE7QUFDQTtBQUNEO0FBQ0QsTUFBRyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQU1rQixRQUFOLENBQWU5QixTQUFTLENBQUNpQixJQUF6QixDQUFILEVBQWtDO0FBQ2pDLFFBQUlqQixTQUFTLENBQUNpQyxRQUFkLEVBQXdCO0FBQ3ZCUixjQUFRLENBQUNRLFFBQVQsR0FBb0JqQyxTQUFTLENBQUNpQyxRQUE5QjtBQUNBLEtBRkQsTUFFSztBQUNKM0IsU0FBRyxDQUFDSSxTQUFKLENBQWM7QUFDYkMsYUFBSyxFQUFFLFlBRE07QUFFYkMsWUFBSSxFQUFFLE1BRk8sRUFBZDs7QUFJQTtBQUNBO0FBQ0Q7QUFDRCxNQUFHWixTQUFTLENBQUNpQixJQUFWLElBQWtCLENBQXJCLEVBQXVCO0FBQ3RCLFFBQUlqQixTQUFTLENBQUNrQyxLQUFWLElBQW1CbEMsU0FBUyxDQUFDbUMsT0FBN0IsSUFBd0NuQyxTQUFTLENBQUNvQyxTQUF0RCxFQUFpRTtBQUNoRVgsY0FBUSxDQUFDWSxXQUFULEdBQXVCO0FBQ3RCQyxVQUFFLEVBQUN0QyxTQUFTLENBQUNrQyxLQURTO0FBRXRCSyxZQUFJLEVBQUN2QyxTQUFTLENBQUNtQyxPQUZPO0FBR3RCSyxjQUFNLEVBQUN4QyxTQUFTLENBQUNvQyxTQUhLLEVBQXZCOztBQUtBLFVBQUdwQyxTQUFTLENBQUN5QyxPQUFiLEVBQXFCO0FBQ3BCaEIsZ0JBQVEsQ0FBQ1ksV0FBVCxDQUFxQnBCLElBQXJCLEdBQTRCakIsU0FBUyxDQUFDeUMsT0FBdEM7QUFDQTtBQUNELEtBVEQsTUFTSztBQUNKbkMsU0FBRyxDQUFDSSxTQUFKLENBQWM7QUFDYkMsYUFBSyxFQUFFLFlBRE07QUFFYkMsWUFBSSxFQUFFLE1BRk8sRUFBZDs7QUFJQTtBQUNBO0FBQ0Q7O0FBRUQsTUFBSWIsSUFBSSxDQUFDMkMsS0FBVCxFQUFnQjtBQUNmakIsWUFBUSxDQUFDaUIsS0FBVCxHQUFpQjNDLElBQUksQ0FBQzJDLEtBQXRCO0FBQ0E7QUFDRHBDLEtBQUcsQ0FBQ1MsS0FBSixDQUFVVSxRQUFWO0FBQ0E7QUFDRCxJQUFJa0IsY0FBYyxHQUFHO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpvQixDQUFyQjtBQWNBLElBQUlDLGlCQUFpQixHQUFHLEVBQXhCO0FBQ0E7QUFDQXRDLEdBQUcsQ0FBQ3VDLFdBQUosQ0FBZ0I7QUFDZkMsU0FBTyxFQUFFLE9BRE07QUFFZnJDLFNBQU8sRUFBRSxpQkFBVVksR0FBVixFQUFlO0FBQ3ZCLFFBQUlBLEdBQUcsQ0FBQ0ssUUFBSixDQUFhSSxRQUFiLENBQXNCLFdBQXRCLENBQUosRUFBd0M7QUFDdkNjLHVCQUFpQixHQUFHLENBQUM7QUFDcEJoQyxZQUFJLEVBQUUsZ0NBRGM7QUFFcEJtQyxZQUFJLEVBQUUsTUFGYztBQUdwQkMsZUFBTyxFQUFFekIsT0FIVztBQUlwQkcsZ0JBQVEsRUFBRSxXQUpVO0FBS3BCVCxZQUFJLEVBQUUsQ0FMYyxFQUFEO0FBTWpCZ0MsWUFOaUIsQ0FNVkwsaUJBTlUsQ0FBcEI7QUFPQTtBQUNELFFBQUl2QixHQUFHLENBQUNLLFFBQUosQ0FBYUksUUFBYixDQUFzQixJQUF0QixDQUFKLEVBQWlDO0FBQ2hDYyx1QkFBaUIsR0FBRyxDQUFDO0FBQ3BCaEMsWUFBSSxFQUFFLGdEQURjO0FBRXBCbUMsWUFBSSxFQUFFLElBRmM7QUFHcEJDLGVBQU8sRUFBRXpCLE9BSFc7QUFJcEJHLGdCQUFRLEVBQUUsSUFKVTtBQUtwQlQsWUFBSSxFQUFFLENBTGMsRUFBRDtBQU1qQmdDLFlBTmlCLENBTVZMLGlCQU5VLENBQXBCO0FBT0E7QUFDRCxRQUFJdkIsR0FBRyxDQUFDSyxRQUFKLENBQWFJLFFBQWIsQ0FBc0IsUUFBdEIsQ0FBSixFQUFxQztBQUNwQ2MsdUJBQWlCLEdBQUcsQ0FBQztBQUNwQmhDLFlBQUksRUFBRSxvREFEYztBQUVwQm1DLFlBQUksRUFBRSxNQUZjO0FBR3BCQyxlQUFPLEVBQUV6QixPQUhXO0FBSXBCRyxnQkFBUSxFQUFFLFFBSlU7QUFLcEJnQixhQUFLLEVBQUUsZ0JBTGE7QUFNcEJ6QixZQUFJLEVBQUUsQ0FOYyxFQUFEOztBQVFwQjtBQUNDTCxZQUFJLEVBQUUseURBRFA7QUFFQ21DLFlBQUksRUFBRSxLQUZQO0FBR0NDLGVBQU8sRUFBRXpCLE9BSFY7QUFJQ0csZ0JBQVEsRUFBRSxRQUpYO0FBS0NnQixhQUFLLEVBQUUsaUJBTFI7QUFNQ3pCLFlBQUksRUFBRSxDQU5QLEVBUm9COztBQWdCcEI7QUFDQ0wsWUFBSSxFQUFFLHVEQURQO0FBRUNtQyxZQUFJLEVBQUUsS0FGUDtBQUdDQyxlQUFPLEVBQUV6QixPQUhWO0FBSUNHLGdCQUFRLEVBQUUsUUFKWDtBQUtDZ0IsYUFBSyxFQUFFLGdCQUxSO0FBTUN6QixZQUFJLEVBQUUsQ0FOUCxFQWhCb0I7QUF1QmpCZ0MsWUF2QmlCLENBdUJWTCxpQkF2QlUsQ0FBcEI7QUF3QkE7QUFDRCxHQS9DYyxFQUFoQjs7QUFpREE7QUFDQSxTQUFTTSxjQUFULENBQXdCMUMsSUFBeEIsRUFBNkI7QUFDNUIsTUFBSTJDLFlBQVksR0FBRyxFQUFuQjtBQUNBLE1BQUlDLFdBQVcsR0FBRztBQUNqQixHQUFDLFFBQUQsRUFBVSxXQUFWLENBRGlCO0FBRWpCLEdBQUMsUUFBRCxFQUFVLFdBQVYsRUFBc0IsSUFBdEIsQ0FGaUI7QUFHakIsR0FBQyxRQUFELEVBQVUsV0FBVixFQUFzQixJQUF0QixDQUhpQjtBQUlqQixHQUFDLFFBQUQsRUFBVSxJQUFWLENBSmlCO0FBS2pCLEdBQUMsUUFBRCxFQUFVLFdBQVYsQ0FMaUI7QUFNakIsR0FBQyxRQUFELENBTmlCLENBQWxCOztBQVFBLE1BQUlDLGNBQWMsR0FBRyxFQUFyQjtBQUNBLE1BQUc3QyxJQUFJLENBQUNTLElBQUwsSUFBYSxDQUFiLElBQWtCVCxJQUFJLENBQUNTLElBQUwsSUFBYSxDQUFsQyxFQUFvQztBQUNuQ29DLGtCQUFjLEdBQUdELFdBQVcsQ0FBQzVDLElBQUksQ0FBQ1MsSUFBTixDQUE1QjtBQUNBO0FBQ0QyQixtQkFBaUIsQ0FBQ1UsT0FBbEIsQ0FBMEIsVUFBQ3ZELElBQUQsRUFBTXdELEtBQU4sRUFBZ0I7QUFDekMsUUFBRy9DLElBQUksQ0FBQ1MsSUFBTCxJQUFhLENBQWIsSUFBa0JULElBQUksQ0FBQ1MsSUFBTCxJQUFhLENBQWxDLEVBQW9DO0FBQ25DLFVBQUdvQyxjQUFjLENBQUN2QixRQUFmLENBQXdCL0IsSUFBSSxDQUFDMkIsUUFBN0IsQ0FBSCxFQUEwQztBQUN6QyxZQUFHM0IsSUFBSSxDQUFDMkIsUUFBTCxJQUFpQixRQUFwQixFQUE2QjtBQUM1QixjQUFHM0IsSUFBSSxDQUFDZ0QsSUFBTCxJQUFhLEtBQWhCLEVBQXNCO0FBQ3JCLGdCQUFHdkMsSUFBSSxDQUFDUyxJQUFMLElBQWEsQ0FBaEIsRUFBa0I7QUFDakJrQywwQkFBWSxDQUFDSyxJQUFiLENBQWtCekQsSUFBbEI7QUFDQTtBQUNELFdBSkQsTUFJTSxJQUFHUyxJQUFJLENBQUNTLElBQUwsS0FBYyxDQUFqQixFQUFtQjtBQUN4QmtDLHdCQUFZLENBQUNLLElBQWIsQ0FBa0J6RCxJQUFsQjtBQUNBO0FBQ0QsU0FSRCxNQVFPO0FBQ05vRCxzQkFBWSxDQUFDSyxJQUFiLENBQWtCekQsSUFBbEI7QUFDQTtBQUNEO0FBQ0QsS0FkRCxNQWNLO0FBQ0osVUFBR0EsSUFBSSxDQUFDMkIsUUFBTCxJQUFpQixRQUFwQixFQUE2QjtBQUM1QixZQUFHM0IsSUFBSSxDQUFDZ0QsSUFBTCxJQUFhLEtBQWhCLEVBQXNCO0FBQ3JCLGNBQUd2QyxJQUFJLENBQUMwQixLQUFMLElBQWMxQixJQUFJLENBQUMyQixPQUF0QixFQUE4QjtBQUM3QmdCLHdCQUFZLENBQUNLLElBQWIsQ0FBa0J6RCxJQUFsQjtBQUNBO0FBQ0QsU0FKRCxNQUlNO0FBQ0xvRCxzQkFBWSxDQUFDSyxJQUFiLENBQWtCekQsSUFBbEI7QUFDQTtBQUNELE9BUkQsTUFRTztBQUNOb0Qsb0JBQVksQ0FBQ0ssSUFBYixDQUFrQnpELElBQWxCO0FBQ0E7QUFDRDtBQUNELEdBNUJEO0FBNkJBLFNBQU9vRCxZQUFZLENBQUNGLE1BQWIsQ0FBb0JOLGNBQXBCLENBQVA7QUFDQTtBQUNEO0FBQ0EsU0FBU2MsV0FBVCxHQUFxQyxLQUFoQnpELFNBQWdCLHVFQUFKLEVBQUk7QUFDcEMsTUFBSTBELE1BQU07QUFDTjFELFdBRE0sQ0FBVjs7QUFHQTBELFFBQU0sQ0FBQ3ZELFFBQVAsR0FBa0JILFNBQVMsQ0FBQ0csUUFBVixJQUFzQixFQUF4QztBQUNBdUQsUUFBTSxDQUFDdEQsWUFBUCxHQUFzQkosU0FBUyxDQUFDSSxZQUFWLElBQTBCLE9BQWhEO0FBQ0FzRCxRQUFNLENBQUNyRCxRQUFQLEdBQWtCTCxTQUFTLENBQUNLLFFBQVYsSUFBc0IsT0FBeEM7QUFDQSxTQUFPcUQsTUFBUDtBQUNBO0FBQ2Msa0JBQVUxRCxTQUFWLEVBQXFCQyxRQUFyQixFQUErQjtBQUM3Q0QsV0FBUyxHQUFHeUQsV0FBVyxDQUFDekQsU0FBRCxDQUF2QjtBQUNBO0FBQ0EsTUFBSTJELFdBQVcsR0FBRzdDLElBQUksQ0FBQzhDLE1BQUwsQ0FBWUMsZUFBOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUlDLFNBQVMsR0FBRyxFQUFoQixFQUFvQjtBQUNuQkMsWUFBVSxHQUFHLEVBRGQsRUFDa0I7QUFDakJDLFdBQVMsR0FBRyxFQUZiLEVBRWlCO0FBQ2hCQyxZQUFVLEdBQUcsRUFIZCxFQUdrQjtBQUNqQkMsZUFBYSxHQUFHLEVBSmpCLEVBSXFCO0FBQ3BCQyxZQUFVLEdBQUcsRUFMZCxDQVI2QyxDQWE1QjtBQUNqQixNQUFJQyxLQUFLLEdBQUdMLFVBQVUsR0FBRyxHQUFiLEdBQW1CSixXQUEvQjtBQUNBLE1BQUlVLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdaLFdBQVcsSUFBSUssU0FBUyxHQUFHRCxVQUFoQixDQUF0QixDQUFoQjtBQUNBLE1BQUlTLENBQUMsR0FBRyxDQUFDYixXQUFXLEdBQUcsQ0FBQ0ssU0FBUyxHQUFHRCxVQUFiLElBQTJCTSxTQUF6QyxHQUFxRE4sVUFBdEQsS0FBcUVNLFNBQVMsR0FBRyxDQUFqRixDQUFSO0FBQ0EsTUFBSUksVUFBVSxHQUFHVixVQUFVLEdBQUdTLENBQTlCO0FBQ0EsTUFBSUUsU0FBUyxHQUFHVixTQUFTLEdBQUdTLFVBQTVCO0FBQ0EsTUFBSUUsVUFBVSxHQUFHVixVQUFVLEdBQUdDLGFBQWIsR0FBNkJDLFVBQTdCLEdBQTBDTCxTQUEzRDtBQUNBLE1BQUljLE9BQU8sR0FBR1gsVUFBVSxHQUFHQyxhQUEzQjtBQUNBeEUsU0FBTyxHQUFHLElBQUlvQixJQUFJLENBQUMrRCxTQUFMLENBQWVDLElBQW5CLENBQXdCLFNBQXhCLEVBQW1DLEVBQUU7QUFDOUNDLE9BQUcsRUFBRSxLQUR1QztBQUU1Q0MsUUFBSSxFQUFFLEtBRnNDO0FBRzVDQyxVQUFNLEVBQUUsTUFIb0M7QUFJNUNDLFNBQUssRUFBRSxNQUpxQztBQUs1Q0MsbUJBQWUsRUFBRSxpQkFMMkIsRUFBbkMsQ0FBVjs7QUFPQXpGLFNBQU8sQ0FBQzBGLGdCQUFSLENBQXlCLE9BQXpCLEVBQWtDLFlBQVksQ0FBRTtBQUMvQzFGLFdBQU8sQ0FBQ0csS0FBUjtBQUNBRixhQUFTLENBQUNFLEtBQVY7QUFDQSxHQUhEO0FBSUEsTUFBSXdGLFNBQVMsR0FBR25DLGNBQWMsQ0FBQ2xELFNBQUQsQ0FBOUI7QUFDQUwsV0FBUyxHQUFHLElBQUltQixJQUFJLENBQUMrRCxTQUFMLENBQWVDLElBQW5CLENBQXdCLFdBQXhCLEVBQXFDLEVBQUU7QUFDbERRLFVBQU0sRUFBRSxLQUR3QztBQUVoRE4sUUFBSSxFQUFFLEtBRjBDO0FBR2hEQyxVQUFNLEVBQUVYLElBQUksQ0FBQ2lCLElBQUwsQ0FBVUYsU0FBUyxDQUFDRyxNQUFWLEdBQW1CbkIsU0FBN0IsSUFBMENNLFVBQTFDLEdBQXVEYixTQUF2RCxHQUFtRSxFQUFuRSxHQUF3RSxDQUF4RSxHQUE0RSxJQUhwQztBQUloRG9CLFNBQUssRUFBRSxNQUp5QztBQUtoREMsbUJBQWUsRUFBRSxrQkFMK0IsRUFBckMsQ0FBWjs7QUFPQTtBQUNBeEYsV0FBUyxDQUFDOEYsSUFBVixDQUFlLENBQUM7QUFDZkMsT0FBRyxFQUFFLE1BRFUsRUFDRjtBQUNiQyxTQUFLLEVBQUUsU0FGUTtBQUdmQyxZQUFRLEVBQUU7QUFDVGIsU0FBRyxFQUFFLEtBREk7QUFFVEUsWUFBTSxFQUFFLEtBRkMsRUFISyxFQUFEOzs7QUFRZjtBQUNDUyxPQUFHLEVBQUUsTUFETjtBQUVDcEQsTUFBRSxFQUFFLGFBRkwsRUFFb0I7QUFDbkJTLFFBQUksRUFBRSxNQUhQO0FBSUM4QyxjQUFVLEVBQUU7QUFDWEMsVUFBSSxFQUFFLE1BREssRUFKYjs7QUFPQ0YsWUFBUSxFQUFFO0FBQ1ROLFlBQU0sRUFBRSxLQURDO0FBRVRMLFlBQU0sRUFBRSxNQUZDLEVBUFgsRUFSZTs7O0FBb0JmO0FBQ0NTLE9BQUcsRUFBRSxNQUROLEVBQ2M7QUFDYkMsU0FBSyxFQUFFLFNBRlI7QUFHQ0MsWUFBUSxFQUFFO0FBQ1ROLFlBQU0sRUFBRSxNQURDO0FBRVRMLFlBQU0sRUFBRSxLQUZDLEVBSFgsRUFwQmUsQ0FBZjs7OztBQTZCQUksV0FBUyxDQUFDVSxHQUFWLENBQWMsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKLEVBQVU7QUFDdkIsUUFBSUMsSUFBSSxHQUFHLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUFYO0FBQ0EsUUFBSUMsR0FBRyxHQUFHL0IsSUFBSSxDQUFDQyxLQUFMLENBQVcwQixDQUFDLEdBQUc1QixTQUFmLENBQVY7QUFDQSxRQUFJaUMsR0FBRyxHQUFHTCxDQUFDLEdBQUc1QixTQUFkO0FBQ0EsUUFBSXRFLElBQUksR0FBRyxDQUFDO0FBQ1h3RyxTQUFHLEVBQUVQLENBQUMsQ0FBQ3BGLElBREk7QUFFWDBCLFFBQUUsRUFBRWdDLElBQUksQ0FBQ2tDLE1BQUwsS0FBZ0IsSUFBaEIsR0FBdUJOLElBRmhCO0FBR1hSLFNBQUcsRUFBRSxLQUhNO0FBSVhFLGNBQVEsRUFBRTtBQUNUYixXQUFHLEVBQUVzQixHQUFHLEdBQUcxQixVQUFOLEdBQW1CYixTQURmO0FBRVRrQixZQUFJLEVBQUVzQixHQUFHLEdBQUc1QixTQUFOLEdBQWtCRCxVQUZmO0FBR1RTLGFBQUssRUFBRWxCLFNBSEU7QUFJVGlCLGNBQU0sRUFBRWpCLFNBSkMsRUFKQyxFQUFEOztBQVVSO0FBQ0ZqQixVQUFJLEVBQUVpRCxDQUFDLENBQUNqRCxJQUROO0FBRUZULFFBQUUsRUFBRWdDLElBQUksQ0FBQ2tDLE1BQUwsS0FBZ0IsSUFBaEIsR0FBdUJOLElBRnpCO0FBR0ZSLFNBQUcsRUFBRSxNQUhIO0FBSUZHLGdCQUFVLEVBQUU7QUFDWEMsWUFBSSxFQUFFM0IsVUFESyxFQUpWOztBQU9GeUIsY0FBUSxFQUFFO0FBQ1RiLFdBQUcsRUFBRXNCLEdBQUcsR0FBRzFCLFVBQU4sR0FBbUJDLE9BRGY7QUFFVEksWUFBSSxFQUFFc0IsR0FBRyxHQUFHNUIsU0FBTixHQUFrQkQsVUFGZjtBQUdUUyxhQUFLLEVBQUVsQixTQUhFO0FBSVRpQixjQUFNLEVBQUVqQixTQUpDLEVBUFIsRUFWUSxDQUFYOzs7QUF3QkFyRSxhQUFTLENBQUM4RixJQUFWLENBQWUxRixJQUFmO0FBQ0EsR0E3QkQ7QUE4QkFKLFdBQVMsQ0FBQ3lGLGdCQUFWLENBQTJCLE9BQTNCLEVBQW9DLFVBQVVxQixDQUFWLEVBQWEsQ0FBRTtBQUNsRCxRQUFJQSxDQUFDLENBQUNDLE9BQUYsR0FBWTVGLElBQUksQ0FBQzhDLE1BQUwsQ0FBWStDLGdCQUFaLEdBQStCLEVBQS9DLEVBQW1ELENBQUU7QUFDcERqSCxhQUFPLENBQUNHLEtBQVI7QUFDQUYsZUFBUyxDQUFDRSxLQUFWO0FBQ0EsS0FIRCxNQUdPLElBQUk0RyxDQUFDLENBQUNHLE9BQUYsR0FBWSxDQUFaLElBQWlCSCxDQUFDLENBQUNHLE9BQUYsR0FBWWpELFdBQVcsR0FBRyxDQUEzQyxJQUFnRDhDLENBQUMsQ0FBQ0ksT0FBRixHQUFZLENBQWhFLEVBQW1FO0FBQ3pFO0FBQ0EsS0FGTSxNQUVBLENBQUU7QUFDUixVQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ0csT0FBVjtBQUNBLFVBQUlHLENBQUMsR0FBR04sQ0FBQyxDQUFDSSxPQUFWO0FBQ0EsVUFBSUcsTUFBTSxHQUFHMUMsSUFBSSxDQUFDQyxLQUFMLENBQVd1QyxDQUFDLEdBQUdwQyxTQUFmLENBQWI7QUFDQSxVQUFJdUMsTUFBTSxHQUFHM0MsSUFBSSxDQUFDQyxLQUFMLENBQVd3QyxDQUFDLEdBQUdwQyxVQUFmLENBQWI7QUFDQSxVQUFJdUMsUUFBUSxHQUFHRixNQUFNLEdBQUdDLE1BQU0sR0FBRzVDLFNBQWpDO0FBQ0FnQixlQUFTLENBQUM2QixRQUFELENBQVQsQ0FBb0JsRSxPQUFwQixDQUE0QnFDLFNBQVMsQ0FBQzZCLFFBQUQsQ0FBckMsRUFBaURsSCxTQUFqRCxFQUEyREMsUUFBM0Q7QUFDQTtBQUNELEdBZEQ7QUFlQVAsU0FBTyxDQUFDeUgsSUFBUjtBQUNBeEgsV0FBUyxDQUFDd0gsSUFBVjtBQUNBLFNBQU87QUFDTnRILFNBQUssRUFBRSxpQkFBVTtBQUNoQkgsYUFBTyxJQUFJQSxPQUFPLENBQUNHLEtBQVIsRUFBWDtBQUNBSCxhQUFPLElBQUlDLFNBQVMsQ0FBQ0UsS0FBVixFQUFYO0FBQ0EsS0FKSyxFQUFQOztBQU1BLEUiLCJmaWxlIjoiMjk4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmxldCBhbHBoYUJnLCBzaGFyZU1lbnU7XHJcbi8vIOWFs+mXreW8ueeql1xyXG5leHBvcnQgY29uc3QgY2xvc2VTaGFyZSA9IGZ1bmN0aW9uKCl7XHJcblx0YWxwaGFCZyAmJiBhbHBoYUJnLmNsb3NlKCk7XHJcblx0YWxwaGFCZyAmJiBzaGFyZU1lbnUuY2xvc2UoKTtcclxufVxyXG4vLyDlpI3liLZcclxuZnVuY3Rpb24gb25Db3B5KGl0ZW0sIHNoYXJlSW5mbyxjYWxsYmFjaykge1xyXG5cdGxldCBjb3B5SW5mbyA9IHNoYXJlSW5mby5zaGFyZVVybCB8fCBzaGFyZUluZm8uc2hhcmVDb250ZW50IHx8IHNoYXJlSW5mby5zaGFyZUltZztcclxuXHRpZiAoY29weUluZm8pIHtcclxuXHRcdHVuaS5zZXRDbGlwYm9hcmREYXRhKHtcclxuXHRcdFx0ZGF0YTogY29weUluZm8sXHJcblx0XHRcdHN1Y2Nlc3M6KCkgPT4ge1xyXG5cdFx0XHRcdHVuaS5zaG93VG9hc3Qoe1xyXG5cdFx0XHRcdFx0dGl0bGU6IFwi5bey5aSN5Yi25Yiw5Ymq6LS05p2/XCIsXHJcblx0XHRcdFx0XHRpY29uOiBcIm5vbmVcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGNhbGxiYWNrICYmIGNhbGxiYWNrKGl0ZW0pO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9IFxyXG59XHJcbi8vIOabtOWkmlxyXG5mdW5jdGlvbiBvbk1vcmUoaXRlbSwgc2hhcmVJbmZvLGNhbGxiYWNrKSB7XHJcblx0cGx1cy5zaGFyZS5zZW5kV2l0aFN5c3RlbSh7XHJcblx0XHR0eXBlOiBcInRleHRcIixcclxuXHRcdHRpdGxlOiBzaGFyZUluZm8uc2hhcmVUaXRsZSB8fCBcIlwiLFxyXG5cdFx0aHJlZjogc2hhcmVJbmZvLnNoYXJlVXJsIHx8IFwiXCIsXHJcblx0XHRjb250ZW50OiBzaGFyZUluZm8uc2hhcmVDb250ZW50IHx8IFwiXCIsXHJcblx0fSxmdW5jdGlvbihyZXMpeyBcclxuXHRcdGNhbGxiYWNrICYmIGNhbGxiYWNrKGl0ZW0pO1xyXG5cdH0sZnVuY3Rpb24oZXJyKXtcclxuXHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0fSk7XHJcbn1cclxuLy8g5YiG5LqrXHJcbmZ1bmN0aW9uIG9uU2hhcmUoaXRlbSwgc2hhcmVJbmZvLGNhbGxiYWNrKSB7XHJcblx0aWYgKHNoYXJlSW5mby50eXBlID09IHVuZGVmaW5lZCkge1xyXG5cdFx0c2hhcmVJbmZvLnR5cGUgPSBpdGVtLnR5cGU7XHJcblx0fVxyXG5cdGxldCBzaGFyZU9iaiA9IHtcclxuXHRcdHByb3ZpZGVyOiBpdGVtLnByb3ZpZGVyLFxyXG5cdFx0dHlwZTogc2hhcmVJbmZvLnR5cGUsXHJcblx0XHRzdWNjZXNzOiAocmVzKSA9PiB7XHJcblx0XHRcdGNhbGxiYWNrICYmIGNhbGxiYWNrKGl0ZW0pO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcInN1Y2Nlc3M6XCIgKyBKU09OLnN0cmluZ2lmeShyZXMpKTtcclxuXHRcdH0sXHJcblx0XHRmYWlsOiAoZXJyKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwi5YiG5Lqr5aSx6LSl77yM5Y+C5pWw57y65aSxIGZhaWw6XCIgKyBKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cdGlmIChzaGFyZUluZm8uc2hhcmVUaXRsZSkge1xyXG5cdFx0c2hhcmVPYmoudGl0bGUgPSBzaGFyZUluZm8uc2hhcmVUaXRsZTtcclxuXHR9ZWxzZSBpZihpdGVtLnByb3ZpZGVyID09IFwicXFcIil7XHJcblx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0dGl0bGU6IFwi57y65aSx5YiG5Lqr55qE5qCH6aKYXCIsXHJcblx0XHRcdGljb246IFwibm9uZVwiXHJcblx0XHR9KTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblx0aWYoc2hhcmVJbmZvLnR5cGUgPT0gMCB8fCBpdGVtLnByb3ZpZGVyID09IFwicXFcIil7XHJcblx0XHRpZiAoc2hhcmVJbmZvLnNoYXJlVXJsKSB7XHJcblx0XHRcdHNoYXJlT2JqLmhyZWYgPSBzaGFyZUluZm8uc2hhcmVVcmw7XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0dW5pLnNob3dUb2FzdCh7XHJcblx0XHRcdFx0dGl0bGU6IFwi57y65aSx5YiG5Lqr55qE5Zyw5Z2AXCIsXHJcblx0XHRcdFx0aWNvbjogXCJub25lXCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHR9XHJcblx0aWYoWzAsMSwzLDRdLmluY2x1ZGVzKHNoYXJlSW5mby50eXBlKSl7XHJcblx0XHRpZiAoc2hhcmVJbmZvLnNoYXJlQ29udGVudCkge1xyXG5cdFx0XHRzaGFyZU9iai5zdW1tYXJ5ID0gc2hhcmVJbmZvLnNoYXJlQ29udGVudDtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHR0aXRsZTogXCLnvLrlpLHliIbkuqvnmoTmj4/ov7BcIixcclxuXHRcdFx0XHRpY29uOiBcIm5vbmVcIlxyXG5cdFx0XHR9KTtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRpZihbMCwyLDVdLmluY2x1ZGVzKHNoYXJlSW5mby50eXBlKSl7XHJcblx0XHRpZiAoc2hhcmVJbmZvLnNoYXJlSW1nKSB7XHJcblx0XHRcdHNoYXJlT2JqLmltYWdlVXJsID0gc2hhcmVJbmZvLnNoYXJlSW1nO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdHVuaS5zaG93VG9hc3Qoe1xyXG5cdFx0XHRcdHRpdGxlOiBcIue8uuWkseWIhuS6q+eahOWbvueJh1wiLFxyXG5cdFx0XHRcdGljb246IFwibm9uZVwiXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0fVxyXG5cdGlmKFszLDRdLmluY2x1ZGVzKHNoYXJlSW5mby50eXBlKSl7XHJcblx0XHRpZiAoc2hhcmVJbmZvLm1lZGlhVXJsKSB7XHJcblx0XHRcdHNoYXJlT2JqLm1lZGlhVXJsID0gc2hhcmVJbmZvLm1lZGlhVXJsO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdHVuaS5zaG93VG9hc3Qoe1xyXG5cdFx0XHRcdHRpdGxlOiBcIue8uuWkseWIhuS6q+eahOmfs+inhumikeWcsOWdgFwiLFxyXG5cdFx0XHRcdGljb246IFwibm9uZVwiXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0fVxyXG5cdGlmKHNoYXJlSW5mby50eXBlID09IDUpe1xyXG5cdFx0aWYgKHNoYXJlSW5mby5hcHBJZCAmJiBzaGFyZUluZm8uYXBwUGF0aCAmJiBzaGFyZUluZm8uYXBwV2ViVXJsKSB7XHJcblx0XHRcdHNoYXJlT2JqLm1pbmlQcm9ncmFtID0ge1xyXG5cdFx0XHRcdGlkOnNoYXJlSW5mby5hcHBJZCxcclxuXHRcdFx0XHRwYXRoOnNoYXJlSW5mby5hcHBQYXRoLFxyXG5cdFx0XHRcdHdlYlVybDpzaGFyZUluZm8uYXBwV2ViVXJsLFxyXG5cdFx0XHR9O1xyXG5cdFx0XHRpZihzaGFyZUluZm8uYXBwVHlwZSl7XHJcblx0XHRcdFx0c2hhcmVPYmoubWluaVByb2dyYW0udHlwZSA9IHNoYXJlSW5mby5hcHBUeXBlO1xyXG5cdFx0XHR9XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0dW5pLnNob3dUb2FzdCh7XHJcblx0XHRcdFx0dGl0bGU6IFwi57y65aSx5YiG5Lqr5bCP56iL5bqP55qE5Y+C5pWwXCIsXHJcblx0XHRcdFx0aWNvbjogXCJub25lXCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHR9XHJcblx0XHRcdFxyXG5cdGlmIChpdGVtLnNjZW5lKSB7XHJcblx0XHRzaGFyZU9iai5zY2VuZSA9IGl0ZW0uc2NlbmU7XHJcblx0fVxyXG5cdHVuaS5zaGFyZShzaGFyZU9iaik7XHJcbn1cclxubGV0IG90aGVyU2hhcmVMaXN0ID0gW1xyXG5cdC8vIHtcclxuXHQvLyBcdGljb246IFwiL3N0YXRpYy9zaGFyZS9pY29uX2NvcHkucG5nXCIsXHJcblx0Ly8gXHR0ZXh0OiBcIuWkjeWItlwiLFxyXG5cdC8vIFx0cHJvdmlkZXI6IFwiY29weVwiLFxyXG5cdC8vIFx0b25DbGljazogb25Db3B5XHJcblx0Ly8gfSxcclxuXHQvLyB7XHJcblx0Ly8gXHRpY29uOiBcIi9zdGF0aWMvc2hhcmUvaWNvbl9tb3JlLnBuZ1wiLFxyXG5cdC8vIFx0dGV4dDogXCLmm7TlpJpcIixcclxuXHQvLyBcdHByb3ZpZGVyOiBcIm1vcmVcIixcclxuXHQvLyBcdG9uQ2xpY2s6IG9uTW9yZVxyXG5cdC8vIH1cclxuXTtcclxubGV0IHBsYXRmb3JtU2hhcmVMaXN0ID0gW107XHJcbi8vIOiOt+WPluacjeWKoeWVhuaUr+aMgeeahOWIhuS6q1xyXG51bmkuZ2V0UHJvdmlkZXIoe1xyXG5cdHNlcnZpY2U6ICdzaGFyZScsXHJcblx0c3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xyXG5cdFx0aWYgKHJlcy5wcm92aWRlci5pbmNsdWRlcygnc2luYXdlaWJvJykpIHtcclxuXHRcdFx0cGxhdGZvcm1TaGFyZUxpc3QgPSBbe1xyXG5cdFx0XHRcdGljb246IFwiLi4vc3RhdGljL3NoYXJlL2ljb25fd2VpYm8ucG5nXCIsIFxyXG5cdFx0XHRcdHRleHQ6IFwi5paw5rWq5b6u5Y2aXCIsXHJcblx0XHRcdFx0b25DbGljazogb25TaGFyZSxcclxuXHRcdFx0XHRwcm92aWRlcjogXCJzaW5hd2VpYm9cIixcclxuXHRcdFx0XHR0eXBlOiAwXHJcblx0XHRcdH1dLmNvbmNhdChwbGF0Zm9ybVNoYXJlTGlzdCk7XHJcblx0XHR9XHJcblx0XHRpZiAocmVzLnByb3ZpZGVyLmluY2x1ZGVzKCdxcScpKSB7XHJcblx0XHRcdHBsYXRmb3JtU2hhcmVMaXN0ID0gW3tcclxuXHRcdFx0XHRpY29uOiBcIi9jb21wb25lbnRzL2FwcC1zaGFyZS9zdGF0aWMvc2hhcmUvaWNvbl9xcS5wbmdcIixcclxuXHRcdFx0XHR0ZXh0OiBcIlFRXCIsXHJcblx0XHRcdFx0b25DbGljazogb25TaGFyZSxcclxuXHRcdFx0XHRwcm92aWRlcjogXCJxcVwiLFxyXG5cdFx0XHRcdHR5cGU6IDFcclxuXHRcdFx0fV0uY29uY2F0KHBsYXRmb3JtU2hhcmVMaXN0KTtcclxuXHRcdH1cclxuXHRcdGlmIChyZXMucHJvdmlkZXIuaW5jbHVkZXMoJ3dlaXhpbicpKSB7XHJcblx0XHRcdHBsYXRmb3JtU2hhcmVMaXN0ID0gW3tcclxuXHRcdFx0XHRpY29uOiBcIi9jb21wb25lbnRzL2FwcC1zaGFyZS9zdGF0aWMvc2hhcmUvaWNvbl93ZWl4aW4ucG5nXCIsXHJcblx0XHRcdFx0dGV4dDogXCLlvq7kv6Hlpb3lj4tcIixcclxuXHRcdFx0XHRvbkNsaWNrOiBvblNoYXJlLFxyXG5cdFx0XHRcdHByb3ZpZGVyOiBcIndlaXhpblwiLFxyXG5cdFx0XHRcdHNjZW5lOiBcIldYU2NlbmVTZXNzaW9uXCIsXHJcblx0XHRcdFx0dHlwZTogMFxyXG5cdFx0XHR9LFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0aWNvbjogXCIvY29tcG9uZW50cy9hcHAtc2hhcmUvc3RhdGljL3NoYXJlL2ljb25fcGVuZ3lvdXF1YW4ucG5nXCIsXHJcblx0XHRcdFx0dGV4dDogXCLmnIvlj4vlnIhcIixcclxuXHRcdFx0XHRvbkNsaWNrOiBvblNoYXJlLFxyXG5cdFx0XHRcdHByb3ZpZGVyOiBcIndlaXhpblwiLFxyXG5cdFx0XHRcdHNjZW5lOiBcIldYU2VuY2VUaW1lbGluZVwiLFxyXG5cdFx0XHRcdHR5cGU6IDBcclxuXHRcdFx0fSxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGljb246IFwiL2NvbXBvbmVudHMvYXBwLXNoYXJlL3N0YXRpYy9zaGFyZS9pY194aWFvY2hlbmd4dS5wbmdcIixcclxuXHRcdFx0XHR0ZXh0OiBcIuWwj+eoi+W6j1wiLFxyXG5cdFx0XHRcdG9uQ2xpY2s6IG9uU2hhcmUsXHJcblx0XHRcdFx0cHJvdmlkZXI6IFwid2VpeGluXCIsXHJcblx0XHRcdFx0c2NlbmU6IFwiV1hTY2VuZVNlc3Npb25cIixcclxuXHRcdFx0XHR0eXBlOiA1XHJcblx0XHRcdH1dLmNvbmNhdChwbGF0Zm9ybVNoYXJlTGlzdCk7XHJcblx0XHR9XHJcblx0fVxyXG59KTtcclxuLy8g5qC55o2udHlwZeexu+Wei+i/h+a7pOaOieS4jeaUr+aMgeeahOW5s+WPsFxyXG5mdW5jdGlvbiBwbGF0Zm9ybUZpbHRlcihkYXRhKXtcclxuXHRsZXQgcGxhdGZvcm1MaXN0ID0gW107XHJcblx0bGV0IHN1cHBvcnRMaXN0ID0gW1xyXG5cdFx0W1wid2VpeGluXCIsXCJzaW5hd2VpYm9cIl0sXHJcblx0XHRbXCJ3ZWl4aW5cIixcInNpbmF3ZWlib1wiLFwicXFcIl0sXHJcblx0XHRbXCJ3ZWl4aW5cIixcInNpbmF3ZWlib1wiLFwicXFcIl0sXHJcblx0XHRbXCJ3ZWl4aW5cIixcInFxXCJdLFxyXG5cdFx0W1wid2VpeGluXCIsXCJzaW5hd2VpYm9cIl0sXHJcblx0XHRbXCJ3ZWl4aW5cIl0sXHJcblx0XTtcclxuXHRsZXQgY3VycmVudFN1cHBvcnQgPSBbXTtcclxuXHRpZihkYXRhLnR5cGUgPj0gMCAmJiBkYXRhLnR5cGUgPD0gNSl7XHJcblx0XHRjdXJyZW50U3VwcG9ydCA9IHN1cHBvcnRMaXN0W2RhdGEudHlwZV07XHJcblx0fVxyXG5cdHBsYXRmb3JtU2hhcmVMaXN0LmZvckVhY2goKGl0ZW0saW5kZXgpID0+IHtcclxuXHRcdGlmKGRhdGEudHlwZSA+PSAwICYmIGRhdGEudHlwZSA8PSA1KXtcclxuXHRcdFx0aWYoY3VycmVudFN1cHBvcnQuaW5jbHVkZXMoaXRlbS5wcm92aWRlcikpe1xyXG5cdFx0XHRcdGlmKGl0ZW0ucHJvdmlkZXIgPT0gXCJ3ZWl4aW5cIil7XHJcblx0XHRcdFx0XHRpZihpdGVtLnRleHQgPT0gXCLlsI/nqIvluo9cIil7XHJcblx0XHRcdFx0XHRcdGlmKGRhdGEudHlwZSA9PSA1KXtcclxuXHRcdFx0XHRcdFx0XHRwbGF0Zm9ybUxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fWVsc2UgaWYoZGF0YS50eXBlICE9PSA1KXtcclxuXHRcdFx0XHRcdFx0cGxhdGZvcm1MaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHBsYXRmb3JtTGlzdC5wdXNoKGl0ZW0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fWVsc2V7XHJcblx0XHRcdGlmKGl0ZW0ucHJvdmlkZXIgPT0gXCJ3ZWl4aW5cIil7XHJcblx0XHRcdFx0aWYoaXRlbS50ZXh0ID09IFwi5bCP56iL5bqPXCIpe1xyXG5cdFx0XHRcdFx0aWYoZGF0YS5hcHBJZCAmJiBkYXRhLmFwcFBhdGgpe1xyXG5cdFx0XHRcdFx0XHRwbGF0Zm9ybUxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9ZWxzZSB7XHJcblx0XHRcdFx0XHRwbGF0Zm9ybUxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cGxhdGZvcm1MaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9KTtcclxuXHRyZXR1cm4gcGxhdGZvcm1MaXN0LmNvbmNhdChvdGhlclNoYXJlTGlzdCk7XHJcbn1cclxuLy8g5pWw5o2u5aSE55CGXHJcbmZ1bmN0aW9uIGRhdGFGYWN0b3J5KHNoYXJlSW5mbyA9IHt9KSB7XHJcblx0bGV0IGNvbmZpZyA9IHtcclxuXHRcdC4uLnNoYXJlSW5mb1xyXG5cdH07XHJcblx0Y29uZmlnLnNoYXJlVXJsID0gc2hhcmVJbmZvLnNoYXJlVXJsIHx8IFwiXCI7XHJcblx0Y29uZmlnLnNoYXJlQ29udGVudCA9IHNoYXJlSW5mby5zaGFyZUNvbnRlbnQgfHwgXCLliIbkuqvnmoTmj4/ov7BcIjtcclxuXHRjb25maWcuc2hhcmVJbWcgPSBzaGFyZUluZm8uc2hhcmVJbWcgfHwgXCLliIbkuqvnmoTlm77niYdcIjtcclxuXHRyZXR1cm4gY29uZmlnO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChzaGFyZUluZm8sIGNhbGxiYWNrKSB7XHJcblx0c2hhcmVJbmZvID0gZGF0YUZhY3Rvcnkoc2hhcmVJbmZvKTtcclxuXHQvLyDku6XkuIvkuLrorqHnrpfoj5zljZXnmoRudmlld+e7mOWItuW4g+WxgO+8jOS4uuWbuuWumueul+azle+8jOS9v+eUqOiAheaXoOWFs+WFs+W/g1xyXG5cdGxldCBzY3JlZW5XaWR0aCA9IHBsdXMuc2NyZWVuLnJlc29sdXRpb25XaWR0aFxyXG5cdC8v5LulMzYwcHjlrr3luqblsY/luZXkuLrkvovvvIzkuIrkuIvlt6blj7Povrnot53lj4oy5o6S5oyJ6ZKu6L656Led55WZMjXlg4/ntKDvvIzlm77moIflrr3luqY1NeWDj+e0oO+8jOWQjOihjOWbvuagh+mXtOeahOmXtOi3neWcqDM2MOWuveeahOWxj+W5leaYrzMwcHjvvIzkvYbpnIDopoHliqjmgIHorqHnrpfvvIzku6XmraTljp/liJnorqHnrpc05YiX5Zu+5qCH5YiG5Yir55qEbGVmdOS9jee9rlxyXG5cdC8v5Zu+5qCH5LiL55qE5oyJ6ZKu5paH5a2X6Led56a75Zu+5qCHNeWDj+e0oO+8jOaWh+Wtl+Wkp+WwjzEy5YOP57SgXHJcblx0Ly/lupXpg6jlj5bmtojmjInpkq7pq5jluqblm7rlrprkuLo0NHB4XHJcblx0Ly9UT0RPIOacquWkhOeQhuaoquWxj+WSjHBhZO+8jOi/meS6m+aDheWGtTbkuKrlm77moIflupTor6XkuIDmjpLljbPlj69cclxuXHRsZXQgbWFyZ2luVG9wID0gMjUsIC8v5LiK6Ze06LedXHJcblx0XHRtYXJnaW5MZWZ0ID0gMjUsIC8v5bem6Ze06LedXHJcblx0XHRpY29uV2lkdGggPSA1NSwgLy/lm77moIflrr3lrr1cclxuXHRcdGljb25IZWlnaHQgPSA1NSwgLy/lm77moIfpq5jluqZcclxuXHRcdGljb250ZXh0U3BhY2UgPSAxMCwgLy/lm77moIfkuI7mloflrZfpl7Tot51cclxuXHRcdHRleHRIZWlnaHQgPSAxMiAvL+aWh+Wtl+Wkp+Wwj1xyXG5cdGxldCBsZWZ0MSA9IG1hcmdpbkxlZnQgLyAzNjAgKiBzY3JlZW5XaWR0aDtcclxuXHRsZXQgY29sTnVtYmVyID0gTWF0aC5mbG9vcihzY3JlZW5XaWR0aCAvIChpY29uV2lkdGggKyBtYXJnaW5MZWZ0KSk7XHJcblx0bGV0IGkgPSAoc2NyZWVuV2lkdGggLSAoaWNvbldpZHRoICsgbWFyZ2luTGVmdCkgKiBjb2xOdW1iZXIgLSBtYXJnaW5MZWZ0KSAvIChjb2xOdW1iZXIgKyAxKTtcclxuXHRsZXQgaW5pdE1hcmdpbiA9IG1hcmdpbkxlZnQgKyBpO1xyXG5cdGxldCBpdGVtV2lkdGggPSBpY29uV2lkdGggKyBpbml0TWFyZ2luO1xyXG5cdGxldCBpdGVtSGVpZ2h0ID0gaWNvbkhlaWdodCArIGljb250ZXh0U3BhY2UgKyB0ZXh0SGVpZ2h0ICsgbWFyZ2luVG9wO1xyXG5cdGxldCB0ZXh0VG9wID0gaWNvbkhlaWdodCArIGljb250ZXh0U3BhY2U7XHJcblx0YWxwaGFCZyA9IG5ldyBwbHVzLm5hdGl2ZU9iai5WaWV3KFwiYWxwaGFCZ1wiLCB7IC8v5YWI5Yib5bu66YGu572p5bGCXHJcblx0XHR0b3A6ICcwcHgnLFxyXG5cdFx0bGVmdDogJzBweCcsXHJcblx0XHRoZWlnaHQ6ICcxMDAlJyxcclxuXHRcdHdpZHRoOiAnMTAwJScsXHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsMCwwLDAuNSknXHJcblx0fSk7XHJcblx0YWxwaGFCZy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkgeyAvL+WkhOeQhumBrue9qeWxgueCueWHu1xyXG5cdFx0YWxwaGFCZy5jbG9zZSgpO1xyXG5cdFx0c2hhcmVNZW51LmNsb3NlKCk7XHJcblx0fSk7XHJcblx0bGV0IHNoYXJlTGlzdCA9IHBsYXRmb3JtRmlsdGVyKHNoYXJlSW5mbyk7XHJcblx0c2hhcmVNZW51ID0gbmV3IHBsdXMubmF0aXZlT2JqLlZpZXcoXCJzaGFyZU1lbnVcIiwgeyAvL+WIm+W7uuW6lemDqOWbvuagh+iPnOWNlVxyXG5cdFx0Ym90dG9tOiAnMHB4JyxcclxuXHRcdGxlZnQ6ICcwcHgnLFxyXG5cdFx0aGVpZ2h0OiBNYXRoLmNlaWwoc2hhcmVMaXN0Lmxlbmd0aCAvIGNvbE51bWJlcikgKiBpdGVtSGVpZ2h0ICsgbWFyZ2luVG9wICsgNDQgKyAxICsgJ3B4JyxcclxuXHRcdHdpZHRoOiAnMTAwJScsXHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjU1LDI1NSwyNTUpJ1xyXG5cdH0pO1xyXG5cdC8v57uY5Yi25bqV6YOo5Zu+5qCH6I+c5Y2V55qE5YaF5a65XHJcblx0c2hhcmVNZW51LmRyYXcoW3tcclxuXHRcdHRhZzogJ3JlY3QnLCAvL+iPnOWNlemhtumDqOeahOWIhuWJsueBsOe6v1xyXG5cdFx0Y29sb3I6ICcjZTdlN2U3JyxcclxuXHRcdHBvc2l0aW9uOiB7XHJcblx0XHRcdHRvcDogJzBweCcsXHJcblx0XHRcdGhlaWdodDogJzFweCdcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRhZzogJ2ZvbnQnLFxyXG5cdFx0aWQ6ICdzaGFyZWNhbmNlbCcsIC8v5bqV6YOo5Y+W5raI5oyJ6ZKu55qE5paH5a2XXHJcblx0XHR0ZXh0OiAn5Y+W5raI5YiG5LqrJyxcclxuXHRcdHRleHRTdHlsZXM6IHtcclxuXHRcdFx0c2l6ZTogJzE0cHgnXHJcblx0XHR9LFxyXG5cdFx0cG9zaXRpb246IHtcclxuXHRcdFx0Ym90dG9tOiAnMHB4JyxcclxuXHRcdFx0aGVpZ2h0OiAnNDRweCdcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRhZzogJ3JlY3QnLCAvL+W6lemDqOWPlua2iOaMiemSrueahOmhtumDqOi+uee6v1xyXG5cdFx0Y29sb3I6ICcjZTdlN2U3JyxcclxuXHRcdHBvc2l0aW9uOiB7XHJcblx0XHRcdGJvdHRvbTogJzQ1cHgnLFxyXG5cdFx0XHRoZWlnaHQ6ICcxcHgnXHJcblx0XHR9XHJcblx0fVxyXG5cdF0pO1xyXG5cdHNoYXJlTGlzdC5tYXAoKHYsIGspID0+IHtcclxuXHRcdGxldCB0aW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcblx0XHRsZXQgcm93ID0gTWF0aC5mbG9vcihrIC8gY29sTnVtYmVyKTtcclxuXHRcdGxldCBjb2wgPSBrICUgY29sTnVtYmVyO1xyXG5cdFx0bGV0IGl0ZW0gPSBbe1xyXG5cdFx0XHRzcmM6IHYuaWNvbixcclxuXHRcdFx0aWQ6IE1hdGgucmFuZG9tKCkgKiAxMDAwICsgdGltZSxcclxuXHRcdFx0dGFnOiBcImltZ1wiLFxyXG5cdFx0XHRwb3NpdGlvbjoge1xyXG5cdFx0XHRcdHRvcDogcm93ICogaXRlbUhlaWdodCArIG1hcmdpblRvcCxcclxuXHRcdFx0XHRsZWZ0OiBjb2wgKiBpdGVtV2lkdGggKyBpbml0TWFyZ2luLFxyXG5cdFx0XHRcdHdpZHRoOiBpY29uV2lkdGgsXHJcblx0XHRcdFx0aGVpZ2h0OiBpY29uV2lkdGhcclxuXHRcdFx0fVxyXG5cdFx0fSwge1xyXG5cdFx0XHR0ZXh0OiB2LnRleHQsXHJcblx0XHRcdGlkOiBNYXRoLnJhbmRvbSgpICogMTAwMCArIHRpbWUsXHJcblx0XHRcdHRhZzogXCJmb250XCIsXHJcblx0XHRcdHRleHRTdHlsZXM6IHtcclxuXHRcdFx0XHRzaXplOiB0ZXh0SGVpZ2h0XHJcblx0XHRcdH0sXHJcblx0XHRcdHBvc2l0aW9uOiB7XHJcblx0XHRcdFx0dG9wOiByb3cgKiBpdGVtSGVpZ2h0ICsgdGV4dFRvcCxcclxuXHRcdFx0XHRsZWZ0OiBjb2wgKiBpdGVtV2lkdGggKyBpbml0TWFyZ2luLFxyXG5cdFx0XHRcdHdpZHRoOiBpY29uV2lkdGgsXHJcblx0XHRcdFx0aGVpZ2h0OiBpY29uV2lkdGhcclxuXHRcdFx0fVxyXG5cdFx0fV07XHJcblx0XHRzaGFyZU1lbnUuZHJhdyhpdGVtKTtcclxuXHR9KTtcclxuXHRzaGFyZU1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7IC8v5aSE55CG5bqV6YOo5Zu+5qCH6I+c5Y2V55qE54K55Ye75LqL5Lu277yM5qC55o2u54K55Ye75L2N572u6Kem5Y+R5LiN5ZCM55qE6YC76L6RXHJcblx0XHRpZiAoZS5zY3JlZW5ZID4gcGx1cy5zY3JlZW4ucmVzb2x1dGlvbkhlaWdodCAtIDQ0KSB7IC8v54K55Ye75LqG5bqV6YOo5Y+W5raI5oyJ6ZKuXHJcblx0XHRcdGFscGhhQmcuY2xvc2UoKTtcclxuXHRcdFx0c2hhcmVNZW51LmNsb3NlKCk7XHJcblx0XHR9IGVsc2UgaWYgKGUuY2xpZW50WCA8IDUgfHwgZS5jbGllbnRYID4gc2NyZWVuV2lkdGggLSA1IHx8IGUuY2xpZW50WSA8IDUpIHtcclxuXHRcdFx0Ly/lsY/luZXlt6blj7PovrnnvJg15YOP57Sg5Y+K6I+c5Y2V6aG26YOoNeWDj+e0oOS4jeWkhOeQhueCueWHu1xyXG5cdFx0fSBlbHNlIHsgLy/ngrnlh7vkuoblm77moIfmjInpkq5cclxuXHRcdFx0bGV0IHggPSBlLmNsaWVudFg7XHJcblx0XHRcdGxldCB5ID0gZS5jbGllbnRZO1xyXG5cdFx0XHRsZXQgY29sSWR4ID0gTWF0aC5mbG9vcih4IC8gaXRlbVdpZHRoKTtcclxuXHRcdFx0bGV0IHJvd0lkeCA9IE1hdGguZmxvb3IoeSAvIGl0ZW1IZWlnaHQpO1xyXG5cdFx0XHRsZXQgdGFwSW5kZXggPSBjb2xJZHggKyByb3dJZHggKiBjb2xOdW1iZXI7XHJcblx0XHRcdHNoYXJlTGlzdFt0YXBJbmRleF0ub25DbGljayhzaGFyZUxpc3RbdGFwSW5kZXhdLCBzaGFyZUluZm8sY2FsbGJhY2spO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdGFscGhhQmcuc2hvdygpO1xyXG5cdHNoYXJlTWVudS5zaG93KCk7XHJcblx0cmV0dXJuIHtcclxuXHRcdGNsb3NlOiBmdW5jdGlvbigpe1xyXG5cdFx0XHRhbHBoYUJnICYmIGFscGhhQmcuY2xvc2UoKTtcclxuXHRcdFx0YWxwaGFCZyAmJiBzaGFyZU1lbnUuY2xvc2UoKTtcclxuXHRcdH1cclxuXHR9O1xyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///298\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.11\n * (c) 2014-2020 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  // fixed by xxxxxx (nvue vuex)\n  /* eslint-disable no-undef */\n  if(typeof SharedObject !== 'undefined'){\n    this.id = SharedObject.uid++;\n  } else {\n    this.id = uid++;\n  }\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.SharedObject.target) {\n    Dep.SharedObject.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n// fixed by xxxxxx (nvue shared vuex)\n/* eslint-disable no-undef */\nDep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};\nDep.SharedObject.target = null;\nDep.SharedObject.targetStack = [];\n\nfunction pushTarget (target) {\n  Dep.SharedObject.targetStack.push(target);\n  Dep.SharedObject.target = target;\n}\n\nfunction popTarget () {\n  Dep.SharedObject.targetStack.pop();\n  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑\n        if(value.push !== value.__proto__.push){\n          copyAugment(value, arrayMethods, arrayKeys);\n        } else {\n          protoAugment(value, arrayMethods);\n        }\n      }\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.SharedObject.target) { // fixed by xxxxxx\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\n// fixed by xxxxxx (mp properties)\r\nfunction extractPropertiesFromVNodeData(data, Ctor, res, context) {\r\n  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;\r\n  if (isUndef(propOptions)) {\r\n    return res\r\n  }\n  var externalClasses = Ctor.options.mpOptions.externalClasses || [];\r\n  var attrs = data.attrs;\n  var props = data.props;\r\n  if (isDef(attrs) || isDef(props)) {\r\n    for (var key in propOptions) {\r\n      var altKey = hyphenate(key);\n      var result = checkProp(res, props, key, altKey, true) ||\n          checkProp(res, attrs, key, altKey, false);\n      // externalClass\n      if (\n        result &&\n        res[key] &&\n        externalClasses.indexOf(altKey) !== -1 &&\n        context[camelize(res[key])]\n      ) {\n        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)\n        res[key] = context[camelize(res[key])];\n      }\r\n    }\r\n  }\r\n  return res\r\n}\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag,\n  context// fixed by xxxxxx\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    // fixed by xxxxxx\n    return extractPropertiesFromVNodeData(data, Ctor, {}, context)\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  // fixed by xxxxxx\n  return extractPropertiesFromVNodeData(data, Ctor, res, context)\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page\n      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){\n        (slots['page'] || (slots['page'] = [])).push(child);\n      }else{\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length, i++, i)); // fixed by xxxxxx\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    // fixed by xxxxxx app-plus scopedSlot\n    nodes = scopedSlotFn(props, this, props._i) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      callHook(componentInstance, 'onServiceCreated');\n      callHook(componentInstance, 'onServiceAttached');\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if ( true && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  \n  // fixed by xxxxxx update properties(mp runtime)\n  vm._$updateProperties && vm._$updateProperties(vm);\n  \n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.SharedObject.target) {// fixed by xxxxxx\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    !vm._$fallback && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    !vm._$fallback && initProvide(vm); // resolve provide after data/props\n    !vm._$fallback && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.11';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  !vm._$fallback && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\n    console.error(err);\n    /* eslint-disable no-undef */\r\n    var app = getApp();\r\n    if (app && app.onError) {\r\n      app.onError(err);\r\n    }\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope && this.$scope[method]) {\r\n        return this.$scope[method](args)\r\n      }\r\n      // mp-alipay\r\n      if (typeof my === 'undefined') {\r\n        return\r\n      }\r\n      if (method === 'createSelectorQuery') {\r\n        /* eslint-disable no-undef */\r\n        return my.createSelectorQuery(args)\r\n      } else if (method === 'createIntersectionObserver') {\r\n        /* eslint-disable no-undef */\r\n        return my.createIntersectionObserver(args)\r\n      }\r\n      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook, args);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 30:
/*!********************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/ys-validate.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _createForOfIteratorHelper(o) {if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {var i = 0;var F = function F() {};return { s: F, n: function n() {if (i >= o.length) return { done: true };return { done: false, value: o[i++] };}, e: function e(_e) {throw _e;}, f: F };}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var it,normalCompletion = true,didErr = false,err;return { s: function s() {it = o[Symbol.iterator]();}, n: function n() {var step = it.next();normalCompletion = step.done;return step;}, e: function e(_e2) {didErr = true;err = _e2;}, f: function f() {try {if (!normalCompletion && it.return != null) it.return();} finally {if (didErr) throw err;}} };}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(n);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\nvar numberReg = /^-?[1-9][0-9]?.?[0-9]*$/;\nvar intReg = /^-?[1-9][0-9]*$/;\nvar phoneReg = /^1[0-9]{10,10}$/;\nvar emailReg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\nvar pwdReg = /^.{6,16}$/;\nvar inviteCodeReg = /^[a-zA-Z0-9]{6,16}$/;var _default =\n\n{\n  isNumber: function isNumber(val) {\n    return numberReg.test(val);\n  },\n  isInt: function isInt(val) {\n    return intReg.test(val);\n  },\n  isPhone: function isPhone(val) {\n    return phoneReg.test(val);\n  },\n  isEmail: function isEmail(val) {\n    return emailReg.test(val);\n  },\n  isPwd: function isPwd(val) {\n    return pwdReg.test(val);\n  },\n  isInviteCode: function isInviteCode(val) {\n    return inviteCodeReg.test(val);\n  },\n  validate: function validate(data, rules) {\n    var res = { isOk: true, errmsg: '' };\n    if (!rules || !rules.length) {\n      return res;\n    }var _iterator = _createForOfIteratorHelper(\n    rules),_step;try {for (_iterator.s(); !(_step = _iterator.n()).done;) {var rule = _step.value;\n        // rule: {name:'', type:'', errmsg:'', min:1, max:2, eq:'', required:Boolean, regex:''}\n        if (!rule || !rule.name || !rule.type) {\n          continue;\n        }\n\n        // 如果值不存在\n        if (!data[rule.name]) {\n          // 如果是必填项就返回错误提示，required可以作为type是为了不同的type能给用户不同的提示\n          if (rule.type === 'required' || rule.required) {\n            res = { isOk: false, errmsg: rule.errmsg };\n            if (!res.errmsg) {\n              res.errmsg = '请正确输入所有数据'; //默认提示\n            }\n            return res;\n          }\n          // 如果不是必填项就跳过\n          continue;\n        }\n        switch (rule.type) {\n          // required 上面已经判断过了\n          case 'equals':\n          case 'eq':\n            if (data[rule.name] !== data[rule.eqName]) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'number':\n            if (!numberReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'int':\n            if (!intReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'phone':\n            if (!phoneReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'email':\n            if (!emailReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'pwd':\n            if (!pwdReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'inviteCode':\n            if (!inviteCodeReg.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'range': // 数字类型的值取值范围\n            // {name: 'xxx', type: 'range', min: 6, max: 6, required: true, errmsg: 'xxx'}\n            var val = data[rule.name];\n            if (val) {\n              if (numberReg.test(val)) {\n                if (rule.min && val < rule.min) {\n                  res = { isOk: false, errmsg: rule.errmsg };\n                } else if (rule.max && val > rule.max) {\n                  res = { isOk: false, errmsg: rule.errmsg };\n                }\n              } else {\n                res = { isOk: false, errmsg: rule.errmsg };\n              }\n            }\n            break;\n          case 'lengthRange': // 字符串长度取值范围\n            // {name: 'xxx', type: 'lengthRange', min: 6, max: 6, errmsg: 'xxx'}\n            var le = data[rule.name] ? data[rule.name].length : 0;\n            if (rule.min && le < rule.min) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            } else if (rule.max && le > rule.max) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;\n          case 'regex': // 自定义正则表达式\n            // {name: 'xxx', type: 'regex', regex: /^1[0-9]{10,10}$/, errmsg: 'xxx'}\n            if (rule.regex && !rule.regex.test(data[rule.name])) {\n              res = { isOk: false, errmsg: rule.errmsg };\n            }\n            break;}\n\n        // 发现任何一个错误就立即返回，后面的不再判断\n        if (!res.isOk) {\n          if (!res.errmsg) {\n            res.errmsg = '请正确输入所有数据'; //默认提示\n          }\n          return res;\n        }\n      }} catch (err) {_iterator.e(err);} finally {_iterator.f();}\n    return res;\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n");

/***/ }),

/***/ 4:
/*!*********************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/pages.json ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI0LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 5:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 6);function _createSuper(Derived) {return function () {var Super = _getPrototypeOf(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return _possibleConstructorReturn(this, result);};}function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}\n\nvar STAT_VERSION = _package.version;\nvar STAT_URL = 'https://tongji.dcloud.io/uni/stat';\nvar STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';\nvar PAGE_PVER_TIME = 1800;\nvar APP_PVER_TIME = 300;\nvar OPERATING_TIME = 10;\n\nvar UUID_KEY = '__DC_STAT_UUID';\nvar UUID_VALUE = '__DC_UUID_VALUE';\n\nfunction getUuid() {\n  var uuid = '';\n  if (getPlatformName() === 'n') {\n    try {\n      uuid = plus.runtime.getDCloudId();\n    } catch (e) {\n      uuid = '';\n    }\n    return uuid;\n  }\n\n  try {\n    uuid = uni.getStorageSync(UUID_KEY);\n  } catch (e) {\n    uuid = UUID_VALUE;\n  }\n\n  if (!uuid) {\n    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);\n    try {\n      uni.setStorageSync(UUID_KEY, uuid);\n    } catch (e) {\n      uni.setStorageSync(UUID_KEY, UUID_VALUE);\n    }\n  }\n  return uuid;\n}\n\nvar getSgin = function getSgin(statData) {\n  var arr = Object.keys(statData);\n  var sortArr = arr.sort();\n  var sgin = {};\n  var sginStr = '';\n  for (var i in sortArr) {\n    sgin[sortArr[i]] = statData[sortArr[i]];\n    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';\n  }\n  // const options = sginStr.substr(0, sginStr.length - 1)\n  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;\n  // const si = crypto.createHash('md5').update(sginStr).digest('hex');\n  return {\n    sign: '',\n    options: sginStr.substr(0, sginStr.length - 1) };\n\n};\n\nvar getSplicing = function getSplicing(data) {\n  var str = '';\n  for (var i in data) {\n    str += i + '=' + data[i] + '&';\n  }\n  return str.substr(0, str.length - 1);\n};\n\nvar getTime = function getTime() {\n  return parseInt(new Date().getTime() / 1000);\n};\n\nvar getPlatformName = function getPlatformName() {\n  var platformList = {\n    'app-plus': 'n',\n    'h5': 'h5',\n    'mp-weixin': 'wx',\n    'mp-alipay': 'ali',\n    'mp-baidu': 'bd',\n    'mp-toutiao': 'tt',\n    'mp-qq': 'qq' };\n\n  return platformList[\"app-plus\"];\n};\n\nvar getPackName = function getPackName() {\n  var packName = '';\n  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {\n    // 兼容微信小程序低版本基础库\n    if (uni.canIUse('getAccountInfoSync')) {\n      packName = uni.getAccountInfoSync().miniProgram.appId || '';\n    }\n  }\n  return packName;\n};\n\nvar getVersion = function getVersion() {\n  return getPlatformName() === 'n' ? plus.runtime.version : '';\n};\n\nvar getChannel = function getChannel() {\n  var platformName = getPlatformName();\n  var channel = '';\n  if (platformName === 'n') {\n    channel = plus.runtime.channel;\n  }\n  return channel;\n};\n\nvar getScene = function getScene(options) {\n  var platformName = getPlatformName();\n  var scene = '';\n  if (options) {\n    return options;\n  }\n  if (platformName === 'wx') {\n    scene = uni.getLaunchOptionsSync().scene;\n  }\n  return scene;\n};\nvar First__Visit__Time__KEY = 'First__Visit__Time';\nvar Last__Visit__Time__KEY = 'Last__Visit__Time';\n\nvar getFirstVisitTime = function getFirstVisitTime() {\n  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = getTime();\n    uni.setStorageSync(First__Visit__Time__KEY, time);\n    uni.removeStorageSync(Last__Visit__Time__KEY);\n  }\n  return time;\n};\n\nvar getLastVisitTime = function getLastVisitTime() {\n  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = '';\n  }\n  uni.setStorageSync(Last__Visit__Time__KEY, getTime());\n  return time;\n};\n\n\nvar PAGE_RESIDENCE_TIME = '__page__residence__time';\nvar First_Page_residence_time = 0;\nvar Last_Page_residence_time = 0;\n\n\nvar setPageResidenceTime = function setPageResidenceTime() {\n  First_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());\n  }\n  return First_Page_residence_time;\n};\n\nvar getPageResidenceTime = function getPageResidenceTime() {\n  Last_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);\n  }\n  return Last_Page_residence_time - First_Page_residence_time;\n};\nvar TOTAL__VISIT__COUNT = 'Total__Visit__Count';\nvar getTotalVisitCount = function getTotalVisitCount() {\n  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);\n  var count = 1;\n  if (timeStorge) {\n    count = timeStorge;\n    count++;\n  }\n  uni.setStorageSync(TOTAL__VISIT__COUNT, count);\n  return count;\n};\n\nvar GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {\n  var data = {};\n  for (var prop in statData) {\n    data[prop] = encodeURIComponent(statData[prop]);\n  }\n  return data;\n};\n\nvar Set__First__Time = 0;\nvar Set__Last__Time = 0;\n\nvar getFirstTime = function getFirstTime() {\n  var time = new Date().getTime();\n  Set__First__Time = time;\n  Set__Last__Time = 0;\n  return time;\n};\n\n\nvar getLastTime = function getLastTime() {\n  var time = new Date().getTime();\n  Set__Last__Time = time;\n  return time;\n};\n\n\nvar getResidenceTime = function getResidenceTime(type) {\n  var residenceTime = 0;\n  if (Set__First__Time !== 0) {\n    residenceTime = Set__Last__Time - Set__First__Time;\n  }\n\n  residenceTime = parseInt(residenceTime / 1000);\n  residenceTime = residenceTime < 1 ? 1 : residenceTime;\n  if (type === 'app') {\n    var overtime = residenceTime > APP_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: overtime };\n\n  }\n  if (type === 'page') {\n    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: _overtime };\n\n  }\n\n  return {\n    residenceTime: residenceTime };\n\n\n};\n\nvar getRoute = function getRoute() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is;\n  } else {\n    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;\n  }\n};\n\nvar getPageRoute = function getPageRoute(self) {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n  var query = self._query;\n  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';\n  // clear\n  self._query = '';\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is + str;\n  } else {\n    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;\n  }\n};\n\nvar getPageTypes = function getPageTypes(self) {\n  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {\n    return true;\n  }\n  return false;\n};\n\nvar calibration = function calibration(eventName, options) {\n  //  login 、 share 、pay_success 、pay_fail 、register 、title\n  if (!eventName) {\n    console.error(\"uni.report \\u7F3A\\u5C11 [eventName] \\u53C2\\u6570\");\n    return true;\n  }\n  if (typeof eventName !== 'string') {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u7C7B\\u578B\");\n    return true;\n  }\n  if (eventName.length > 255) {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (typeof options !== 'string' && typeof options !== 'object') {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u6216 Object \\u7C7B\\u578B\");\n    return true;\n  }\n\n  if (typeof options === 'string' && options.length > 255) {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (eventName === 'title' && typeof options !== 'string') {\n    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');\n    return true;\n  }\n};\n\nvar PagesJson = __webpack_require__(/*! uni-pages?{\"type\":\"style\"} */ 7).default;\nvar statConfig = __webpack_require__(/*! uni-stat-config */ 8).default || __webpack_require__(/*! uni-stat-config */ 8);\n\nvar resultOptions = uni.getSystemInfoSync();var\n\nUtil = /*#__PURE__*/function () {\n  function Util() {_classCallCheck(this, Util);\n    this.self = '';\n    this._retry = 0;\n    this._platform = '';\n    this._query = {};\n    this._navigationBarTitle = {\n      config: '',\n      page: '',\n      report: '',\n      lt: '' };\n\n    this._operatingTime = 0;\n    this._reportingRequestData = {\n      '1': [],\n      '11': [] };\n\n    this.__prevent_triggering = false;\n\n    this.__licationHide = false;\n    this.__licationShow = false;\n    this._lastPageRoute = '';\n    this.statData = {\n      uuid: getUuid(),\n      ut: getPlatformName(),\n      mpn: getPackName(),\n      ak: statConfig.appid,\n      usv: STAT_VERSION,\n      v: getVersion(),\n      ch: getChannel(),\n      cn: '',\n      pn: '',\n      ct: '',\n      t: getTime(),\n      tt: '',\n      p: resultOptions.platform === 'android' ? 'a' : 'i',\n      brand: resultOptions.brand || '',\n      md: resultOptions.model,\n      sv: resultOptions.system.replace(/(Android|iOS)\\s/, ''),\n      mpsdk: resultOptions.SDKVersion || '',\n      mpv: resultOptions.version || '',\n      lang: resultOptions.language,\n      pr: resultOptions.pixelRatio,\n      ww: resultOptions.windowWidth,\n      wh: resultOptions.windowHeight,\n      sw: resultOptions.screenWidth,\n      sh: resultOptions.screenHeight };\n\n\n  }_createClass(Util, [{ key: \"_applicationShow\", value: function _applicationShow()\n\n    {\n      if (this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('app');\n        if (time.overtime) {\n          var options = {\n            path: this._lastPageRoute,\n            scene: this.statData.sc };\n\n          this._sendReportRequest(options);\n        }\n        this.__licationHide = false;\n      }\n    } }, { key: \"_applicationHide\", value: function _applicationHide(\n\n    self, type) {\n\n      this.__licationHide = true;\n      getLastTime();\n      var time = getResidenceTime();\n      getFirstTime();\n      var route = getPageRoute(this);\n      this._sendHideRequest({\n        urlref: route,\n        urlref_ts: time.residenceTime },\n      type);\n    } }, { key: \"_pageShow\", value: function _pageShow()\n\n    {\n      var route = getPageRoute(this);\n      var routepath = getRoute();\n      this._navigationBarTitle.config = PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].titleNView &&\n      PagesJson.pages[routepath].titleNView.titleText ||\n      PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].navigationBarTitleText || '';\n\n      if (this.__licationShow) {\n        getFirstTime();\n        this.__licationShow = false;\n        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');\n        this._lastPageRoute = route;\n        return;\n      }\n\n      getLastTime();\n      this._lastPageRoute = route;\n      var time = getResidenceTime('page');\n      if (time.overtime) {\n        var options = {\n          path: this._lastPageRoute,\n          scene: this.statData.sc };\n\n        this._sendReportRequest(options);\n      }\n      getFirstTime();\n    } }, { key: \"_pageHide\", value: function _pageHide()\n\n    {\n      if (!this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('page');\n        this._sendPageRequest({\n          url: this._lastPageRoute,\n          urlref: this._lastPageRoute,\n          urlref_ts: time.residenceTime });\n\n        this._navigationBarTitle = {\n          config: '',\n          page: '',\n          report: '',\n          lt: '' };\n\n        return;\n      }\n    } }, { key: \"_login\", value: function _login()\n\n    {\n      this._sendEventRequest({\n        key: 'login' },\n      0);\n    } }, { key: \"_share\", value: function _share()\n\n    {\n      this._sendEventRequest({\n        key: 'share' },\n      0);\n    } }, { key: \"_payment\", value: function _payment(\n    key) {\n      this._sendEventRequest({\n        key: key },\n      0);\n    } }, { key: \"_sendReportRequest\", value: function _sendReportRequest(\n    options) {\n\n      this._navigationBarTitle.lt = '1';\n      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';\n      this.statData.lt = '1';\n      this.statData.url = options.path + query || '';\n      this.statData.t = getTime();\n      this.statData.sc = getScene(options.scene);\n      this.statData.fvts = getFirstVisitTime();\n      this.statData.lvts = getLastVisitTime();\n      this.statData.tvc = getTotalVisitCount();\n      if (getPlatformName() === 'n') {\n        this.getProperty();\n      } else {\n        this.getNetworkInfo();\n      }\n    } }, { key: \"_sendPageRequest\", value: function _sendPageRequest(\n\n    opt) {var\n\n      url =\n\n\n      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;\n      this._navigationBarTitle.lt = '11';\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '11',\n        ut: this.statData.ut,\n        url: url,\n        tt: this.statData.tt,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"_sendHideRequest\", value: function _sendHideRequest(\n\n    opt, type) {var\n\n      urlref =\n\n      opt.urlref,urlref_ts = opt.urlref_ts;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '3',\n        ut: this.statData.ut,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options, type);\n    } }, { key: \"_sendEventRequest\", value: function _sendEventRequest()\n\n\n\n    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? \"\" : _ref$value;\n      var route = this._lastPageRoute;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '21',\n        ut: this.statData.ut,\n        url: route,\n        ch: this.statData.ch,\n        e_n: key,\n        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"getNetworkInfo\", value: function getNetworkInfo()\n\n    {var _this = this;\n      uni.getNetworkType({\n        success: function success(result) {\n          _this.statData.net = result.networkType;\n          _this.getLocation();\n        } });\n\n    } }, { key: \"getProperty\", value: function getProperty()\n\n    {var _this2 = this;\n      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {\n        _this2.statData.v = wgtinfo.version || '';\n        _this2.getNetworkInfo();\n      });\n    } }, { key: \"getLocation\", value: function getLocation()\n\n    {var _this3 = this;\n      if (statConfig.getLocation) {\n        uni.getLocation({\n          type: 'wgs84',\n          geocode: true,\n          success: function success(result) {\n            if (result.address) {\n              _this3.statData.cn = result.address.country;\n              _this3.statData.pn = result.address.province;\n              _this3.statData.ct = result.address.city;\n            }\n\n            _this3.statData.lat = result.latitude;\n            _this3.statData.lng = result.longitude;\n            _this3.request(_this3.statData);\n          } });\n\n      } else {\n        this.statData.lat = 0;\n        this.statData.lng = 0;\n        this.request(this.statData);\n      }\n    } }, { key: \"request\", value: function request(\n\n    data, type) {var _this4 = this;\n      var time = getTime();\n      var title = this._navigationBarTitle;\n      data.ttn = title.page;\n      data.ttpj = title.config;\n      data.ttc = title.report;\n\n      var requestData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};\n      }\n      if (!requestData[data.lt]) {\n        requestData[data.lt] = [];\n      }\n      requestData[data.lt].push(data);\n\n      if (getPlatformName() === 'n') {\n        uni.setStorageSync('__UNI__STAT__DATA', requestData);\n      }\n      if (getPageResidenceTime() < OPERATING_TIME && !type) {\n        return;\n      }\n      var uniStatData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');\n      }\n      // 时间超过，重新获取时间戳\n      setPageResidenceTime();\n      var firstArr = [];\n      var contentArr = [];\n      var lastArr = [];var _loop = function _loop(\n\n      i) {\n        var rd = uniStatData[i];\n        rd.forEach(function (elm) {\n          var newData = getSplicing(elm);\n          if (i === 0) {\n            firstArr.push(newData);\n          } else if (i === 3) {\n            lastArr.push(newData);\n          } else {\n            contentArr.push(newData);\n          }\n        });};for (var i in uniStatData) {_loop(i);\n      }\n\n      firstArr.push.apply(firstArr, contentArr.concat(lastArr));\n      var optionsData = {\n        usv: STAT_VERSION, //统计 SDK 版本号\n        t: time, //发送请求时的时间戮\n        requests: JSON.stringify(firstArr) };\n\n\n      this._reportingRequestData = {};\n      if (getPlatformName() === 'n') {\n        uni.removeStorageSync('__UNI__STAT__DATA');\n      }\n\n      if (data.ut === 'h5') {\n        this.imageRequest(optionsData);\n        return;\n      }\n\n      if (getPlatformName() === 'n' && this.statData.p === 'a') {\n        setTimeout(function () {\n          _this4._sendRequest(optionsData);\n        }, 200);\n        return;\n      }\n      this._sendRequest(optionsData);\n    } }, { key: \"_sendRequest\", value: function _sendRequest(\n    optionsData) {var _this5 = this;\n      uni.request({\n        url: STAT_URL,\n        method: 'POST',\n        // header: {\n        //   'content-type': 'application/json' // 默认值\n        // },\n        data: optionsData,\n        success: function success() {\n          // if (process.env.NODE_ENV === 'development') {\n          //   console.log('stat request success');\n          // }\n        },\n        fail: function fail(e) {\n          if (++_this5._retry < 3) {\n            setTimeout(function () {\n              _this5._sendRequest(optionsData);\n            }, 1000);\n          }\n        } });\n\n    }\n    /**\r\n       * h5 请求\r\n       */ }, { key: \"imageRequest\", value: function imageRequest(\n    data) {\n      var image = new Image();\n      var options = getSgin(GetEncodeURIComponentOptions(data)).options;\n      image.src = STAT_H5_URL + '?' + options;\n    } }, { key: \"sendEvent\", value: function sendEvent(\n\n    key, value) {\n      // 校验 type 参数\n      if (calibration(key, value)) return;\n\n      if (key === 'title') {\n        this._navigationBarTitle.report = value;\n        return;\n      }\n      this._sendEventRequest({\n        key: key,\n        value: typeof value === 'object' ? JSON.stringify(value) : value },\n      1);\n    } }]);return Util;}();var\n\n\n\nStat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);var _super = _createSuper(Stat);_createClass(Stat, null, [{ key: \"getInstance\", value: function getInstance()\n    {\n      if (!this.instance) {\n        this.instance = new Stat();\n      }\n      return this.instance;\n    } }]);\n  function Stat() {var _this6;_classCallCheck(this, Stat);\n    _this6 = _super.call(this);\n    _this6.instance = null;\n    // 注册拦截器\n    if (typeof uni.addInterceptor === 'function' && \"development\" !== 'development') {\n      _this6.addInterceptorInit();\n      _this6.interceptLogin();\n      _this6.interceptShare(true);\n      _this6.interceptRequestPayment();\n    }return _this6;\n  }_createClass(Stat, [{ key: \"addInterceptorInit\", value: function addInterceptorInit()\n\n    {\n      var self = this;\n      uni.addInterceptor('setNavigationBarTitle', {\n        invoke: function invoke(args) {\n          self._navigationBarTitle.page = args.title;\n        } });\n\n    } }, { key: \"interceptLogin\", value: function interceptLogin()\n\n    {\n      var self = this;\n      uni.addInterceptor('login', {\n        complete: function complete() {\n          self._login();\n        } });\n\n    } }, { key: \"interceptShare\", value: function interceptShare(\n\n    type) {\n      var self = this;\n      if (!type) {\n        self._share();\n        return;\n      }\n      uni.addInterceptor('share', {\n        success: function success() {\n          self._share();\n        },\n        fail: function fail() {\n          self._share();\n        } });\n\n    } }, { key: \"interceptRequestPayment\", value: function interceptRequestPayment()\n\n    {\n      var self = this;\n      uni.addInterceptor('requestPayment', {\n        success: function success() {\n          self._payment('pay_success');\n        },\n        fail: function fail() {\n          self._payment('pay_fail');\n        } });\n\n    } }, { key: \"report\", value: function report(\n\n    options, self) {\n      this.self = self;\n      // if (process.env.NODE_ENV === 'development') {\n      //   console.log('report init');\n      // }\n      setPageResidenceTime();\n      this.__licationShow = true;\n      this._sendReportRequest(options, true);\n    } }, { key: \"load\", value: function load(\n\n    options, self) {\n      if (!self.$scope && !self.$mp) {\n        var page = getCurrentPages();\n        self.$scope = page[page.length - 1];\n      }\n      this.self = self;\n      this._query = options;\n    } }, { key: \"show\", value: function show(\n\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageShow(self);\n      } else {\n        this._applicationShow(self);\n      }\n    } }, { key: \"ready\", value: function ready(\n\n    self) {\n      // this.self = self;\n      // if (getPageTypes(self)) {\n      //   this._pageShow(self);\n      // }\n    } }, { key: \"hide\", value: function hide(\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageHide(self);\n      } else {\n        this._applicationHide(self, true);\n      }\n    } }, { key: \"error\", value: function error(\n    em) {\n      if (this._platform === 'devtools') {\n        if (true) {\n          console.info('当前运行环境为开发者工具，不上报数据。');\n        }\n        // return;\n      }\n      var emVal = '';\n      if (!em.message) {\n        emVal = JSON.stringify(em);\n      } else {\n        emVal = em.stack;\n      }\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '31',\n        ut: this.statData.ut,\n        ch: this.statData.ch,\n        mpsdk: this.statData.mpsdk,\n        mpv: this.statData.mpv,\n        v: this.statData.v,\n        em: emVal,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }]);return Stat;}(Util);\n\n\nvar stat = Stat.getInstance();\nvar isHide = false;\nvar lifecycle = {\n  onLaunch: function onLaunch(options) {\n    stat.report(options, this);\n  },\n  onReady: function onReady() {\n    stat.ready(this);\n  },\n  onLoad: function onLoad(options) {\n    stat.load(options, this);\n    // 重写分享，获取分享上报事件\n    if (this.$scope && this.$scope.onShareAppMessage) {\n      var oldShareAppMessage = this.$scope.onShareAppMessage;\n      this.$scope.onShareAppMessage = function (options) {\n        stat.interceptShare(false);\n        return oldShareAppMessage.call(this, options);\n      };\n    }\n  },\n  onShow: function onShow() {\n    isHide = false;\n    stat.show(this);\n  },\n  onHide: function onHide() {\n    isHide = true;\n    stat.hide(this);\n  },\n  onUnload: function onUnload() {\n    if (isHide) {\n      isHide = false;\n      return;\n    }\n    stat.hide(this);\n  },\n  onError: function onError(e) {\n    stat.error(e);\n  } };\n\n\nfunction main() {\n  if (true) {\n    uni.report = function (type, options) {};\n  } else { var Vue; }\n}\n\nmain();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 509:
/*!*****************************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/jyf-parser/libs/MpHtmlParser.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__f__) {function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;} /*\r\n将 html 解析为适用于小程序 rich-text 的 DOM 结构\r\ngithub：https://github.com/jin-yufeng/Parser\r\ndocs：https://jin-yufeng.github.io/Parser\r\nauthor：JinYufeng\r\nupdate：2020/04/26\r\nnvar cfg = __webpack_require__(/*! ./config.js */ 510),\nblankChar = cfg.blankChar,\nCssHandler = __webpack_require__(/*! ./CssHandler.js */ 511),_wx$getSystemInfoSync =\n\n\n\nwx.getSystemInfoSync(),screenWidth = _wx$getSystemInfoSync.screenWidth,system = _wx$getSystemInfoSync.system;\nvar emoji; // emoji 补丁包 https://jin-yufeng.github.io/Parser/#/instructions?id=emoji\nvar MpHtmlParser = /*#__PURE__*/function () {\"use strict\";\n  function MpHtmlParser(data) {var _this = this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};_classCallCheck(this, MpHtmlParser);_defineProperty(this, \"getName\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function (val) {return _this.xml ? val : val.toLowerCase();});_defineProperty(this, \"isClose\",\n\n\n\n\n\n\n\n\n    function () {return _this.data[_this.i] == '>' || _this.data[_this.i] == '/' && _this.data[_this.i + 1] == '>';});_defineProperty(this, \"section\",\n    function () {return _this.data.substring(_this.start, _this.i);});_defineProperty(this, \"siblings\",\n    function () {return _this.STACK.length ? _this.STACK[_this.STACK.length - 1].children : _this.DOM;});this.attrs = {};this.compress = options.compress;this.CssHandler = new CssHandler(options.tagStyle, screenWidth);this.data = data;this.domain = options.domain;this.DOM = [];this.i = this.start = this.audioNum = this.imgNum = this.videoNum = 0;this.protocol = this.domain && this.domain.includes('://') ? this.domain.split('://')[0] : '';this.state = this.Text;this.STACK = [];this.useAnchor = options.useAnchor;this.xml = options.xml;}_createClass(MpHtmlParser, [{ key: \"parse\", value: function parse() {if (emoji) this.data = emoji.parseEmoji(this.data);for (var c; c = this.data[this.i]; this.i++) {this.state(c);}if (this.state == this.Text) this.setText();while (this.STACK.length) {this.popNode(this.STACK.pop());}if (this.DOM.length) {this.DOM[0].PoweredBy = 'Parser';if (this.title) this.DOM[0].title = this.title;}return this.DOM;} // 设置属性\n  }, { key: \"setAttr\", value: function setAttr() {var name = this.getName(this.attrName);if (cfg.trustAttrs[name]) {var val = this.attrVal;if (val) {if (name == 'src') this.attrs[name] = this.getUrl(this.decode(val, 'amp'));else if (name == 'href' || name == 'style') this.attrs[name] = this.decode(val, 'amp');else this.attrs[name] = val;} else if (cfg.boolAttrs[name]) this.attrs[name] = 'T';}this.attrVal = '';while (blankChar[this.data[this.i]]) {this.i++;}if (this.isClose()) this.setNode();else {this.start = this.i;this.state = this.AttrName;}} // 设置文本节点\n  }, { key: \"setText\", value: function setText() {var back,text = this.section();if (!text) return;text = cfg.onText && cfg.onText(text, function () {return back = true;}) || text;if (back) {this.data = this.data.substr(0, this.start) + text + this.data.substr(this.i);var j = this.start + text.length;for (this.i = this.start; this.i < j; this.i++) {this.state(this.data[this.i]);}return;}if (!this.pre) {// 合并空白符\n        var tmp = [];for (var i = text.length, c; c = text[--i];) {if (!blankChar[c] || !blankChar[tmp[0]] && (c = ' ')) tmp.unshift(c);}text = tmp.join('');if (text == ' ') return;}this.siblings().push({ type: 'text', text: this.decode(text) });} // 设置元素节点\n  }, { key: \"setNode\", value: function setNode() {var node = { name: this.tagName.toLowerCase(), attrs: this.attrs },close = cfg.selfClosingTags[node.name] || this.xml && this.data[this.i] == '/';this.attrs = {};if (!cfg.ignoreTags[node.name]) {this.matchAttr(node);if (!close) {node.children = [];if (node.name == 'pre' && cfg.highlight) {this.remove(node);this.pre = node.pre = true;}this.siblings().push(node);this.STACK.push(node);} else if (!cfg.filter || cfg.filter(node, this) != false) this.siblings().push(node);} else {if (!close) this.remove(node);else if (node.name == 'source') {var parent = this.STACK[this.STACK.length - 1],attrs = node.attrs;if (parent && attrs.src) if (parent.name == 'video' || parent.name == 'audio') parent.attrs.source.push(attrs.src);else {var i,media = attrs.media;if (parent.name == 'picture' && !parent.attrs.src && !(attrs.src.indexOf('.webp') && system.includes('iOS')) && (!media || media.includes('px') && ((i = media.indexOf('min-width')) != -1 && (i = media.indexOf(':', i + 8)) != -1 && screenWidth > parseInt(media.substr(i + 1)) || (i = media.indexOf('max-width')) != -1 && (i = media.indexOf(':', i + 8)) != -1 && screenWidth < parseInt(media.substr(i + 1))))) parent.attrs.src = attrs.src;}} else if (node.name == 'base' && !this.domain) this.domain = node.attrs.href;}if (this.data[this.i] == '/') this.i++;this.start = this.i + 1;this.state = this.Text;} // 移除标签\n  }, { key: \"remove\", value: function remove(node) {var name = node.name,j = this.i;while (1) {if ((this.i = this.data.indexOf('</', this.i + 1)) == -1) {if (name == 'pre' || name == 'svg') this.i = j;else this.i = this.data.length;return;}this.start = this.i += 2;while (!blankChar[this.data[this.i]] && !this.isClose()) {this.i++;}if (this.getName(this.section()) == name) {// 代码块高亮\n          if (name == 'pre') {this.data = this.data.substr(0, j + 1) + cfg.highlight(this.data.substring(j + 1, this.i - 5), node.attrs) + this.data.substr(this.i - 5);return this.i = j;} else if (name == 'style') this.CssHandler.getStyle(this.data.substring(j + 1, this.i - 7));else if (name == 'title') this.title = this.data.substring(j + 1, this.i - 7);if ((this.i = this.data.indexOf('>', this.i)) == -1) this.i = this.data.length; // 处理 svg\n          if (name == 'svg') {var src = this.data.substring(j, this.i + 1);if (!node.attrs.xmlns) src = ' xmlns=\"http://www.w3.org/2000/svg\"' + src;var i = j;while (this.data[j] != '<') {j--;}src = this.data.substring(j, i) + src;var parent = this.STACK[this.STACK.length - 1];if (node.attrs.width == '100%' && parent && (parent.attrs.style || '').includes('inline')) parent.attrs.style = 'width:300px;max-width:100%;' + parent.attrs.style;this.siblings().push({ name: 'img', attrs: { src: 'data:image/svg+xml;utf8,' + src.replace(/#/g, '%23'), ignore: 'T' } });}return;}}} // 处理属性\n  }, { key: \"matchAttr\", value: function matchAttr(node) {var attrs = node.attrs,style = this.CssHandler.match(node.name, attrs, node) + (attrs.style || ''),styleObj = {};if (attrs.id) {if (this.compress & 1) attrs.id = void 0;else if (this.useAnchor) this.bubble();}if (this.compress & 2 && attrs.class) attrs.class = void 0;switch (node.name) {case 'a':case 'ad':case 'iframe':case 'embed':this.bubble();break;case 'font':if (attrs.color) {styleObj['color'] = attrs.color;attrs.color = void 0;}if (attrs.face) {styleObj['font-family'] = attrs.face;attrs.face = void 0;}if (attrs.size) {var size = parseInt(attrs.size);if (size < 1) size = 1;else if (size > 7) size = 7;var map = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'];styleObj['font-size'] = map[size - 1];attrs.size = void 0;}break;case 'video':case 'audio':if (!attrs.id) attrs.id = node.name + ++this[\"\".concat(node.name, \"Num\")];else this[\"\".concat(node.name, \"Num\")]++;if (node.name == 'video') {if (this.videoNum > 3) node.lazyLoad = 1;if (attrs.width) {styleObj.width = parseFloat(attrs.width) + (attrs.width.includes('%') ? '%' : 'px');attrs.width = void 0;}if (attrs.height) {styleObj.height = parseFloat(attrs.height) + (attrs.height.includes('%') ? '%' : 'px');attrs.height = void 0;}}attrs.source = [];if (attrs.src) attrs.source.push(attrs.src);if (!attrs.controls && !attrs.autoplay) __f__(\"warn\", \"\\u5B58\\u5728\\u6CA1\\u6709 controls \\u5C5E\\u6027\\u7684 \".concat(node.name, \" \\u6807\\u7B7E\\uFF0C\\u53EF\\u80FD\\u5BFC\\u81F4\\u65E0\\u6CD5\\u64AD\\u653E\"), node, \" at components\\\\jyf-parser\\\\libs\\\\MpHtmlParser.js:231\");this.bubble();break;case 'td':case 'th':if (attrs.colspan || attrs.rowspan) for (var k = this.STACK.length, item; item = this.STACK[--k];) {if (item.name == 'table') {item.c = void 0;break;}}}if (attrs.align) {styleObj['text-align'] = attrs.align;attrs.align = void 0;} // 压缩 style\n      var styles = style.split(';');style = '';for (var i = 0, len = styles.length; i < len; i++) {var info = styles[i].split(':');if (info.length < 2) continue;var _key = info[0].trim().toLowerCase(),_value = info.slice(1).join(':').trim();if (_value.includes('-webkit') || _value.includes('-moz') || _value.includes('-ms') || _value.includes('-o') || _value.includes('safe')) style += \";\".concat(_key, \":\").concat(_value);else if (!styleObj[_key] || _value.includes('import') || !styleObj[_key].includes('import')) styleObj[_key] = _value;}if (node.name == 'img' || node.name == 'picture') {if (attrs['data-src']) {attrs.src = attrs.src || attrs['data-src'];attrs['data-src'] = void 0;}if ((attrs.src || node.name == 'picture') && !attrs.ignore) {if (this.bubble()) attrs.i = (this.imgNum++).toString();else attrs.ignore = 'T';}if (attrs.ignore) styleObj['max-width'] = '100%';var width;if (styleObj.width) width = styleObj.width;else if (attrs.width) width = attrs.width.includes('%') ? attrs.width : attrs.width + 'px';if (width) {styleObj.width = width;attrs.width = '100%';if (parseInt(width) > screenWidth) {styleObj.height = '';if (attrs.height) attrs.height = void 0;}}if (styleObj.height) {attrs.height = styleObj.height;styleObj.height = '';} else if (attrs.height && !attrs.height.includes('%')) attrs.height += 'px';}for (var key in styleObj) {var value = styleObj[key];if (key.includes('flex') || key == 'order' || key == 'self-align') node.c = 1; // 填充链接\n        if (value.includes('url')) {var j = value.indexOf('(');if (j++ != -1) {while (value[j] == '\"' || value[j] == \"'\" || blankChar[value[j]]) {j++;}value = value.substr(0, j) + this.getUrl(value.substr(j));}} // 转换 rpx\n        else if (value.includes('rpx')) value = value.replace(/[0-9.]+\\s*rpx/g, function ($) {return parseFloat($) * screenWidth / 750 + 'px';});else if (key == 'white-space' && value.includes('pre')) this.pre = node.pre = true;style += \";\".concat(key, \":\").concat(value);}style = style.substr(1);if (style) attrs.style = style;} // 节点出栈处理\n  }, { key: \"popNode\", value: function popNode(node) {// 空白符处理\n      if (node.pre) {node.pre = this.pre = void 0;for (var i = this.STACK.length; i--;) {if (this.STACK[i].pre) this.pre = true;}}if (node.name == 'head' || cfg.filter && cfg.filter(node, this) == false) return this.siblings().pop();var attrs = node.attrs; // 替换一些标签名\n      if (node.name == 'picture') {node.name = 'img';if (!attrs.src && (node.children[0] || '').name == 'img') attrs.src = node.children[0].attrs.src;return node.children = void 0;}if (cfg.blockTags[node.name]) node.name = 'div';else if (!cfg.trustTags[node.name]) node.name = 'span'; // 处理列表\n      if (node.c && (node.name == 'ul' || node.name == 'ol')) {if ((node.attrs.style || '').includes('list-style:none')) {for (var _i = 0, child; child = node.children[_i++];) {if (child.name == 'li') child.name = 'div';}} else if (node.name == 'ul') {var floor = 1;for (var _i2 = this.STACK.length; _i2--;) {if (this.STACK[_i2].name == 'ul') floor++;}if (floor != 1) for (var _i3 = node.children.length; _i3--;) {node.children[_i3].floor = floor;}} else {for (var _i4 = 0, num = 1, _child; _child = node.children[_i4++];) {if (_child.name == 'li') {_child.type = 'ol';_child.num = function (num, type) {if (type == 'a') return String.fromCharCode(97 + (num - 1) % 26);if (type == 'A') return String.fromCharCode(65 + (num - 1) % 26);if (type == 'i' || type == 'I') {num = (num - 1) % 99 + 1;var one = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'],ten = ['X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC'],res = (ten[Math.floor(num / 10) - 1] || '') + (one[num % 10 - 1] || '');if (type == 'i') return res.toLowerCase();return res;}return num;}(num++, attrs.type) + '.';}}}} // 处理表格的边框\n      if (node.name == 'table') {var padding = attrs.cellpadding,spacing = attrs.cellspacing,border = attrs.border;if (node.c) {this.bubble();if (!padding) padding = 2;if (!spacing) spacing = 2;}if (border) attrs.style = \"border:\".concat(border, \"px solid gray;\").concat(attrs.style || '');if (spacing) attrs.style = \"border-spacing:\".concat(spacing, \"px;\").concat(attrs.style || '');if (border || padding) (function f(ns) {for (var i = 0, n; n = ns[i]; i++) {if (n.name == 'th' || n.name == 'td') {if (border) n.attrs.style = \"border:\".concat(border, \"px solid gray;\").concat(n.attrs.style);if (padding) n.attrs.style = \"padding:\".concat(padding, \"px;\").concat(n.attrs.style);} else f(n.children || []);}})(node.children);}this.CssHandler.pop && this.CssHandler.pop(node); // 自动压缩\n      if (node.name == 'div' && !Object.keys(attrs).length) {var siblings = this.siblings();if (node.children.length == 1 && node.children[0].name == 'div') siblings[siblings.length - 1] = node.children[0];}} // 工具函数\n  }, { key: \"bubble\", value: function bubble() {for (var i = this.STACK.length, item; item = this.STACK[--i];) {if (cfg.richOnlyTags[item.name]) {if (item.name == 'table' && !Object.hasOwnProperty.call(item, 'c')) item.c = 1;return false;}item.c = 1;}return true;} }, { key: \"decode\", value: function decode(val, amp) {var i = -1,j,en;while (1) {if ((i = val.indexOf('&', i + 1)) == -1) break;if ((j = val.indexOf(';', i + 2)) == -1) break;if (val[i + 1] == '#') {en = parseInt((val[i + 2] == 'x' ? '0' : '') + val.substring(i + 2, j));if (!isNaN(en)) val = val.substr(0, i) + String.fromCharCode(en) + val.substr(j + 1);} else {en = val.substring(i + 1, j);if (cfg.entities[en] || en == amp) val = val.substr(0, i) + (cfg.entities[en] || '&') + val.substr(j + 1);}}return val;} }, { key: \"getUrl\", value: function getUrl(url) {if (url[0] == '/') {if (url[1] == '/') url = this.protocol + ':' + url;else if (this.domain) url = this.domain + url;} else if (this.domain && url.indexOf('data:') != 0 && !url.includes('://')) url = this.domain + '/' + url;return url;} }, { key: \"Text\", // 状态机\n    value: function Text(c) {if (c == '<') {var next = this.data[this.i + 1],isLetter = function isLetter(c) {return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';};if (isLetter(next)) {this.setText();this.start = this.i + 1;this.state = this.TagName;} else if (next == '/') {this.setText();if (isLetter(this.data[++this.i + 1])) {this.start = this.i + 1;this.state = this.EndTag;} else this.Comment();} else if (next == '!') {this.setText();this.Comment();\n        }\n      }\n    } }, { key: \"Comment\", value: function Comment()\n    {\n      var key;\n      if (this.data.substring(this.i + 2, this.i + 4) == '--') key = '-->';else\n      if (this.data.substring(this.i + 2, this.i + 9) == '[CDATA[') key = ']]>';else\n      key = '>';\n      if ((this.i = this.data.indexOf(key, this.i + 2)) == -1) this.i = this.data.length;else\n      this.i += key.length - 1;\n      this.start = this.i + 1;\n      this.state = this.Text;\n    } }, { key: \"TagName\", value: function TagName(\n    c) {\n      if (blankChar[c]) {\n        this.tagName = this.section();\n        while (blankChar[this.data[this.i]]) {this.i++;}\n        if (this.isClose()) this.setNode();else\n        {\n          this.start = this.i;\n          this.state = this.AttrName;\n        }\n      } else if (this.isClose()) {\n        this.tagName = this.section();\n        this.setNode();\n      }\n    } }, { key: \"AttrName\", value: function AttrName(\n    c) {\n      var blank = blankChar[c];\n      if (blank) {\n        this.attrName = this.section();\n        c = this.data[this.i];\n      }\n      if (c == '=') {\n        if (!blank) this.attrName = this.section();\n        while (blankChar[this.data[++this.i]]) {;}\n        this.start = this.i--;\n        this.state = this.AttrValue;\n      } else if (blank) this.setAttr();else\n      if (this.isClose()) {\n        this.attrName = this.section();\n        this.setAttr();\n      }\n    } }, { key: \"AttrValue\", value: function AttrValue(\n    c) {\n      if (c == '\"' || c == \"'\") {\n        this.start++;\n        if ((this.i = this.data.indexOf(c, this.i + 1)) == -1) return this.i = this.data.length;\n        this.attrVal = this.section();\n        this.i++;\n      } else {\n        for (; !blankChar[this.data[this.i]] && !this.isClose(); this.i++) {;}\n        this.attrVal = this.section();\n      }\n      this.setAttr();\n    } }, { key: \"EndTag\", value: function EndTag(\n    c) {\n      if (blankChar[c] || c == '>' || c == '/') {\n        var name = this.getName(this.section());\n        for (var i = this.STACK.length; i--;) {\n          if (this.STACK[i].name == name) break;}\n        if (i != -1) {\n          var node;\n          while ((node = this.STACK.pop()).name != name) {;}\n          this.popNode(node);\n        } else if (name == 'p' || name == 'br')\n        this.siblings().push({\n          name: name,\n          attrs: {} });\n\n        this.i = this.data.indexOf('>', this.i);\n        this.start = this.i + 1;\n        if (this.i == -1) this.i = this.data.length;else\n        this.state = this.Text;\n      }\n    } }]);return MpHtmlParser;}();\n\nmodule.exports = MpHtmlParser;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///509\n");

/***/ }),

/***/ 510:
/*!***********************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/jyf-parser/libs/config.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* 配置文件 */\n\n\n\nmodule.exports = {\n  // 过滤器函数\n  filter: null,\n  // 代码高亮函数\n  highlight: null,\n  // 文本处理函数\n  onText: null,\n  // 实体编码列表\n  entities: {\n    quot: '\"',\n    apos: \"'\",\n    semi: ';',\n    nbsp: '\\xA0',\n    ensp: \"\\u2002\",\n    emsp: \"\\u2003\",\n    ndash: '–',\n    mdash: '—',\n    middot: '·',\n    lsquo: '‘',\n    rsquo: '’',\n    ldquo: '“',\n    rdquo: '”',\n    bull: '•',\n    hellip: '…' },\n\n  blankChar: makeMap(' ,\\xA0,\\t,\\r,\\n,\\f'),\n  // 块级标签，将被转为 div\n  blockTags: makeMap('address,article,aside,body,caption,center,cite,footer,header,html,nav,section' +\n\n\n\n  ',pre'),\n  // 将被移除的标签\n  ignoreTags: makeMap(\n  'area,base,basefont,canvas,command,frame,input,isindex,keygen,link,map,meta,param,script,source,style,svg,textarea,title,track,use,wbr'),\n\n\n\n\n\n\n\n  // 只能被 rich-text 显示的标签\n  richOnlyTags: makeMap('a,colgroup,fieldset,legend,picture,table'),\n\n\n\n\n  // 自闭合的标签\n  selfClosingTags: makeMap(\n  'area,base,basefont,br,col,circle,ellipse,embed,frame,hr,img,input,isindex,keygen,line,link,meta,param,path,polygon,rect,source,track,use,wbr'),\n\n  // 信任的属性\n  trustAttrs: makeMap(\n  'align,alt,app-id,author,autoplay,border,cellpadding,cellspacing,class,color,colspan,controls,data-src,dir,face,height,href,id,ignore,loop,media,muted,name,path,poster,rowspan,size,span,src,start,style,type,unit-id,width,xmlns'),\n\n  // bool 型的属性\n  boolAttrs: makeMap('autoplay,controls,ignore,loop,muted'),\n  // 信任的标签\n  trustTags: makeMap(\n  'a,abbr,ad,audio,b,blockquote,br,code,col,colgroup,dd,del,dl,dt,div,em,fieldset,h1,h2,h3,h4,h5,h6,hr,i,img,ins,label,legend,li,ol,p,q,source,span,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,title,ul,video' +\n\n\n\n\n  ',embed,iframe'),\n\n\n  // 默认的标签样式\n  userAgentStyles: {\n    address: 'font-style:italic',\n    big: 'display:inline;font-size:1.2em',\n    blockquote: 'background-color:#f6f6f6;border-left:3px solid #dbdbdb;color:#6c6c6c;padding:5px 0 5px 10px',\n    caption: 'display:table-caption;text-align:center',\n    center: 'text-align:center',\n    cite: 'font-style:italic',\n    dd: 'margin-left:40px',\n    mark: 'background-color:yellow',\n    pre: 'font-family:monospace;white-space:pre;overflow:scroll',\n    s: 'text-decoration:line-through',\n    small: 'display:inline;font-size:0.8em',\n    u: 'text-decoration:underline' } };\n\n\n\nfunction makeMap(str) {\n  var map = {},\n  list = str.split(',');\n  for (var i = list.length; i--;) {\n    map[list[i]] = true;}\n  return map;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9qeWYtcGFyc2VyL2xpYnMvY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmaWx0ZXIiLCJoaWdobGlnaHQiLCJvblRleHQiLCJlbnRpdGllcyIsInF1b3QiLCJhcG9zIiwic2VtaSIsIm5ic3AiLCJlbnNwIiwiZW1zcCIsIm5kYXNoIiwibWRhc2giLCJtaWRkb3QiLCJsc3F1byIsInJzcXVvIiwibGRxdW8iLCJyZHF1byIsImJ1bGwiLCJoZWxsaXAiLCJibGFua0NoYXIiLCJtYWtlTWFwIiwiYmxvY2tUYWdzIiwiaWdub3JlVGFncyIsInJpY2hPbmx5VGFncyIsInNlbGZDbG9zaW5nVGFncyIsInRydXN0QXR0cnMiLCJib29sQXR0cnMiLCJ0cnVzdFRhZ3MiLCJ1c2VyQWdlbnRTdHlsZXMiLCJhZGRyZXNzIiwiYmlnIiwiYmxvY2txdW90ZSIsImNhcHRpb24iLCJjZW50ZXIiLCJjaXRlIiwiZGQiLCJtYXJrIiwicHJlIiwicyIsInNtYWxsIiwidSIsInN0ciIsIm1hcCIsImxpc3QiLCJzcGxpdCIsImkiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNoQjtBQUNBQyxRQUFNLEVBQUUsSUFGUTtBQUdoQjtBQUNBQyxXQUFTLEVBQUUsSUFKSztBQUtoQjtBQUNBQyxRQUFNLEVBQUUsSUFOUTtBQU9oQjtBQUNBQyxVQUFRLEVBQUU7QUFDVEMsUUFBSSxFQUFFLEdBREc7QUFFVEMsUUFBSSxFQUFFLEdBRkc7QUFHVEMsUUFBSSxFQUFFLEdBSEc7QUFJVEMsUUFBSSxFQUFFLE1BSkc7QUFLVEMsUUFBSSxFQUFFLFFBTEc7QUFNVEMsUUFBSSxFQUFFLFFBTkc7QUFPVEMsU0FBSyxFQUFFLEdBUEU7QUFRVEMsU0FBSyxFQUFFLEdBUkU7QUFTVEMsVUFBTSxFQUFFLEdBVEM7QUFVVEMsU0FBSyxFQUFFLEdBVkU7QUFXVEMsU0FBSyxFQUFFLEdBWEU7QUFZVEMsU0FBSyxFQUFFLEdBWkU7QUFhVEMsU0FBSyxFQUFFLEdBYkU7QUFjVEMsUUFBSSxFQUFFLEdBZEc7QUFlVEMsVUFBTSxFQUFFLEdBZkMsRUFSTTs7QUF5QmhCQyxXQUFTLEVBQUVDLE9BQU8sQ0FBQyxvQkFBRCxDQXpCRjtBQTBCaEI7QUFDQUMsV0FBUyxFQUFFRCxPQUFPLENBQUM7Ozs7QUFJbEIsUUFKaUIsQ0EzQkY7QUFnQ2hCO0FBQ0FFLFlBQVUsRUFBRUYsT0FBTztBQUNsQix5SUFEa0IsQ0FqQ0g7Ozs7Ozs7O0FBMENoQjtBQUNBRyxjQUFZLEVBQUVILE9BQU8sQ0FBQywwQ0FBRCxDQTNDTDs7Ozs7QUFnRGhCO0FBQ0FJLGlCQUFlLEVBQUVKLE9BQU87QUFDdkIsZ0pBRHVCLENBakRSOztBQW9EaEI7QUFDQUssWUFBVSxFQUFFTCxPQUFPO0FBQ2xCLHFPQURrQixDQXJESDs7QUF3RGhCO0FBQ0FNLFdBQVMsRUFBRU4sT0FBTyxDQUFDLHFDQUFELENBekRGO0FBMERoQjtBQUNBTyxXQUFTLEVBQUVQLE9BQU87QUFDakI7Ozs7O0FBS0UsaUJBTmUsQ0EzREY7OztBQW9FaEI7QUFDQVEsaUJBQWUsRUFBRTtBQUNoQkMsV0FBTyxFQUFFLG1CQURPO0FBRWhCQyxPQUFHLEVBQUUsZ0NBRlc7QUFHaEJDLGNBQVUsRUFBRSw2RkFISTtBQUloQkMsV0FBTyxFQUFFLHlDQUpPO0FBS2hCQyxVQUFNLEVBQUUsbUJBTFE7QUFNaEJDLFFBQUksRUFBRSxtQkFOVTtBQU9oQkMsTUFBRSxFQUFFLGtCQVBZO0FBUWhCQyxRQUFJLEVBQUUseUJBUlU7QUFTaEJDLE9BQUcsRUFBRSx1REFUVztBQVVoQkMsS0FBQyxFQUFFLDhCQVZhO0FBV2hCQyxTQUFLLEVBQUUsZ0NBWFM7QUFZaEJDLEtBQUMsRUFBRSwyQkFaYSxFQXJFRCxFQUFqQjs7OztBQXFGQSxTQUFTcEIsT0FBVCxDQUFpQnFCLEdBQWpCLEVBQXNCO0FBQ3JCLE1BQUlDLEdBQUcsR0FBRyxFQUFWO0FBQ0NDLE1BQUksR0FBR0YsR0FBRyxDQUFDRyxLQUFKLENBQVUsR0FBVixDQURSO0FBRUEsT0FBSyxJQUFJQyxDQUFDLEdBQUdGLElBQUksQ0FBQ0csTUFBbEIsRUFBMEJELENBQUMsRUFBM0I7QUFDQ0gsT0FBRyxDQUFDQyxJQUFJLENBQUNFLENBQUQsQ0FBTCxDQUFILEdBQWUsSUFBZixDQUREO0FBRUEsU0FBT0gsR0FBUDtBQUNBIiwiZmlsZSI6IjUxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIOmFjee9ruaWh+S7tiAqL1xyXG5cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQvLyDov4fmu6Tlmajlh73mlbBcclxuXHRmaWx0ZXI6IG51bGwsXHJcblx0Ly8g5Luj56CB6auY5Lqu5Ye95pWwXHJcblx0aGlnaGxpZ2h0OiBudWxsLFxyXG5cdC8vIOaWh+acrOWkhOeQhuWHveaVsFxyXG5cdG9uVGV4dDogbnVsbCxcclxuXHQvLyDlrp7kvZPnvJbnoIHliJfooahcclxuXHRlbnRpdGllczoge1xyXG5cdFx0cXVvdDogJ1wiJyxcclxuXHRcdGFwb3M6IFwiJ1wiLFxyXG5cdFx0c2VtaTogJzsnLFxyXG5cdFx0bmJzcDogJ1xceEEwJyxcclxuXHRcdGVuc3A6ICdcXHUyMDAyJyxcclxuXHRcdGVtc3A6ICdcXHUyMDAzJyxcclxuXHRcdG5kYXNoOiAn4oCTJyxcclxuXHRcdG1kYXNoOiAn4oCUJyxcclxuXHRcdG1pZGRvdDogJ8K3JyxcclxuXHRcdGxzcXVvOiAn4oCYJyxcclxuXHRcdHJzcXVvOiAn4oCZJyxcclxuXHRcdGxkcXVvOiAn4oCcJyxcclxuXHRcdHJkcXVvOiAn4oCdJyxcclxuXHRcdGJ1bGw6ICfigKInLFxyXG5cdFx0aGVsbGlwOiAn4oCmJ1xyXG5cdH0sXHJcblx0YmxhbmtDaGFyOiBtYWtlTWFwKCcgLFxceEEwLFxcdCxcXHIsXFxuLFxcZicpLFxyXG5cdC8vIOWdl+e6p+agh+etvu+8jOWwhuiiq+i9rOS4uiBkaXZcclxuXHRibG9ja1RhZ3M6IG1ha2VNYXAoJ2FkZHJlc3MsYXJ0aWNsZSxhc2lkZSxib2R5LGNhcHRpb24sY2VudGVyLGNpdGUsZm9vdGVyLGhlYWRlcixodG1sLG5hdixzZWN0aW9uJyArIChcclxuXHJcblxyXG5cclxuXHRcdCcscHJlJykpLFxyXG5cdC8vIOWwhuiiq+enu+mZpOeahOagh+etvlxyXG5cdGlnbm9yZVRhZ3M6IG1ha2VNYXAoXHJcblx0XHQnYXJlYSxiYXNlLGJhc2Vmb250LGNhbnZhcyxjb21tYW5kLGZyYW1lLGlucHV0LGlzaW5kZXgsa2V5Z2VuLGxpbmssbWFwLG1ldGEscGFyYW0sc2NyaXB0LHNvdXJjZSxzdHlsZSxzdmcsdGV4dGFyZWEsdGl0bGUsdHJhY2ssdXNlLHdicidcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHQpLFxyXG5cdC8vIOWPquiDveiiqyByaWNoLXRleHQg5pi+56S655qE5qCH562+XHJcblx0cmljaE9ubHlUYWdzOiBtYWtlTWFwKCdhLGNvbGdyb3VwLGZpZWxkc2V0LGxlZ2VuZCxwaWN0dXJlLHRhYmxlJ1xyXG5cclxuXHJcblxyXG5cdCksXHJcblx0Ly8g6Ieq6Zet5ZCI55qE5qCH562+XHJcblx0c2VsZkNsb3NpbmdUYWdzOiBtYWtlTWFwKFxyXG5cdFx0J2FyZWEsYmFzZSxiYXNlZm9udCxicixjb2wsY2lyY2xlLGVsbGlwc2UsZW1iZWQsZnJhbWUsaHIsaW1nLGlucHV0LGlzaW5kZXgsa2V5Z2VuLGxpbmUsbGluayxtZXRhLHBhcmFtLHBhdGgscG9seWdvbixyZWN0LHNvdXJjZSx0cmFjayx1c2Usd2JyJ1xyXG5cdCksXHJcblx0Ly8g5L+h5Lu755qE5bGe5oCnXHJcblx0dHJ1c3RBdHRyczogbWFrZU1hcChcclxuXHRcdCdhbGlnbixhbHQsYXBwLWlkLGF1dGhvcixhdXRvcGxheSxib3JkZXIsY2VsbHBhZGRpbmcsY2VsbHNwYWNpbmcsY2xhc3MsY29sb3IsY29sc3Bhbixjb250cm9scyxkYXRhLXNyYyxkaXIsZmFjZSxoZWlnaHQsaHJlZixpZCxpZ25vcmUsbG9vcCxtZWRpYSxtdXRlZCxuYW1lLHBhdGgscG9zdGVyLHJvd3NwYW4sc2l6ZSxzcGFuLHNyYyxzdGFydCxzdHlsZSx0eXBlLHVuaXQtaWQsd2lkdGgseG1sbnMnXHJcblx0KSxcclxuXHQvLyBib29sIOWei+eahOWxnuaAp1xyXG5cdGJvb2xBdHRyczogbWFrZU1hcCgnYXV0b3BsYXksY29udHJvbHMsaWdub3JlLGxvb3AsbXV0ZWQnKSxcclxuXHQvLyDkv6Hku7vnmoTmoIfnrb5cclxuXHR0cnVzdFRhZ3M6IG1ha2VNYXAoXHJcblx0XHQnYSxhYmJyLGFkLGF1ZGlvLGIsYmxvY2txdW90ZSxicixjb2RlLGNvbCxjb2xncm91cCxkZCxkZWwsZGwsZHQsZGl2LGVtLGZpZWxkc2V0LGgxLGgyLGgzLGg0LGg1LGg2LGhyLGksaW1nLGlucyxsYWJlbCxsZWdlbmQsbGksb2wscCxxLHNvdXJjZSxzcGFuLHN0cm9uZyxzdWIsc3VwLHRhYmxlLHRib2R5LHRkLHRmb290LHRoLHRoZWFkLHRyLHRpdGxlLHVsLHZpZGVvJ1xyXG5cclxuXHJcblxyXG5cclxuXHRcdCsgJyxlbWJlZCxpZnJhbWUnXHJcblxyXG5cdCksXHJcblx0Ly8g6buY6K6k55qE5qCH562+5qC35byPXHJcblx0dXNlckFnZW50U3R5bGVzOiB7XHJcblx0XHRhZGRyZXNzOiAnZm9udC1zdHlsZTppdGFsaWMnLFxyXG5cdFx0YmlnOiAnZGlzcGxheTppbmxpbmU7Zm9udC1zaXplOjEuMmVtJyxcclxuXHRcdGJsb2NrcXVvdGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjY7Ym9yZGVyLWxlZnQ6M3B4IHNvbGlkICNkYmRiZGI7Y29sb3I6IzZjNmM2YztwYWRkaW5nOjVweCAwIDVweCAxMHB4JyxcclxuXHRcdGNhcHRpb246ICdkaXNwbGF5OnRhYmxlLWNhcHRpb247dGV4dC1hbGlnbjpjZW50ZXInLFxyXG5cdFx0Y2VudGVyOiAndGV4dC1hbGlnbjpjZW50ZXInLFxyXG5cdFx0Y2l0ZTogJ2ZvbnQtc3R5bGU6aXRhbGljJyxcclxuXHRcdGRkOiAnbWFyZ2luLWxlZnQ6NDBweCcsXHJcblx0XHRtYXJrOiAnYmFja2dyb3VuZC1jb2xvcjp5ZWxsb3cnLFxyXG5cdFx0cHJlOiAnZm9udC1mYW1pbHk6bW9ub3NwYWNlO3doaXRlLXNwYWNlOnByZTtvdmVyZmxvdzpzY3JvbGwnLFxyXG5cdFx0czogJ3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2gnLFxyXG5cdFx0c21hbGw6ICdkaXNwbGF5OmlubGluZTtmb250LXNpemU6MC44ZW0nLFxyXG5cdFx0dTogJ3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUnXHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYWtlTWFwKHN0cikge1xyXG5cdHZhciBtYXAgPSB7fSxcclxuXHRcdGxpc3QgPSBzdHIuc3BsaXQoJywnKTtcclxuXHRmb3IgKHZhciBpID0gbGlzdC5sZW5ndGg7IGktLTspXHJcblx0XHRtYXBbbGlzdFtpXV0gPSB0cnVlO1xyXG5cdHJldHVybiBtYXA7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///510\n");

/***/ }),

/***/ 511:
/*!***************************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/jyf-parser/libs/CssHandler.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;} /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          解析和匹配 Css 的选择器\r\ngithub：https://github.com/jin-yufeng/Parser\r\ndocs：https://jin-yufeng.github.io/Parser\r\nauthor：JinYufeng\r\nupdate：2020/03/15\r\nnvar cfg = __webpack_require__(/*! ./config.js */ 510);var\nCssHandler = /*#__PURE__*/function () {\"use strict\";\n  function CssHandler(tagStyle) {var _this = this;_classCallCheck(this, CssHandler);_defineProperty(this, \"getStyle\",\n\n\n\n\n\n    function (data) {return _this.styles = new CssParser(data, _this.styles).parse();});var styles = Object.assign({}, cfg.userAgentStyles);for (var item in tagStyle) {styles[item] = (styles[item] ? styles[item] + ';' : '') + tagStyle[item];}this.styles = styles;}_createClass(CssHandler, [{ key: \"match\", value: function match(\n    name, attrs) {\n      var tmp,matched = (tmp = this.styles[name]) ? tmp + ';' : '';\n      if (attrs.class) {\n        var items = attrs.class.split(' ');\n        for (var i = 0, item; item = items[i]; i++) {\n          if (tmp = this.styles['.' + item])\n          matched += tmp + ';';}\n      }\n      if (tmp = this.styles['#' + attrs.id])\n      matched += tmp + ';';\n      return matched;\n    } }]);return CssHandler;}();\n\nmodule.exports = CssHandler;var\nCssParser = /*#__PURE__*/function () {\"use strict\";\n  function CssParser(data, init) {var _this2 = this;_classCallCheck(this, CssParser);_defineProperty(this, \"section\",\n\n\n\n\n\n\n\n\n\n\n\n\n    function () {return _this2.data.substring(_this2.start, _this2.i);});_defineProperty(this, \"isLetter\",\n    function (c) {return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';});this.data = data;this.floor = 0;this.i = 0;this.list = [];this.res = init;this.state = this.Space;}_createClass(CssParser, [{ key: \"parse\", value: function parse() {for (var c; c = this.data[this.i]; this.i++) {this.state(c);}return this.res;} }, { key: \"Space\",\n    // 状态机\n    value: function Space(c) {\n      if (c == '.' || c == '#' || this.isLetter(c)) {\n        this.start = this.i;\n        this.state = this.Name;\n      } else if (c == '/' && this.data[this.i + 1] == '*')\n      this.Comment();else\n      if (!cfg.blankChar[c] && c != ';')\n      this.state = this.Ignore;\n    } }, { key: \"Comment\", value: function Comment()\n    {\n      this.i = this.data.indexOf('*/', this.i) + 1;\n      if (!this.i) this.i = this.data.length;\n      this.state = this.Space;\n    } }, { key: \"Ignore\", value: function Ignore(\n    c) {\n      if (c == '{') this.floor++;else\n      if (c == '}' && ! --this.floor) this.state = this.Space;\n    } }, { key: \"Name\", value: function Name(\n    c) {\n      if (cfg.blankChar[c]) {\n        this.list.push(this.section());\n        this.state = this.NameSpace;\n      } else if (c == '{') {\n        this.list.push(this.section());\n        this.Content();\n      } else if (c == ',') {\n        this.list.push(this.section());\n        this.Comma();\n      } else if (!this.isLetter(c) && (c < '0' || c > '9') && c != '-' && c != '_')\n      this.state = this.Ignore;\n    } }, { key: \"NameSpace\", value: function NameSpace(\n    c) {\n      if (c == '{') this.Content();else\n      if (c == ',') this.Comma();else\n      if (!cfg.blankChar[c]) this.state = this.Ignore;\n    } }, { key: \"Comma\", value: function Comma()\n    {\n      while (cfg.blankChar[this.data[++this.i]]) {;}\n      if (this.data[this.i] == '{') this.Content();else\n      {\n        this.start = this.i--;\n        this.state = this.Name;\n      }\n    } }, { key: \"Content\", value: function Content()\n    {\n      this.start = ++this.i;\n      if ((this.i = this.data.indexOf('}', this.i)) == -1) this.i = this.data.length;\n      var content = this.section();\n      for (var i = 0, item; item = this.list[i++];) {\n        if (this.res[item]) this.res[item] += ';' + content;else\n        this.res[item] = content;}\n      this.list = [];\n      this.state = this.Space;\n    } }]);return CssParser;}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///511\n");

/***/ }),

/***/ 589:
/*!***************************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/components/w-picker/areadata/areadata.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var cityData = [{ value: '110000', label: '北京市', children: [{ value: \"110100\", label: \"北京市\", children: [{ value: \"110101\", label: \"东城区\" }, { value: \"110102\", label: \"西城区\" }, { value: \"110105\", label: \"朝阳区\" }, { value: \"110106\", label: \"丰台区\" }, { value: \"110107\", label: \"石景山区\" }, { value: \"110108\", label: \"海淀区\" }, { value: \"110109\", label: \"门头沟区\" }, { value: \"110111\", label: \"房山区\" }, { value: \"110112\", label: \"通州区\" }, { value: \"110113\", label: \"顺义区\" }, { value: \"110114\", label: \"昌平区\" }, { value: \"110115\", label: \"大兴区\" }, { value: \"110116\", label: \"怀柔区\" }, { value: \"110117\", label: \"平谷区\" }, { value: \"110118\", label: \"密云区\" }, { value: \"110119\", label: \"延庆区\" }] }] }, { value: '120000', label: '天津市', children: [{ value: \"120100\", label: \"天津市\", children: [{ value: \"120101\", label: \"和平区\" }, { value: \"120102\", label: \"河东区\" }, { value: \"120103\", label: \"河西区\" }, { value: \"120104\", label: \"南开区\" }, { value: \"120105\", label: \"河北区\" }, { value: \"120106\", label: \"红桥区\" }, { value: \"120110\", label: \"东丽区\" }, { value: \"120111\", label: \"西青区\" }, { value: \"120112\", label: \"津南区\" }, { value: \"120113\", label: \"北辰区\" }, { value: \"120114\", label: \"武清区\" }, { value: \"120115\", label: \"宝坻区\" }, { value: \"120116\", label: \"滨海新区\" }, { value: \"120117\", label: \"宁河区\" }, { value: \"120118\", label: \"静海区\" }, { value: \"120119\", label: \"蓟州区\" }] }] }, { value: '130000', label: '河北省', children: [{ value: \"130100\", label: \"石家庄市\", children: [{ value: \"130102\", label: \"长安区\" }, { value: \"130104\", label: \"桥西区\" }, { value: \"130105\", label: \"新华区\" }, { value: \"130107\", label: \"井陉矿区\" }, { value: \"130108\", label: \"裕华区\" }, { value: \"130109\", label: \"藁城区\" }, { value: \"130110\", label: \"鹿泉区\" }, { value: \"130111\", label: \"栾城区\" }, { value: \"130121\", label: \"井陉县\" }, { value: \"130123\", label: \"正定县\" }, { value: \"130125\", label: \"行唐县\" }, { value: \"130126\", label: \"灵寿县\" }, { value: \"130127\", label: \"高邑县\" }, { value: \"130128\", label: \"深泽县\" }, { value: \"130129\", label: \"赞皇县\" }, { value: \"130130\", label: \"无极县\" }, { value: \"130131\", label: \"平山县\" }, { value: \"130132\", label: \"元氏县\" }, { value: \"130133\", label: \"赵县\" }, { value: \"130181\", label: \"辛集市\" }, { value: \"130183\", label: \"晋州市\" }, { value: \"130184\", label: \"新乐市\" }, { value: \"130172\", label: \"石家庄循环化工园区\" }, { value: \"130171\", label: \"石家庄高新技术产业开发区\" }] }, { value: \"130200\", label: \"唐山市\", children: [{ value: \"130202\", label: \"路南区\" }, { value: \"130203\", label: \"路北区\" }, { value: \"130204\", label: \"古冶区\" }, { value: \"130205\", label: \"开平区\" }, { value: \"130207\", label: \"丰南区\" }, { value: \"130208\", label: \"丰润区\" }, { value: \"130209\", label: \"曹妃甸区\" }, { value: \"130223\", label: \"滦县\" }, { value: \"130224\", label: \"滦南县\" }, { value: \"130225\", label: \"乐亭县\" }, { value: \"130227\", label: \"迁西县\" }, { value: \"130229\", label: \"玉田县\" }, { value: \"130281\", label: \"遵化市\" }, { value: \"130283\", label: \"迁安市\" }, { value: \"130271\", label: \"唐山市芦台经济技术开发区\" }, { value: \"130272\", label: \"唐山市汉沽管理区\" }, { value: \"130273\", label: \"唐山高新技术产业开发区\" }, { value: \"130274\", label: \"河北唐山海港经济开发区\" }] }, { value: \"130300\", label: \"秦皇岛市\", children: [{ value: \"130302\", label: \"海港区\" }, { value: \"130303\", label: \"山海关区\" }, { value: \"130304\", label: \"北戴河区\" }, { value: \"130321\", label: \"青龙满族自治县\" }, { value: \"130322\", label: \"昌黎县\" }, { value: \"130306\", label: \"抚宁区\" }, { value: \"130324\", label: \"卢龙县\" }, { value: \"130371\", label: \"秦皇岛市经济技术开发区\" }, { value: \"130372\", label: \"北戴河新区\" }] }, { value: \"130400\", label: \"邯郸市\", children: [{ value: \"130402\", label: \"邯山区\" }, { value: \"130403\", label: \"丛台区\" }, { value: \"130404\", label: \"复兴区\" }, { value: \"130406\", label: \"峰峰矿区\" }, { value: \"130421\", label: \"邯郸县\" }, { value: \"130423\", label: \"临漳县\" }, { value: \"130424\", label: \"成安县\" }, { value: \"130425\", label: \"大名县\" }, { value: \"130426\", label: \"涉县\" }, { value: \"130427\", label: \"磁县\" }, { value: \"130407\", label: \"肥乡区\" }, { value: \"130408\", label: \"永年区\" }, { value: \"130430\", label: \"邱县\" }, { value: \"130431\", label: \"鸡泽县\" }, { value: \"130432\", label: \"广平县\" }, { value: \"130433\", label: \"馆陶县\" }, { value: \"130434\", label: \"魏县\" }, { value: \"130435\", label: \"曲周县\" }, { value: \"130481\", label: \"武安市\" }, { value: \"130471\", label: \"邯郸经济技术开发区\" }, { value: \"130473\", label: \"邯郸冀南新区\" }] }, { value: \"130500\", label: \"邢台市\", children: [{ value: \"130502\", label: \"桥东区\" }, { value: \"130503\", label: \"桥西区\" }, { value: \"130521\", label: \"邢台县\" }, { value: \"130522\", label: \"临城县\" }, { value: \"130523\", label: \"内丘县\" }, { value: \"130524\", label: \"柏乡县\" }, { value: \"130525\", label: \"隆尧县\" }, { value: \"130526\", label: \"任县\" }, { value: \"130527\", label: \"南和县\" }, { value: \"130528\", label: \"宁晋县\" }, { value: \"130529\", label: \"巨鹿县\" }, { value: \"130530\", label: \"新河县\" }, { value: \"130531\", label: \"广宗县\" }, { value: \"130532\", label: \"平乡县\" }, { value: \"130533\", label: \"威县\" }, { value: \"130534\", label: \"清河县\" }, { value: \"130535\", label: \"临西县\" }, { value: \"130581\", label: \"南宫市\" }, { value: \"130582\", label: \"沙河市\" }, { value: \"130571\", label: \"河北邢台经济开发区\" }] }, { value: \"130600\", label: \"保定市\", children: [{ value: \"130602\", label: \"竞秀区\" }, { value: \"130606\", label: \"莲池区\" }, { value: \"130607\", label: \"满城区\" }, { value: \"130608\", label: \"清苑区\" }, { value: \"130623\", label: \"涞水县\" }, { value: \"130624\", label: \"阜平县\" }, { value: \"130609\", label: \"徐水区\" }, { value: \"130626\", label: \"定兴县\" }, { value: \"130627\", label: \"唐县\" }, { value: \"130628\", label: \"高阳县\" }, { value: \"130629\", label: \"容城县\" }, { value: \"130630\", label: \"涞源县\" }, { value: \"130631\", label: \"望都县\" }, { value: \"130632\", label: \"安新县\" }, { value: \"130633\", label: \"易县\" }, { value: \"130634\", label: \"曲阳县\" }, { value: \"130635\", label: \"蠡县\" }, { value: \"130636\", label: \"顺平县\" }, { value: \"130637\", label: \"博野县\" }, { value: \"130638\", label: \"雄县\" }, { value: \"130681\", label: \"涿州市\" }, { value: \"130682\", label: \"定州市\" }, { value: \"130683\", label: \"安国市\" }, { value: \"130684\", label: \"高碑店市\" }, { value: \"130671\", label: \"保定高新技术产业开发区\" }, { value: \"130672\", label: \"保定白沟新城\" }] }, { value: \"130700\", label: \"张家口市\", children: [{ value: \"130702\", label: \"桥东区\" }, { value: \"130703\", label: \"桥西区\" }, { value: \"130705\", label: \"宣化区\" }, { value: \"130706\", label: \"下花园区\" }, { value: \"130708\", label: \"万全区\" }, { value: \"130709\", label: \"崇礼区\" }, { value: \"130722\", label: \"张北县\" }, { value: \"130723\", label: \"康保县\" }, { value: \"130724\", label: \"沽源县\" }, { value: \"130725\", label: \"尚义县\" }, { value: \"130726\", label: \"蔚县\" }, { value: \"130727\", label: \"阳原县\" }, { value: \"130728\", label: \"怀安县\" }, { value: \"130730\", label: \"怀来县\" }, { value: \"130731\", label: \"涿鹿县\" }, { value: \"130732\", label: \"赤城县\" }, { value: \"130733\", label: \"崇礼县\" }, { value: \"130771\", label: \"张家口市高新技术产业开发区\" }, { value: \"130772\", label: \"张家口市察北管理区\" }, { value: \"130773\", label: \"张家口市塞北管理区\" }] }, { value: \"130800\", label: \"承德市\", children: [{ value: \"130802\", label: \"双桥区\" }, { value: \"130803\", label: \"双滦区\" }, { value: \"130804\", label: \"鹰手营子矿区\" }, { value: \"130821\", label: \"承德县\" }, { value: \"130822\", label: \"兴隆县\" }, { value: \"130881\", label: \"平泉市\" }, { value: \"130824\", label: \"滦平县\" }, { value: \"130825\", label: \"隆化县\" }, { value: \"130826\", label: \"丰宁满族自治县\" }, { value: \"130827\", label: \"宽城满族自治县\" }, { value: \"130828\", label: \"围场满族蒙古族自治县\" }, { value: \"130871\", label: \"承德高新技术产业开发区\" }] }, { value: \"130900\", label: \"沧州市\", children: [{ value: \"130902\", label: \"新华区\" }, { value: \"130903\", label: \"运河区\" }, { value: \"130921\", label: \"沧县\" }, { value: \"130922\", label: \"青县\" }, { value: \"130923\", label: \"东光县\" }, { value: \"130924\", label: \"海兴县\" }, { value: \"130925\", label: \"盐山县\" }, { value: \"130926\", label: \"肃宁县\" }, { value: \"130927\", label: \"南皮县\" }, { value: \"130928\", label: \"吴桥县\" }, { value: \"130929\", label: \"献县\" }, { value: \"130930\", label: \"孟村回族自治县\" }, { value: \"130981\", label: \"泊头市\" }, { value: \"130982\", label: \"任丘市\" }, { value: \"130983\", label: \"黄骅市\" }, { value: \"130984\", label: \"河间市\" }, { value: \"130971\", label: \"河北沧州经济开发区\" }, { value: \"130972\", label: \"沧州高新技术产业开发区\" }, { value: \"130973\", label: \"沧州渤海新区\" }] }, { value: \"131000\", label: \"廊坊市\", children: [{ value: \"131002\", label: \"安次区\" }, { value: \"131003\", label: \"广阳区\" }, { value: \"131022\", label: \"固安县\" }, { value: \"131023\", label: \"永清县\" }, { value: \"131024\", label: \"香河县\" }, { value: \"131025\", label: \"大城县\" }, { value: \"131026\", label: \"文安县\" }, { value: \"131028\", label: \"大厂回族自治县\" }, { value: \"131071\", label: \"廊坊经济技术开发区\" }, { value: \"131081\", label: \"霸州市\" }, { value: \"131082\", label: \"三河市\" }] }, { value: \"131100\", label: \"衡水市\", children: [{ value: \"131102\", label: \"桃城区\" }, { value: \"131121\", label: \"枣强县\" }, { value: \"131122\", label: \"武邑县\" }, { value: \"131123\", label: \"武强县\" }, { value: \"131124\", label: \"饶阳县\" }, { value: \"131125\", label: \"安平县\" }, { value: \"131126\", label: \"故城县\" }, { value: \"131127\", label: \"景县\" }, { value: \"131128\", label: \"阜城县\" }, { value: \"131103\", label: \"冀州区\" }, { value: \"131182\", label: \"深州市\" }, { value: \"131172\", label: \"衡水滨湖新区\" }, { value: \"131171\", label: \"河北衡水经济开发区\" }] }] }, { value: '140000', label: '山西省', children: [{ value: \"140100\", label: \"太原市\", children: [{ value: \"140105\", label: \"小店区\" }, { value: \"140106\", label: \"迎泽区\" }, { value: \"140107\", label: \"杏花岭区\" }, { value: \"140108\", label: \"尖草坪区\" }, { value: \"140109\", label: \"万柏林区\" }, { value: \"140110\", label: \"晋源区\" }, { value: \"140121\", label: \"清徐县\" }, { value: \"140122\", label: \"阳曲县\" }, { value: \"140123\", label: \"娄烦县\" }, { value: \"140181\", label: \"古交市\" }, { value: \"140171\", label: \"山西转型综合改革示范区\" }] }, { value: \"140200\", label: \"大同市\", children: [{ value: \"140202\", label: \"城区\" }, { value: \"140203\", label: \"矿区\" }, { value: \"140211\", label: \"南郊区\" }, { value: \"140212\", label: \"新荣区\" }, { value: \"140221\", label: \"阳高县\" }, { value: \"140222\", label: \"天镇县\" }, { value: \"140223\", label: \"广灵县\" }, { value: \"140224\", label: \"灵丘县\" }, { value: \"140225\", label: \"浑源县\" }, { value: \"140226\", label: \"左云县\" }, { value: \"140227\", label: \"大同县\" }, { value: \"140271\", label: \"山西大同经济开发区\" }] }, { value: \"140300\", label: \"阳泉市\", children: [{ value: \"140302\", label: \"城区\" }, { value: \"140303\", label: \"矿区\" }, { value: \"140311\", label: \"郊区\" }, { value: \"140321\", label: \"平定县\" }, { value: \"140322\", label: \"盂县\" }, { value: \"140371\", label: \"山西阳泉经济开发区\" }] }, { value: \"140400\", label: \"长治市\", children: [{ value: \"140421\", label: \"长治县\" }, { value: \"140423\", label: \"襄垣县\" }, { value: \"140424\", label: \"屯留县\" }, { value: \"140425\", label: \"平顺县\" }, { value: \"140426\", label: \"黎城县\" }, { value: \"140427\", label: \"壶关县\" }, { value: \"140428\", label: \"长子县\" }, { value: \"140429\", label: \"武乡县\" }, { value: \"140430\", label: \"沁县\" }, { value: \"140431\", label: \"沁源县\" }, { value: \"140481\", label: \"潞城市\" }, { value: \"140402\", label: \"城区\" }, { value: \"140411\", label: \"郊区\" }, { value: \"140471\", label: \"山西长治高新技术产业园区\" }] }, { value: \"140500\", label: \"晋城市\", children: [{ value: \"140502\", label: \"城区\" }, { value: \"140521\", label: \"沁水县\" }, { value: \"140522\", label: \"阳城县\" }, { value: \"140524\", label: \"陵川县\" }, { value: \"140525\", label: \"泽州县\" }, { value: \"140581\", label: \"高平市\" }] }, { value: \"140600\", label: \"朔州市\", children: [{ value: \"140602\", label: \"朔城区\" }, { value: \"140603\", label: \"平鲁区\" }, { value: \"140621\", label: \"山阴县\" }, { value: \"140622\", label: \"应县\" }, { value: \"140623\", label: \"右玉县\" }, { value: \"140624\", label: \"怀仁县\" }, { value: \"140671\", label: \"山西朔州经济开发区\" }] }, { value: \"140700\", label: \"晋中市\", children: [{ value: \"140702\", label: \"榆次区\" }, { value: \"140721\", label: \"榆社县\" }, { value: \"140722\", label: \"左权县\" }, { value: \"140723\", label: \"和顺县\" }, { value: \"140724\", label: \"昔阳县\" }, { value: \"140725\", label: \"寿阳县\" }, { value: \"140726\", label: \"太谷县\" }, { value: \"140727\", label: \"祁县\" }, { value: \"140728\", label: \"平遥县\" }, { value: \"140729\", label: \"灵石县\" }, { value: \"140781\", label: \"介休市\" }] }, { value: \"140800\", label: \"运城市\", children: [{ value: \"140802\", label: \"盐湖区\" }, { value: \"140821\", label: \"临猗县\" }, { value: \"140822\", label: \"万荣县\" }, { value: \"140823\", label: \"闻喜县\" }, { value: \"140824\", label: \"稷山县\" }, { value: \"140825\", label: \"新绛县\" }, { value: \"140826\", label: \"绛县\" }, { value: \"140827\", label: \"垣曲县\" }, { value: \"140828\", label: \"夏县\" }, { value: \"140829\", label: \"平陆县\" }, { value: \"140830\", label: \"芮城县\" }, { value: \"140881\", label: \"永济市\" }, { value: \"140882\", label: \"河津市\" }] }, { value: \"140900\", label: \"忻州市\", children: [{ value: \"140902\", label: \"忻府区\" }, { value: \"140921\", label: \"定襄县\" }, { value: \"140922\", label: \"五台县\" }, { value: \"140923\", label: \"代县\" }, { value: \"140924\", label: \"繁峙县\" }, { value: \"140925\", label: \"宁武县\" }, { value: \"140926\", label: \"静乐县\" }, { value: \"140927\", label: \"神池县\" }, { value: \"140928\", label: \"五寨县\" }, { value: \"140929\", label: \"岢岚县\" }, { value: \"140930\", label: \"河曲县\" }, { value: \"140931\", label: \"保德县\" }, { value: \"140932\", label: \"偏关县\" }, { value: \"140981\", label: \"原平市\" }, { value: \"140971\", label: \"五台山风景名胜区\" }] }, { value: \"141000\", label: \"临汾市\", children: [{ value: \"141002\", label: \"尧都区\" }, { value: \"141021\", label: \"曲沃县\" }, { value: \"141022\", label: \"翼城县\" }, { value: \"141023\", label: \"襄汾县\" }, { value: \"141024\", label: \"洪洞县\" }, { value: \"141025\", label: \"古县\" }, { value: \"141026\", label: \"安泽县\" }, { value: \"141027\", label: \"浮山县\" }, { value: \"141028\", label: \"吉县\" }, { value: \"141029\", label: \"乡宁县\" }, { value: \"141030\", label: \"大宁县\" }, { value: \"141031\", label: \"隰县\" }, { value: \"141032\", label: \"永和县\" }, { value: \"141033\", label: \"蒲县\" }, { value: \"141034\", label: \"汾西县\" }, { value: \"141081\", label: \"侯马市\" }, { value: \"141082\", label: \"霍州市\" }] }, { value: \"141100\", label: \"吕梁市\", children: [{ value: \"141102\", label: \"离石区\" }, { value: \"141121\", label: \"文水县\" }, { value: \"141122\", label: \"交城县\" }, { value: \"141123\", label: \"兴县\" }, { value: \"141124\", label: \"临县\" }, { value: \"141125\", label: \"柳林县\" }, { value: \"141126\", label: \"石楼县\" }, { value: \"141127\", label: \"岚县\" }, { value: \"141128\", label: \"方山县\" }, { value: \"141129\", label: \"中阳县\" }, { value: \"141130\", label: \"交口县\" }, { value: \"141181\", label: \"孝义市\" }, { value: \"141182\", label: \"汾阳市\" }] }] }, { value: '150000', label: '内蒙古', children: [{ value: \"150100\", label: \"呼和浩特市\", children: [{ value: \"150102\", label: \"新城区\" }, { value: \"150103\", label: \"回民区\" }, { value: \"150104\", label: \"玉泉区\" }, { value: \"150105\", label: \"赛罕区\" }, { value: \"150121\", label: \"土默特左旗\" }, { value: \"150122\", label: \"托克托县\" }, { value: \"150123\", label: \"和林格尔县\" }, { value: \"150124\", label: \"清水河县\" }, { value: \"150125\", label: \"武川县\" }, { value: \"150171\", label: \"呼和浩特金海工业园区\" }, { value: \"150172\", label: \"呼和浩特经济技术开发区\" }] }, { value: \"150200\", label: \"包头市\", children: [{ value: \"150202\", label: \"东河区\" }, { value: \"150203\", label: \"昆都仑区\" }, { value: \"150204\", label: \"青山区\" }, { value: \"150205\", label: \"石拐区\" }, { value: \"150206\", label: \"白云矿区\" }, { value: \"150207\", label: \"九原区\" }, { value: \"150221\", label: \"土默特右旗\" }, { value: \"150222\", label: \"固阳县\" }, { value: \"150223\", label: \"达尔罕茂明安联合旗\" }, { value: \"150271\", label: \"包头稀土高新技术产业开发区\" }] }, { value: \"150300\", label: \"乌海市\", children: [{ value: \"150302\", label: \"海勃湾区\" }, { value: \"150303\", label: \"海南区\" }, { value: \"150304\", label: \"乌达区\" }] }, { value: \"150400\", label: \"赤峰市\", children: [{ value: \"150402\", label: \"红山区\" }, { value: \"150403\", label: \"元宝山区\" }, { value: \"150404\", label: \"松山区\" }, { value: \"150421\", label: \"阿鲁科尔沁旗\" }, { value: \"150422\", label: \"巴林左旗\" }, { value: \"150423\", label: \"巴林右旗\" }, { value: \"150424\", label: \"林西县\" }, { value: \"150425\", label: \"克什克腾旗\" }, { value: \"150426\", label: \"翁牛特旗\" }, { value: \"150428\", label: \"喀喇沁旗\" }, { value: \"150429\", label: \"宁城县\" }, { value: \"150430\", label: \"敖汉旗\" }] }, { value: \"150500\", label: \"通辽市\", children: [{ value: \"150502\", label: \"科尔沁区\" }, { value: \"150521\", label: \"科尔沁左翼中旗\" }, { value: \"150522\", label: \"科尔沁左翼后旗\" }, { value: \"150523\", label: \"开鲁县\" }, { value: \"150524\", label: \"库伦旗\" }, { value: \"150525\", label: \"奈曼旗\" }, { value: \"150526\", label: \"扎鲁特旗\" }, { value: \"150581\", label: \"霍林郭勒市\" }, { value: \"150571\", label: \"通辽经济技术开发区\" }] }, { value: \"150600\", label: \"鄂尔多斯市\", children: [{ value: \"150602\", label: \"东胜区\" }, { value: \"150621\", label: \"达拉特旗\" }, { value: \"150622\", label: \"准格尔旗\" }, { value: \"150623\", label: \"鄂托克前旗\" }, { value: \"150624\", label: \"鄂托克旗\" }, { value: \"150625\", label: \"杭锦旗\" }, { value: \"150626\", label: \"乌审旗\" }, { value: \"150627\", label: \"伊金霍洛旗\" }, { value: \"150603\", label: \"康巴什区\" }] }, { value: \"150700\", label: \"呼伦贝尔市\", children: [{ value: \"150702\", label: \"海拉尔区\" }, { value: \"150721\", label: \"阿荣旗\" }, { value: \"150722\", label: \"莫力达瓦达斡尔族自治旗\" }, { value: \"150723\", label: \"鄂伦春自治旗\" }, { value: \"150724\", label: \"鄂温克族自治旗\" }, { value: \"150725\", label: \"陈巴尔虎旗\" }, { value: \"150726\", label: \"新巴尔虎左旗\" }, { value: \"150727\", label: \"新巴尔虎右旗\" }, { value: \"150781\", label: \"满洲里市\" }, { value: \"150782\", label: \"牙克石市\" }, { value: \"150783\", label: \"扎兰屯市\" }, { value: \"150784\", label: \"额尔古纳市\" }, { value: \"150785\", label: \"根河市\" }, { value: \"150703\", label: \"扎赉诺尔区\" }] }, { value: \"150800\", label: \"巴彦淖尔市\", children: [{ value: \"150802\", label: \"临河区\" }, { value: \"150821\", label: \"五原县\" }, { value: \"150822\", label: \"磴口县\" }, { value: \"150823\", label: \"乌拉特前旗\" }, { value: \"150824\", label: \"乌拉特中旗\" }, { value: \"150825\", label: \"乌拉特后旗\" }, { value: \"150826\", label: \"杭锦后旗\" }] }, { value: \"150900\", label: \"乌兰察布市\", children: [{ value: \"150902\", label: \"集宁区\" }, { value: \"150921\", label: \"卓资县\" }, { value: \"150922\", label: \"化德县\" }, { value: \"150923\", label: \"商都县\" }, { value: \"150924\", label: \"兴和县\" }, { value: \"150925\", label: \"凉城县\" }, { value: \"150926\", label: \"察哈尔右翼前旗\" }, { value: \"150927\", label: \"察哈尔右翼中旗\" }, { value: \"150928\", label: \"察哈尔右翼后旗\" }, { value: \"150929\", label: \"四子王旗\" }, { value: \"150981\", label: \"丰镇市\" }] }, { value: \"152200\", label: \"兴安盟\", children: [{ value: \"152201\", label: \"乌兰浩特市\" }, { value: \"152202\", label: \"阿尔山市\" }, { value: \"152221\", label: \"科尔沁右翼前旗\" }, { value: \"152222\", label: \"科尔沁右翼中旗\" }, { value: \"152223\", label: \"扎赉特旗\" }, { value: \"152224\", label: \"突泉县\" }] }, { value: \"152500\", label: \"锡林郭勒盟\", children: [{ value: \"152501\", label: \"二连浩特市\" }, { value: \"152502\", label: \"锡林浩特市\" }, { value: \"152522\", label: \"阿巴嘎旗\" }, { value: \"152523\", label: \"苏尼特左旗\" }, { value: \"152524\", label: \"苏尼特右旗\" }, { value: \"152525\", label: \"东乌珠穆沁旗\" }, { value: \"152526\", label: \"西乌珠穆沁旗\" }, { value: \"152527\", label: \"太仆寺旗\" }, { value: \"152528\", label: \"镶黄旗\" }, { value: \"152529\", label: \"正镶白旗\" }, { value: \"152530\", label: \"正蓝旗\" }, { value: \"152531\", label: \"多伦县\" }, { value: \"152571\", label: \"乌拉盖管委会\" }] }, { value: \"152900\", label: \"阿拉善盟\", children: [{ value: \"152921\", label: \"阿拉善左旗\" }, { value: \"152922\", label: \"阿拉善右旗\" }, { value: \"152923\", label: \"额济纳旗\" }, { value: \"152971\", label: \"内蒙古阿拉善经济开发区\" }] }] }, { value: '210000', label: '辽宁省', children: [{ value: \"210100\", label: \"沈阳市\", children: [{ value: \"210102\", label: \"和平区\" }, { value: \"210103\", label: \"沈河区\" }, { value: \"210104\", label: \"大东区\" }, { value: \"210105\", label: \"皇姑区\" }, { value: \"210106\", label: \"铁西区\" }, { value: \"210111\", label: \"苏家屯区\" }, { value: \"210112\", label: \"东陵区\" }, { value: \"210113\", label: \"新城子区\" }, { value: \"210114\", label: \"于洪区\" }, { value: \"210115\", label: \"辽中区\" }, { value: \"210123\", label: \"康平县\" }, { value: \"210124\", label: \"法库县\" }, { value: \"210181\", label: \"新民市\" }, { value: \"210112\", label: \"浑南区\" }, { value: \"210113\", label: \"沈北新区\" }] }, { value: \"210200\", label: \"大连市\", children: [{ value: \"210202\", label: \"中山区\" }, { value: \"210203\", label: \"西岗区\" }, { value: \"210204\", label: \"沙河口区\" }, { value: \"210211\", label: \"甘井子区\" }, { value: \"210212\", label: \"旅顺口区\" }, { value: \"210213\", label: \"金州区\" }, { value: \"210224\", label: \"长海县\" }, { value: \"210251\", label: \"开发区\" }, { value: \"210281\", label: \"瓦房店市\" }, { value: \"210214\", label: \"普兰店区\" }, { value: \"210283\", label: \"庄河市\" }] }, { value: \"210300\", label: \"鞍山市\", children: [{ value: \"210302\", label: \"铁东区\" }, { value: \"210303\", label: \"铁西区\" }, { value: \"210304\", label: \"立山区\" }, { value: \"210311\", label: \"千山区\" }, { value: \"210321\", label: \"台安县\" }, { value: \"210323\", label: \"岫岩满族自治县\" }, { value: \"210381\", label: \"海城市\" }] }, { value: \"210400\", label: \"抚顺市\", children: [{ value: \"210402\", label: \"新抚区\" }, { value: \"210403\", label: \"东洲区\" }, { value: \"210404\", label: \"望花区\" }, { value: \"210411\", label: \"顺城区\" }, { value: \"210421\", label: \"抚顺县\" }, { value: \"210422\", label: \"新宾满族自治县\" }, { value: \"210423\", label: \"清原满族自治县\" }] }, { value: \"210500\", label: \"本溪市\", children: [{ value: \"210502\", label: \"平山区\" }, { value: \"210503\", label: \"溪湖区\" }, { value: \"210504\", label: \"明山区\" }, { value: \"210505\", label: \"南芬区\" }, { value: \"210521\", label: \"本溪满族自治县\" }, { value: \"210522\", label: \"桓仁满族自治县\" }] }, { value: \"210600\", label: \"丹东市\", children: [{ value: \"210602\", label: \"元宝区\" }, { value: \"210603\", label: \"振兴区\" }, { value: \"210604\", label: \"振安区\" }, { value: \"210624\", label: \"宽甸满族自治县\" }, { value: \"210681\", label: \"东港市\" }, { value: \"210682\", label: \"凤城市\" }] }, { value: \"210700\", label: \"锦州市\", children: [{ value: \"210702\", label: \"古塔区\" }, { value: \"210703\", label: \"凌河区\" }, { value: \"210711\", label: \"太和区\" }, { value: \"210726\", label: \"黑山县\" }, { value: \"210727\", label: \"义县\" }, { value: \"210781\", label: \"凌海市\" }, { value: \"210782\", label: \"北镇市\" }] }, { value: \"210800\", label: \"营口市\", children: [{ value: \"210802\", label: \"站前区\" }, { value: \"210803\", label: \"西市区\" }, { value: \"210804\", label: \"鲅鱼圈区\" }, { value: \"210811\", label: \"老边区\" }, { value: \"210881\", label: \"盖州市\" }, { value: \"210882\", label: \"大石桥市\" }] }, { value: \"210900\", label: \"阜新市\", children: [{ value: \"210902\", label: \"海州区\" }, { value: \"210903\", label: \"新邱区\" }, { value: \"210904\", label: \"太平区\" }, { value: \"210905\", label: \"清河门区\" }, { value: \"210911\", label: \"细河区\" }, { value: \"210921\", label: \"阜新蒙古族自治县\" }, { value: \"210922\", label: \"彰武县\" }] }, { value: \"211000\", label: \"辽阳市\", children: [{ value: \"211002\", label: \"白塔区\" }, { value: \"211003\", label: \"文圣区\" }, { value: \"211004\", label: \"宏伟区\" }, { value: \"211005\", label: \"弓长岭区\" }, { value: \"211011\", label: \"太子河区\" }, { value: \"211021\", label: \"辽阳县\" }, { value: \"211081\", label: \"灯塔市\" }] }, { value: \"211100\", label: \"盘锦市\", children: [{ value: \"211102\", label: \"双台子区\" }, { value: \"211103\", label: \"兴隆台区\" }, { value: \"211121\", label: \"大洼县\" }, { value: \"211122\", label: \"盘山县\" }] }, { value: \"211200\", label: \"铁岭市\", children: [{ value: \"211202\", label: \"银州区\" }, { value: \"211204\", label: \"清河区\" }, { value: \"211221\", label: \"铁岭县\" }, { value: \"211223\", label: \"西丰县\" }, { value: \"211224\", label: \"昌图县\" }, { value: \"211281\", label: \"调兵山市\" }, { value: \"211282\", label: \"开原市\" }] }, { value: \"211300\", label: \"朝阳市\", children: [{ value: \"211302\", label: \"双塔区\" }, { value: \"211303\", label: \"龙城区\" }, { value: \"211321\", label: \"朝阳县\" }, { value: \"211322\", label: \"建平县\" }, { value: \"211324\", label: \"喀喇沁左翼蒙古族自治县\" }, { value: \"211381\", label: \"北票市\" }, { value: \"211382\", label: \"凌源市\" }] }, { value: \"211400\", label: \"葫芦岛市\", children: [{ value: \"211402\", label: \"连山区\" }, { value: \"211403\", label: \"龙港区\" }, { value: \"211404\", label: \"南票区\" }, { value: \"211421\", label: \"绥中县\" }, { value: \"211422\", label: \"建昌县\" }, { value: \"211481\", label: \"兴城市\" }] }] }, { value: '220000', label: '吉林省', children: [{ value: \"220100\", label: \"长春市\", children: [{ value: \"220102\", label: \"南关区\" }, { value: \"220103\", label: \"宽城区\" }, { value: \"220104\", label: \"朝阳区\" }, { value: \"220105\", label: \"二道区\" }, { value: \"220106\", label: \"绿园区\" }, { value: \"220112\", label: \"双阳区\" }, { value: \"220122\", label: \"农安县\" }, { value: \"220181\", label: \"九台市\" }, { value: \"220182\", label: \"榆树市\" }, { value: \"220183\", label: \"德惠市\" }, { value: \"220171\", label: \"长春经济技术开发区\" }, { value: \"220172\", label: \"长春净月高新技术产业开发区\" }, { value: \"220173\", label: \"长春高新技术产业开发区\" }, { value: \"220174\", label: \"长春汽车经济技术开发区\" }] }, { value: \"220200\", label: \"吉林市\", children: [{ value: \"220202\", label: \"昌邑区\" }, { value: \"220203\", label: \"龙潭区\" }, { value: \"220204\", label: \"船营区\" }, { value: \"220211\", label: \"丰满区\" }, { value: \"220221\", label: \"永吉县\" }, { value: \"220281\", label: \"蛟河市\" }, { value: \"220282\", label: \"桦甸市\" }, { value: \"220283\", label: \"舒兰市\" }, { value: \"220284\", label: \"磐石市\" }, { value: \"220271\", label: \"吉林经济开发区\" }, { value: \"220272\", label: \"吉林高新技术产业开发区\" }, { value: \"220273\", label: \"吉林中国新加坡食品区\" }] }, { value: \"220300\", label: \"四平市\", children: [{ value: \"220302\", label: \"铁西区\" }, { value: \"220303\", label: \"铁东区\" }, { value: \"220322\", label: \"梨树县\" }, { value: \"220323\", label: \"伊通满族自治县\" }, { value: \"220381\", label: \"公主岭市\" }, { value: \"220382\", label: \"双辽市\" }] }, { value: \"220400\", label: \"辽源市\", children: [{ value: \"220402\", label: \"龙山区\" }, { value: \"220403\", label: \"西安区\" }, { value: \"220421\", label: \"东丰县\" }, { value: \"220422\", label: \"东辽县\" }] }, { value: \"220500\", label: \"通化市\", children: [{ value: \"220502\", label: \"东昌区\" }, { value: \"220503\", label: \"二道江区\" }, { value: \"220521\", label: \"通化县\" }, { value: \"220523\", label: \"辉南县\" }, { value: \"220524\", label: \"柳河县\" }, { value: \"220581\", label: \"梅河口市\" }, { value: \"220582\", label: \"集安市\" }] }, { value: \"220600\", label: \"白山市\", children: [{ value: \"220602\", label: \"八道江区\" }, { value: \"220621\", label: \"抚松县\" }, { value: \"220622\", label: \"靖宇县\" }, { value: \"220623\", label: \"长白朝鲜族自治县\" }, { value: \"220605\", label: \"江源区\" }, { value: \"220681\", label: \"临江市\" }, { value: \"220602\", label: \"浑江区\" }] }, { value: \"220700\", label: \"松原市\", children: [{ value: \"220702\", label: \"宁江区\" }, { value: \"220721\", label: \"前郭尔罗斯蒙古族自治县\" }, { value: \"220722\", label: \"长岭县\" }, { value: \"220723\", label: \"乾安县\" }, { value: \"220781\", label: \"扶余市\" }, { value: \"220771\", label: \"吉林松原经济开发区\" }] }, { value: \"220800\", label: \"白城市\", children: [{ value: \"220802\", label: \"洮北区\" }, { value: \"220821\", label: \"镇赉县\" }, { value: \"220822\", label: \"通榆县\" }, { value: \"220881\", label: \"洮南市\" }, { value: \"220882\", label: \"大安市\" }, { value: \"220871\", label: \"吉林白城经济开发区\" }] }, { value: \"222400\", label: \"延边朝鲜族自治州\", children: [{ value: \"222401\", label: \"延吉市\" }, { value: \"222402\", label: \"图们市\" }, { value: \"222403\", label: \"敦化市\" }, { value: \"222404\", label: \"珲春市\" }, { value: \"222405\", label: \"龙井市\" }, { value: \"222406\", label: \"和龙市\" }, { value: \"222424\", label: \"汪清县\" }, { value: \"222426\", label: \"安图县\" }] }] }, { value: '230000', label: '黑龙江省', children: [{ value: \"230100\", label: \"哈尔滨市\", children: [{ value: \"230102\", label: \"道里区\" }, { value: \"230103\", label: \"南岗区\" }, { value: \"230104\", label: \"道外区\" }, { value: \"230110\", label: \"香坊区\" }, { value: \"230107\", label: \"动力区\" }, { value: \"230108\", label: \"平房区\" }, { value: \"230109\", label: \"松北区\" }, { value: \"230111\", label: \"呼兰区\" }, { value: \"230123\", label: \"依兰县\" }, { value: \"230124\", label: \"方正县\" }, { value: \"230125\", label: \"宾县\" }, { value: \"230126\", label: \"巴彦县\" }, { value: \"230127\", label: \"木兰县\" }, { value: \"230128\", label: \"通河县\" }, { value: \"230129\", label: \"延寿县\" }, { value: \"230112\", label: \"阿城区\" }, { value: \"230113\", label: \"双城区\" }, { value: \"230183\", label: \"尚志市\" }, { value: \"230184\", label: \"五常市\" }] }, { value: \"230200\", label: \"齐齐哈尔市\", children: [{ value: \"230202\", label: \"龙沙区\" }, { value: \"230203\", label: \"建华区\" }, { value: \"230204\", label: \"铁锋区\" }, { value: \"230205\", label: \"昂昂溪区\" }, { value: \"230206\", label: \"富拉尔基区\" }, { value: \"230207\", label: \"碾子山区\" }, { value: \"230208\", label: \"梅里斯达斡尔族区\" }, { value: \"230221\", label: \"龙江县\" }, { value: \"230223\", label: \"依安县\" }, { value: \"230224\", label: \"泰来县\" }, { value: \"230225\", label: \"甘南县\" }, { value: \"230227\", label: \"富裕县\" }, { value: \"230229\", label: \"克山县\" }, { value: \"230230\", label: \"克东县\" }, { value: \"230231\", label: \"拜泉县\" }, { value: \"230281\", label: \"讷河市\" }] }, { value: \"230300\", label: \"鸡西市\", children: [{ value: \"230302\", label: \"鸡冠区\" }, { value: \"230303\", label: \"恒山区\" }, { value: \"230304\", label: \"滴道区\" }, { value: \"230305\", label: \"梨树区\" }, { value: \"230306\", label: \"城子河区\" }, { value: \"230307\", label: \"麻山区\" }, { value: \"230321\", label: \"鸡东县\" }, { value: \"230381\", label: \"虎林市\" }, { value: \"230382\", label: \"密山市\" }] }, { value: \"230400\", label: \"鹤岗市\", children: [{ value: \"230402\", label: \"向阳区\" }, { value: \"230403\", label: \"工农区\" }, { value: \"230404\", label: \"南山区\" }, { value: \"230405\", label: \"兴安区\" }, { value: \"230406\", label: \"东山区\" }, { value: \"230407\", label: \"兴山区\" }, { value: \"230421\", label: \"萝北县\" }, { value: \"230422\", label: \"绥滨县\" }] }, { value: \"230500\", label: \"双鸭山市\", children: [{ value: \"230502\", label: \"尖山区\" }, { value: \"230503\", label: \"岭东区\" }, { value: \"230505\", label: \"四方台区\" }, { value: \"230506\", label: \"宝山区\" }, { value: \"230521\", label: \"集贤县\" }, { value: \"230522\", label: \"友谊县\" }, { value: \"230523\", label: \"宝清县\" }, { value: \"230524\", label: \"饶河县\" }] }, { value: \"230600\", label: \"大庆市\", children: [{ value: \"230602\", label: \"萨尔图区\" }, { value: \"230603\", label: \"龙凤区\" }, { value: \"230604\", label: \"让胡路区\" }, { value: \"230605\", label: \"红岗区\" }, { value: \"230606\", label: \"大同区\" }, { value: \"230621\", label: \"肇州县\" }, { value: \"230622\", label: \"肇源县\" }, { value: \"230623\", label: \"林甸县\" }, { value: \"230624\", label: \"杜尔伯特蒙古族自治县\" }, { value: \"230671\", label: \"大庆高新技术产业开发区\" }] }, { value: \"230700\", label: \"伊春市\", children: [{ value: \"230702\", label: \"伊春区\" }, { value: \"230703\", label: \"南岔区\" }, { value: \"230704\", label: \"友好区\" }, { value: \"230705\", label: \"西林区\" }, { value: \"230706\", label: \"翠峦区\" }, { value: \"230707\", label: \"新青区\" }, { value: \"230708\", label: \"美溪区\" }, { value: \"230709\", label: \"金山屯区\" }, { value: \"230710\", label: \"五营区\" }, { value: \"230711\", label: \"乌马河区\" }, { value: \"230712\", label: \"汤旺河区\" }, { value: \"230713\", label: \"带岭区\" }, { value: \"230714\", label: \"乌伊岭区\" }, { value: \"230715\", label: \"红星区\" }, { value: \"230716\", label: \"上甘岭区\" }, { value: \"230722\", label: \"嘉荫县\" }, { value: \"230781\", label: \"铁力市\" }] }, { value: \"230800\", label: \"佳木斯市\", children: [{ value: \"230803\", label: \"向阳区\" }, { value: \"230804\", label: \"前进区\" }, { value: \"230805\", label: \"东风区\" }, { value: \"230811\", label: \"郊区\" }, { value: \"230822\", label: \"桦南县\" }, { value: \"230826\", label: \"桦川县\" }, { value: \"230828\", label: \"汤原县\" }, { value: \"230833\", label: \"抚远市\" }, { value: \"230881\", label: \"同江市\" }, { value: \"230882\", label: \"富锦市\" }] }, { value: \"230900\", label: \"七台河市\", children: [{ value: \"230902\", label: \"新兴区\" }, { value: \"230903\", label: \"桃山区\" }, { value: \"230904\", label: \"茄子河区\" }, { value: \"230921\", label: \"勃利县\" }] }, { value: \"231000\", label: \"牡丹江市\", children: [{ value: \"231002\", label: \"东安区\" }, { value: \"231003\", label: \"阳明区\" }, { value: \"231004\", label: \"爱民区\" }, { value: \"231005\", label: \"西安区\" }, { value: \"231086\", label: \"东宁市\" }, { value: \"231025\", label: \"林口县\" }, { value: \"231081\", label: \"绥芬河市\" }, { value: \"231083\", label: \"海林市\" }, { value: \"231084\", label: \"宁安市\" }, { value: \"231085\", label: \"穆棱市\" }, { value: \"231071\", label: \"牡丹江经济技术开发区\" }] }, { value: \"231100\", label: \"黑河市\", children: [{ value: \"231102\", label: \"爱辉区\" }, { value: \"231121\", label: \"嫩江县\" }, { value: \"231123\", label: \"逊克县\" }, { value: \"231124\", label: \"孙吴县\" }, { value: \"231181\", label: \"北安市\" }, { value: \"231182\", label: \"五大连池市\" }] }, { value: \"231200\", label: \"绥化市\", children: [{ value: \"231202\", label: \"北林区\" }, { value: \"231221\", label: \"望奎县\" }, { value: \"231222\", label: \"兰西县\" }, { value: \"231223\", label: \"青冈县\" }, { value: \"231224\", label: \"庆安县\" }, { value: \"231225\", label: \"明水县\" }, { value: \"231226\", label: \"绥棱县\" }, { value: \"231281\", label: \"安达市\" }, { value: \"231282\", label: \"肇东市\" }, { value: \"231283\", label: \"海伦市\" }] }, { value: \"232700\", label: \"大兴安岭地区\", children: [{ value: \"232721\", label: \"呼玛县\" }, { value: \"232722\", label: \"塔河县\" }, { value: \"232723\", label: \"漠河县\" }, { value: \"232701\", label: \"加格达奇区\" }, { value: \"232704\", label: \"呼中区\" }, { value: \"232703\", label: \"新林区\" }] }] }, { value: '310000', label: '上海市', children: [{ value: '310100', label: '上海市', children: [{ value: \"310101\", label: \"黄浦区\" }, { value: \"310104\", label: \"徐汇区\" }, { value: \"310105\", label: \"长宁区\" }, { value: \"310106\", label: \"静安区\" }, { value: \"310107\", label: \"普陀区\" }, { value: \"310109\", label: \"虹口区\" }, { value: \"310110\", label: \"杨浦区\" }, { value: \"310112\", label: \"闵行区\" }, { value: \"310113\", label: \"宝山区\" }, { value: \"310114\", label: \"嘉定区\" }, { value: \"310115\", label: \"浦东新区\" }, { value: \"310116\", label: \"金山区\" }, { value: \"310117\", label: \"松江区\" }, { value: \"310118\", label: \"青浦区\" }, { value: \"310120\", label: \"奉贤区\" }, { value: \"310151\", label: \"崇明区\" }] }] }, { value: '320000', label: '江苏省', children: [{ value: \"320100\", label: \"南京市\", children: [{ value: \"320102\", label: \"玄武区\" }, { value: \"320104\", label: \"秦淮区\" }, { value: \"320105\", label: \"建邺区\" }, { value: \"320106\", label: \"鼓楼区\" }, { value: \"320111\", label: \"浦口区\" }, { value: \"320113\", label: \"栖霞区\" }, { value: \"320114\", label: \"雨花台区\" }, { value: \"320115\", label: \"江宁区\" }, { value: \"320116\", label: \"六合区\" }, { value: \"320117\", label: \"溧水区\" }, { value: \"320118\", label: \"高淳区\" }] }, { value: \"320200\", label: \"无锡市\", children: [{ value: \"320205\", label: \"锡山区\" }, { value: \"320206\", label: \"惠山区\" }, { value: \"320211\", label: \"滨湖区\" }, { value: \"320281\", label: \"江阴市\" }, { value: \"320282\", label: \"宜兴市\" }, { value: \"320213\", label: \"梁溪区\" }, { value: \"320214\", label: \"新吴区\" }] }, { value: \"320300\", label: \"徐州市\", children: [{ value: \"320302\", label: \"鼓楼区\" }, { value: \"320303\", label: \"云龙区\" }, { value: \"320305\", label: \"贾汪区\" }, { value: \"320311\", label: \"泉山区\" }, { value: \"320321\", label: \"丰县\" }, { value: \"320322\", label: \"沛县\" }, { value: \"320324\", label: \"睢宁县\" }, { value: \"320381\", label: \"新沂市\" }, { value: \"320382\", label: \"邳州市\" }, { value: \"320371\", label: \"徐州经济技术开发区\" }] }, { value: \"320400\", label: \"常州市\", children: [{ value: \"320402\", label: \"天宁区\" }, { value: \"320404\", label: \"钟楼区\" }, { value: \"320411\", label: \"新北区\" }, { value: \"320412\", label: \"武进区\" }, { value: \"320481\", label: \"溧阳市\" }, { value: \"320413\", label: \"金坛区\" }] }, { value: \"320500\", label: \"苏州市\", children: [{ value: \"320505\", label: \"虎丘区\" }, { value: \"320506\", label: \"吴中区\" }, { value: \"320507\", label: \"相城区\" }, { value: \"320581\", label: \"常熟市\" }, { value: \"320582\", label: \"张家港市\" }, { value: \"320583\", label: \"昆山市\" }, { value: \"320509\", label: \"吴江区\" }, { value: \"320585\", label: \"太仓市\" }, { value: \"320508\", label: \"姑苏区\" }, { value: \"320571\", label: \"苏州工业园区\" }] }, { value: \"320600\", label: \"南通市\", children: [{ value: \"320602\", label: \"崇川区\" }, { value: \"320611\", label: \"港闸区\" }, { value: \"320612\", label: \"通州区\" }, { value: \"320621\", label: \"海安县\" }, { value: \"320623\", label: \"如东县\" }, { value: \"320681\", label: \"启东市\" }, { value: \"320682\", label: \"如皋市\" }, { value: \"320684\", label: \"海门市\" }, { value: \"320671\", label: \"南通经济技术开发区\" }] }, { value: \"320700\", label: \"连云港市\", children: [{ value: \"320703\", label: \"连云区\" }, { value: \"320706\", label: \"海州区\" }, { value: \"320707\", label: \"赣榆区\" }, { value: \"320722\", label: \"东海县\" }, { value: \"320723\", label: \"灌云县\" }, { value: \"320724\", label: \"灌南县\" }, { value: \"320771\", label: \"连云港经济技术开发区\" }, { value: \"320772\", label: \"连云港高新技术产业开发区\" }] }, { value: \"320800\", label: \"淮安市\", children: [{ value: \"320804\", label: \"淮阴区\" }, { value: \"320812\", label: \"清江浦区\" }, { value: \"320826\", label: \"涟水县\" }, { value: \"320813\", label: \"洪泽区\" }, { value: \"320830\", label: \"盱眙县\" }, { value: \"320831\", label: \"金湖县\" }, { value: \"320803\", label: \"淮安区\" }, { value: \"320871\", label: \"淮安经济技术开发区\" }] }, { value: \"320900\", label: \"盐城市\", children: [{ value: \"320902\", label: \"亭湖区\" }, { value: \"320903\", label: \"盐都区\" }, { value: \"320921\", label: \"响水县\" }, { value: \"320922\", label: \"滨海县\" }, { value: \"320904\", label: \"大丰区\" }, { value: \"320923\", label: \"阜宁县\" }, { value: \"320924\", label: \"射阳县\" }, { value: \"320925\", label: \"建湖县\" }, { value: \"320981\", label: \"东台市\" }, { value: \"320971\", label: \"盐城经济技术开发区\" }] }, { value: \"321000\", label: \"扬州市\", children: [{ value: \"321002\", label: \"广陵区\" }, { value: \"321003\", label: \"邗江区\" }, { value: \"321011\", label: \"维扬区\" }, { value: \"321023\", label: \"宝应县\" }, { value: \"321081\", label: \"仪征市\" }, { value: \"321084\", label: \"高邮市\" }, { value: \"321012\", label: \"江都区\" }, { value: \"321071\", label: \"扬州经济技术开发区\" }] }, { value: \"321100\", label: \"镇江市\", children: [{ value: \"321102\", label: \"京口区\" }, { value: \"321111\", label: \"润州区\" }, { value: \"321112\", label: \"丹徒区\" }, { value: \"321181\", label: \"丹阳市\" }, { value: \"321182\", label: \"扬中市\" }, { value: \"321183\", label: \"句容市\" }, { value: \"321171\", label: \"镇江新区\" }] }, { value: \"321200\", label: \"泰州市\", children: [{ value: \"321202\", label: \"海陵区\" }, { value: \"321203\", label: \"高港区\" }, { value: \"321281\", label: \"兴化市\" }, { value: \"321282\", label: \"靖江市\" }, { value: \"321283\", label: \"泰兴市\" }, { value: \"321204\", label: \"姜堰区\" }, { value: \"321271\", label: \"泰州医药高新技术产业开发区\" }] }, { value: \"321300\", label: \"宿迁市\", children: [{ value: \"321302\", label: \"宿城区\" }, { value: \"321311\", label: \"宿豫区\" }, { value: \"321322\", label: \"沭阳县\" }, { value: \"321323\", label: \"泗阳县\" }, { value: \"321324\", label: \"泗洪县\" }] }] }, { value: '330000', label: '浙江省', children: [{ value: \"330100\", label: \"杭州市\", children: [{ value: \"330102\", label: \"上城区\" }, { value: \"330103\", label: \"下城区\" }, { value: \"330104\", label: \"江干区\" }, { value: \"330105\", label: \"拱墅区\" }, { value: \"330106\", label: \"西湖区\" }, { value: \"330108\", label: \"滨江区\" }, { value: \"330109\", label: \"萧山区\" }, { value: \"330110\", label: \"余杭区\" }, { value: \"330122\", label: \"桐庐县\" }, { value: \"330127\", label: \"淳安县\" }, { value: \"330182\", label: \"建德市\" }, { value: \"330111\", label: \"富阳区\" }, { value: \"330112\", label: \"临安区\" }, { value: \"330186\", label: \"其它区\" }] }, { value: \"330200\", label: \"宁波市\", children: [{ value: \"330203\", label: \"海曙区\" }, { value: \"330205\", label: \"江北区\" }, { value: \"330206\", label: \"北仑区\" }, { value: \"330211\", label: \"镇海区\" }, { value: \"330212\", label: \"鄞州区\" }, { value: \"330225\", label: \"象山县\" }, { value: \"330226\", label: \"宁海县\" }, { value: \"330281\", label: \"余姚市\" }, { value: \"330282\", label: \"慈溪市\" }, { value: \"330213\", label: \"奉化区\" }] }, { value: \"330300\", label: \"温州市\", children: [{ value: \"330302\", label: \"鹿城区\" }, { value: \"330303\", label: \"龙湾区\" }, { value: \"330304\", label: \"瓯海区\" }, { value: \"330305\", label: \"洞头区\" }, { value: \"330324\", label: \"永嘉县\" }, { value: \"330326\", label: \"平阳县\" }, { value: \"330327\", label: \"苍南县\" }, { value: \"330328\", label: \"文成县\" }, { value: \"330329\", label: \"泰顺县\" }, { value: \"330381\", label: \"瑞安市\" }, { value: \"330382\", label: \"乐清市\" }, { value: \"330371\", label: \"温州经济技术开发区\" }] }, { value: \"330400\", label: \"嘉兴市\", children: [{ value: \"330402\", label: \"南湖区\" }, { value: \"330411\", label: \"秀洲区\" }, { value: \"330421\", label: \"嘉善县\" }, { value: \"330424\", label: \"海盐县\" }, { value: \"330481\", label: \"海宁市\" }, { value: \"330482\", label: \"平湖市\" }, { value: \"330483\", label: \"桐乡市\" }] }, { value: \"330500\", label: \"湖州市\", children: [{ value: \"330502\", label: \"吴兴区\" }, { value: \"330503\", label: \"南浔区\" }, { value: \"330521\", label: \"德清县\" }, { value: \"330522\", label: \"长兴县\" }, { value: \"330523\", label: \"安吉县\" }] }, { value: \"330600\", label: \"绍兴市\", children: [{ value: \"330602\", label: \"越城区\" }, { value: \"330621\", label: \"柯桥区\" }, { value: \"330681\", label: \"诸暨市\" }, { value: \"330604\", label: \"上虞区\" }, { value: \"330683\", label: \"嵊州市\" }, { value: \"330624\", label: \"新昌县\" }] }, { value: \"330700\", label: \"金华市\", children: [{ value: \"330702\", label: \"婺城区\" }, { value: \"330703\", label: \"金东区\" }, { value: \"330723\", label: \"武义县\" }, { value: \"330726\", label: \"浦江县\" }, { value: \"330727\", label: \"磐安县\" }, { value: \"330781\", label: \"兰溪市\" }, { value: \"330782\", label: \"义乌市\" }, { value: \"330783\", label: \"东阳市\" }, { value: \"330784\", label: \"永康市\" }] }, { value: \"330800\", label: \"衢州市\", children: [{ value: \"330802\", label: \"柯城区\" }, { value: \"330803\", label: \"衢江区\" }, { value: \"330822\", label: \"常山县\" }, { value: \"330824\", label: \"开化县\" }, { value: \"330825\", label: \"龙游县\" }, { value: \"330881\", label: \"江山市\" }] }, { value: \"330900\", label: \"舟山市\", children: [{ value: \"330902\", label: \"定海区\" }, { value: \"330903\", label: \"普陀区\" }, { value: \"330921\", label: \"岱山县\" }, { value: \"330922\", label: \"嵊泗县\" }] }, { value: \"331000\", label: \"台州市\", children: [{ value: \"331002\", label: \"椒江区\" }, { value: \"331003\", label: \"黄岩区\" }, { value: \"331004\", label: \"路桥区\" }, { value: \"331083\", label: \"玉环市\" }, { value: \"331022\", label: \"三门县\" }, { value: \"331023\", label: \"天台县\" }, { value: \"331024\", label: \"仙居县\" }, { value: \"331081\", label: \"温岭市\" }, { value: \"331082\", label: \"临海市\" }] }, { value: \"331100\", label: \"丽水市\", children: [{ value: \"331102\", label: \"莲都区\" }, { value: \"331121\", label: \"青田县\" }, { value: \"331122\", label: \"缙云县\" }, { value: \"331123\", label: \"遂昌县\" }, { value: \"331124\", label: \"松阳县\" }, { value: \"331125\", label: \"云和县\" }, { value: \"331126\", label: \"庆元县\" }, { value: \"331127\", label: \"景宁畲族自治县\" }, { value: \"331181\", label: \"龙泉市\" }] }] }, { value: '340000', label: '安徽省', children: [{ value: \"340100\", label: \"合肥市\", children: [{ value: \"340111\", label: \"包河区\" }, { value: \"340104\", label: \"蜀山区\" }, { value: \"340103\", label: \"庐阳区\" }, { value: \"340102\", label: \"瑶海区\" }, { value: \"340171\", label: \"合肥高新技术产业开发区\" }, { value: \"340172\", label: \"合肥经济技术开发区\" }, { value: \"340173\", label: \"合肥新站高新技术产业开发区\" }, { value: \"340121\", label: \"长丰县\" }, { value: \"340122\", label: \"肥东县\" }, { value: \"340123\", label: \"肥西县\" }, { value: \"340124\", label: \"庐江县\" }, { value: \"340181\", label: \"巢湖市\" }] }, { value: \"340200\", label: \"芜湖市\", children: [{ value: \"340202\", label: \"镜湖区\" }, { value: \"340203\", label: \"弋江区\" }, { value: \"340207\", label: \"鸠江区\" }, { value: \"340208\", label: \"三山区\" }, { value: \"340221\", label: \"芜湖县\" }, { value: \"340222\", label: \"繁昌县\" }, { value: \"340223\", label: \"南陵县\" }, { value: \"340225\", label: \"无为县\" }, { value: \"340272\", label: \"安徽芜湖长江大桥经济开发区\" }, { value: \"340271\", label: \"芜湖经济技术开发区\" }] }, { value: \"340300\", label: \"蚌埠市\", children: [{ value: \"340302\", label: \"龙子湖区\" }, { value: \"340303\", label: \"蚌山区\" }, { value: \"340304\", label: \"禹会区\" }, { value: \"340311\", label: \"淮上区\" }, { value: \"340321\", label: \"怀远县\" }, { value: \"340322\", label: \"五河县\" }, { value: \"340323\", label: \"固镇县\" }, { value: \"340371\", label: \"蚌埠市高新技术开发区\" }, { value: \"340372\t\", label: \"蚌埠市经济开发区\" }] }, { value: \"340400\", label: \"淮南市\", children: [{ value: \"340402\", label: \"大通区\" }, { value: \"340403\", label: \"田家庵区\" }, { value: \"340404\", label: \"谢家集区\" }, { value: \"340405\", label: \"八公山区\" }, { value: \"340406\", label: \"潘集区\" }, { value: \"340421\", label: \"凤台县\" }, { value: \"340422\", label: \"寿县\" }] }, { value: \"340500\", label: \"马鞍山市\", children: [{ value: \"340503\", label: \"花山区\" }, { value: \"340504\", label: \"雨山区\" }, { value: \"340521\", label: \"当涂县\" }, { value: \"340506\", label: \"博望区\" }, { value: \"340522\", label: \"含山县\" }, { value: \"340523\", label: \"和县\" }] }, { value: \"340600\", label: \"淮北市\", children: [{ value: \"340602\", label: \"杜集区\" }, { value: \"340603\", label: \"相山区\" }, { value: \"340604\", label: \"烈山区\" }, { value: \"340621\", label: \"濉溪县\" }] }, { value: \"340700\", label: \"铜陵市\", children: [{ value: \"340705\", label: \"铜官区\" }, { value: \"340706\", label: \"义安区\" }, { value: \"340711\", label: \"郊区\" }, { value: \"340722\", label: \"枞阳县\" }] }, { value: \"340800\", label: \"安庆市\", children: [{ value: \"340802\", label: \"迎江区\" }, { value: \"340803\", label: \"大观区\" }, { value: \"340811\", label: \"宜秀区\" }, { value: \"340822\", label: \"怀宁县\" }, { value: \"340824\", label: \"潜山县\" }, { value: \"340825\", label: \"太湖县\" }, { value: \"340826\", label: \"宿松县\" }, { value: \"340827\", label: \"望江县\" }, { value: \"340828\", label: \"岳西县\" }, { value: \"340881\", label: \"桐城市\" }, { value: \"340871\", label: \"安徽安庆经济开发区\" }] }, { value: \"341000\", label: \"黄山市\", children: [{ value: \"341002\", label: \"屯溪区\" }, { value: \"341003\", label: \"黄山区\" }, { value: \"341004\", label: \"徽州区\" }, { value: \"341021\", label: \"歙县\" }, { value: \"341022\", label: \"休宁县\" }, { value: \"341023\", label: \"黟县\" }, { value: \"341024\", label: \"祁门县\" }] }, { value: \"341100\", label: \"滁州市\", children: [{ value: \"341102\", label: \"琅琊区\" }, { value: \"341103\", label: \"南谯区\" }, { value: \"341122\", label: \"来安县\" }, { value: \"341124\", label: \"全椒县\" }, { value: \"341125\", label: \"定远县\" }, { value: \"341126\", label: \"凤阳县\" }, { value: \"341181\", label: \"天长市\" }, { value: \"341182\", label: \"明光市\" }, { value: \"341171\", label: \"苏滁现代产业园\" }, { value: \"341172\", label: \"滁州经济技术开发区\" }] }, { value: \"341200\", label: \"阜阳市\", children: [{ value: \"341202\", label: \"颍州区\" }, { value: \"341203\", label: \"颍东区\" }, { value: \"341204\", label: \"颍泉区\" }, { value: \"341221\", label: \"临泉县\" }, { value: \"341222\", label: \"太和县\" }, { value: \"341225\", label: \"阜南县\" }, { value: \"341226\", label: \"颍上县\" }, { value: \"341282\", label: \"界首市\" }, { value: \"341272\", label: \"阜阳经济技术开发区\" }, { value: \"341271\", label: \"阜阳合肥现代产业园区\" }] }, { value: \"341300\", label: \"宿州市\", children: [{ value: \"341302\", label: \"埇桥区\" }, { value: \"341321\", label: \"砀山县\" }, { value: \"341322\", label: \"萧县\" }, { value: \"341323\", label: \"灵璧县\" }, { value: \"341324\", label: \"泗县\" }, { value: \"341371\", label: \"宿州马鞍山现代产业园区\" }, { value: \"341372\", label: \"宿州经济技术开发区\" }] }, { value: \"341500\", label: \"六安市\", children: [{ value: \"341502\", label: \"金安区\" }, { value: \"341503\", label: \"裕安区\" }, { value: \"341504\", label: \"叶集区\" }, { value: \"341522\", label: \"霍邱县\" }, { value: \"341523\", label: \"舒城县\" }, { value: \"341524\", label: \"金寨县\" }, { value: \"341525\", label: \"霍山县\" }] }, { value: \"341600\", label: \"亳州市\", children: [{ value: \"341602\", label: \"谯城区\" }, { value: \"341621\", label: \"涡阳县\" }, { value: \"341622\", label: \"蒙城县\" }, { value: \"341623\", label: \"利辛县\" }] }, { value: \"341700\", label: \"池州市\", children: [{ value: \"341702\", label: \"贵池区\" }, { value: \"341721\", label: \"东至县\" }, { value: \"341722\", label: \"石台县\" }, { value: \"341723\", label: \"青阳县\" }] }, { value: \"341800\", label: \"宣城市\", children: [{ value: \"341802\", label: \"宣州区\" }, { value: \"341821\", label: \"郎溪县\" }, { value: \"341822\", label: \"广德县\" }, { value: \"341823\", label: \"泾县\" }, { value: \"341824\", label: \"绩溪县\" }, { value: \"341825\", label: \"旌德县\" }, { value: \"341881\", label: \"宁国市\" }, { value: \"341871\", label: \"宣城市经济开发区\" }] }] }, { value: '350000', label: '福建省', children: [{ value: \"350100\", label: \"福州市\", children: [{ value: \"350102\", label: \"鼓楼区\" }, { value: \"350103\", label: \"台江区\" }, { value: \"350104\", label: \"仓山区\" }, { value: \"350105\", label: \"马尾区\" }, { value: \"350111\", label: \"晋安区\" }, { value: \"350121\", label: \"闽侯县\" }, { value: \"350122\", label: \"连江县\" }, { value: \"350123\", label: \"罗源县\" }, { value: \"350124\", label: \"闽清县\" }, { value: \"350125\", label: \"永泰县\" }, { value: \"350128\", label: \"平潭县\" }, { value: \"350181\", label: \"福清市\" }, { value: \"350182\", label: \"长乐市\" }] }, { value: \"350200\", label: \"厦门市\", children: [{ value: \"350203\", label: \"思明区\" }, { value: \"350205\", label: \"海沧区\" }, { value: \"350206\", label: \"湖里区\" }, { value: \"350211\", label: \"集美区\" }, { value: \"350212\", label: \"同安区\" }, { value: \"350213\", label: \"翔安区\" }] }, { value: \"350300\", label: \"莆田市\", children: [{ value: \"350302\", label: \"城厢区\" }, { value: \"350303\", label: \"涵江区\" }, { value: \"350304\", label: \"荔城区\" }, { value: \"350305\", label: \"秀屿区\" }, { value: \"350322\", label: \"仙游县\" }] }, { value: \"350400\", label: \"三明市\", children: [{ value: \"350402\", label: \"梅列区\" }, { value: \"350403\", label: \"三元区\" }, { value: \"350421\", label: \"明溪县\" }, { value: \"350423\", label: \"清流县\" }, { value: \"350424\", label: \"宁化县\" }, { value: \"350425\", label: \"大田县\" }, { value: \"350426\", label: \"尤溪县\" }, { value: \"350427\", label: \"沙县\" }, { value: \"350428\", label: \"将乐县\" }, { value: \"350429\", label: \"泰宁县\" }, { value: \"350430\", label: \"建宁县\" }, { value: \"350481\", label: \"永安市\" }] }, { value: \"350500\", label: \"泉州市\", children: [{ value: \"350502\", label: \"鲤城区\" }, { value: \"350503\", label: \"丰泽区\" }, { value: \"350504\", label: \"洛江区\" }, { value: \"350505\", label: \"泉港区\" }, { value: \"350521\", label: \"惠安县\" }, { value: \"350524\", label: \"安溪县\" }, { value: \"350525\", label: \"永春县\" }, { value: \"350526\", label: \"德化县\" }, { value: \"350527\", label: \"金门县\" }, { value: \"350581\", label: \"石狮市\" }, { value: \"350582\", label: \"晋江市\" }, { value: \"350583\", label: \"南安市\" }] }, { value: \"350600\", label: \"漳州市\", children: [{ value: \"350602\", label: \"芗城区\" }, { value: \"350603\", label: \"龙文区\" }, { value: \"350622\", label: \"云霄县\" }, { value: \"350623\", label: \"漳浦县\" }, { value: \"350624\", label: \"诏安县\" }, { value: \"350625\", label: \"长泰县\" }, { value: \"350626\", label: \"东山县\" }, { value: \"350627\", label: \"南靖县\" }, { value: \"350628\", label: \"平和县\" }, { value: \"350629\", label: \"华安县\" }, { value: \"350681\", label: \"龙海市\" }] }, { value: \"350700\", label: \"南平市\", children: [{ value: \"350702\", label: \"延平区\" }, { value: \"350721\", label: \"顺昌县\" }, { value: \"350722\", label: \"浦城县\" }, { value: \"350723\", label: \"光泽县\" }, { value: \"350724\", label: \"松溪县\" }, { value: \"350725\", label: \"政和县\" }, { value: \"350781\", label: \"邵武市\" }, { value: \"350782\", label: \"武夷山市\" }, { value: \"350783\", label: \"建瓯市\" }, { value: \"350703\", label: \"建阳区\" }] }, { value: \"350800\", label: \"龙岩市\", children: [{ value: \"350802\", label: \"新罗区\" }, { value: \"350821\", label: \"长汀县\" }, { value: \"350803\", label: \"永定区\" }, { value: \"350823\", label: \"上杭县\" }, { value: \"350824\", label: \"武平县\" }, { value: \"350825\", label: \"连城县\" }, { value: \"350881\", label: \"漳平市\" }] }, { value: \"350900\", label: \"宁德市\", children: [{ value: \"350902\", label: \"蕉城区\" }, { value: \"350921\", label: \"霞浦县\" }, { value: \"350922\", label: \"古田县\" }, { value: \"350923\", label: \"屏南县\" }, { value: \"350924\", label: \"寿宁县\" }, { value: \"350925\", label: \"周宁县\" }, { value: \"350926\", label: \"柘荣县\" }, { value: \"350981\", label: \"福安市\" }, { value: \"350982\", label: \"福鼎市\" }] }] }, { value: '360000', label: '江西省', children: [{ value: \"360100\", label: \"南昌市\", children: [{ value: \"360102\", label: \"东湖区\" }, { value: \"360103\", label: \"西湖区\" }, { value: \"360104\", label: \"青云谱区\" }, { value: \"360105\", label: \"湾里区\" }, { value: \"360111\", label: \"青山湖区\" }, { value: \"360121\", label: \"南昌县\" }, { value: \"360112\", label: \"新建区\" }, { value: \"360123\", label: \"安义县\" }, { value: \"360124\", label: \"进贤县\" }] }, { value: \"360200\", label: \"景德镇市\", children: [{ value: \"360202\", label: \"昌江区\" }, { value: \"360203\", label: \"珠山区\" }, { value: \"360222\", label: \"浮梁县\" }, { value: \"360281\", label: \"乐平市\" }] }, { value: \"360300\", label: \"萍乡市\", children: [{ value: \"360302\", label: \"安源区\" }, { value: \"360313\", label: \"湘东区\" }, { value: \"360321\", label: \"莲花县\" }, { value: \"360322\", label: \"上栗县\" }, { value: \"360323\", label: \"芦溪县\" }] }, { value: \"360400\", label: \"九江市\", children: [{ value: \"360402\", label: \"濂溪区\" }, { value: \"360403\", label: \"浔阳区\" }, { value: \"360404\", label: \"柴桑区\" }, { value: \"360423\", label: \"武宁县\" }, { value: \"360424\", label: \"修水县\" }, { value: \"360425\", label: \"永修县\" }, { value: \"360426\", label: \"德安县\" }, { value: \"360428\", label: \"都昌县\" }, { value: \"360429\", label: \"湖口县\" }, { value: \"360430\", label: \"彭泽县\" }, { value: \"360481\", label: \"瑞昌市\" }, { value: \"360482\", label: \"共青城市\" }, { value: \"360483\", label: \"庐山市\" }] }, { value: \"360500\", label: \"新余市\", children: [{ value: \"360502\", label: \"渝水区\" }, { value: \"360521\", label: \"分宜县\" }] }, { value: \"360600\", label: \"鹰潭市\", children: [{ value: \"360602\", label: \"月湖区\" }, { value: \"360622\", label: \"余江县\" }, { value: \"360681\", label: \"贵溪市\" }] }, { value: \"360700\", label: \"赣州市\", children: [{ value: \"360702\", label: \"章贡区\" }, { value: \"360704\", label: \"赣县区\" }, { value: \"360722\", label: \"信丰县\" }, { value: \"360723\", label: \"大余县\" }, { value: \"360724\", label: \"上犹县\" }, { value: \"360725\", label: \"崇义县\" }, { value: \"360726\", label: \"安远县\" }, { value: \"360727\", label: \"龙南县\" }, { value: \"360728\", label: \"定南县\" }, { value: \"360729\", label: \"全南县\" }, { value: \"360730\", label: \"宁都县\" }, { value: \"360731\", label: \"于都县\" }, { value: \"360732\", label: \"兴国县\" }, { value: \"360733\", label: \"会昌县\" }, { value: \"360734\", label: \"寻乌县\" }, { value: \"360735\", label: \"石城县\" }, { value: \"360781\", label: \"瑞金市\" }, { value: \"360703\", label: \"南康区\" }] }, { value: \"360800\", label: \"吉安市\", children: [{ value: \"360802\", label: \"吉州区\" }, { value: \"360803\", label: \"青原区\" }, { value: \"360821\", label: \"吉安县\" }, { value: \"360822\", label: \"吉水县\" }, { value: \"360823\", label: \"峡江县\" }, { value: \"360824\", label: \"新干县\" }, { value: \"360825\", label: \"永丰县\" }, { value: \"360826\", label: \"泰和县\" }, { value: \"360827\", label: \"遂川县\" }, { value: \"360828\", label: \"万安县\" }, { value: \"360829\", label: \"安福县\" }, { value: \"360830\", label: \"永新县\" }, { value: \"360881\", label: \"井冈山市\" }] }, { value: \"360900\", label: \"宜春市\", children: [{ value: \"360902\", label: \"袁州区\" }, { value: \"360921\", label: \"奉新县\" }, { value: \"360922\", label: \"万载县\" }, { value: \"360923\", label: \"上高县\" }, { value: \"360924\", label: \"宜丰县\" }, { value: \"360925\", label: \"靖安县\" }, { value: \"360926\", label: \"铜鼓县\" }, { value: \"360981\", label: \"丰城市\" }, { value: \"360982\", label: \"樟树市\" }, { value: \"360983\", label: \"高安市\" }] }, { value: \"361000\", label: \"抚州市\", children: [{ value: \"361002\", label: \"临川区\" }, { value: \"361021\", label: \"南城县\" }, { value: \"361022\", label: \"黎川县\" }, { value: \"361023\", label: \"南丰县\" }, { value: \"361024\", label: \"崇仁县\" }, { value: \"361025\", label: \"乐安县\" }, { value: \"361026\", label: \"宜黄县\" }, { value: \"361027\", label: \"金溪县\" }, { value: \"361028\", label: \"资溪县\" }, { value: \"361003\", label: \"东乡区\" }, { value: \"361030\", label: \"广昌县\" }] }, { value: \"361100\", label: \"上饶市\", children: [{ value: \"361102\", label: \"信州区\" }, { value: \"361121\", label: \"上饶县\" }, { value: \"361103\", label: \"广丰区\" }, { value: \"361123\", label: \"玉山县\" }, { value: \"361124\", label: \"铅山县\" }, { value: \"361125\", label: \"横峰县\" }, { value: \"361126\", label: \"弋阳县\" }, { value: \"361127\", label: \"余干县\" }, { value: \"361128\", label: \"鄱阳县\" }, { value: \"361129\", label: \"万年县\" }, { value: \"361130\", label: \"婺源县\" }, { value: \"361181\", label: \"德兴市\" }] }] }, { value: '370000', label: '山东省', children: [{ value: \"370100\", label: \"济南市\", children: [{ value: \"370102\", label: \"历下区\" }, { value: \"370103\", label: \"市中区\" }, { value: \"370104\", label: \"槐荫区\" }, { value: \"370105\", label: \"天桥区\" }, { value: \"370112\", label: \"历城区\" }, { value: \"370113\", label: \"长清区\" }, { value: \"370124\", label: \"平阴县\" }, { value: \"370125\", label: \"济阳县\" }, { value: \"370126\", label: \"商河县\" }, { value: \"370114\", label: \"章丘区\" }, { value: \"370171\", label: \"济南高新技术产业开发区\" }] }, { value: \"370200\", label: \"青岛市\", children: [{ value: \"370202\", label: \"市南区\" }, { value: \"370203\", label: \"市北区\" }, { value: \"370211\", label: \"黄岛区\" }, { value: \"370212\", label: \"崂山区\" }, { value: \"370213\", label: \"李沧区\" }, { value: \"370214\", label: \"城阳区\" }, { value: \"370281\", label: \"胶州市\" }, { value: \"370215\", label: \"即墨区\" }, { value: \"370283\", label: \"平度市\" }, { value: \"370285\", label: \"莱西市\" }, { value: \"370271\", label: \"青岛高新技术产业开发区\" }] }, { value: \"370300\", label: \"淄博市\", children: [{ value: \"370302\", label: \"淄川区\" }, { value: \"370303\", label: \"张店区\" }, { value: \"370304\", label: \"博山区\" }, { value: \"370305\", label: \"临淄区\" }, { value: \"370306\", label: \"周村区\" }, { value: \"370321\", label: \"桓台县\" }, { value: \"370322\", label: \"高青县\" }, { value: \"370323\", label: \"沂源县\" }] }, { value: \"370400\", label: \"枣庄市\", children: [{ value: \"370402\", label: \"市中区\" }, { value: \"370403\", label: \"薛城区\" }, { value: \"370404\", label: \"峄城区\" }, { value: \"370405\", label: \"台儿庄区\" }, { value: \"370406\", label: \"山亭区\" }, { value: \"370481\", label: \"滕州市\" }] }, { value: \"370500\", label: \"东营市\", children: [{ value: \"370502\", label: \"东营区\" }, { value: \"370503\", label: \"河口区\" }, { value: \"370521\", label: \"垦利县\" }, { value: \"370522\", label: \"利津县\" }, { value: \"370523\", label: \"广饶县\" }, { value: \"370589\", label: \"西城区\" }, { value: \"370571\", label: \"东营经济技术开发区\" }, { value: \"370572\", label: \"东营港经济开发区\" }] }, { value: \"370600\", label: \"烟台市\", children: [{ value: \"370602\", label: \"芝罘区\" }, { value: \"370611\", label: \"福山区\" }, { value: \"370612\", label: \"牟平区\" }, { value: \"370613\", label: \"莱山区\" }, { value: \"370634\", label: \"长岛县\" }, { value: \"370681\", label: \"龙口市\" }, { value: \"370682\", label: \"莱阳市\" }, { value: \"370683\", label: \"莱州市\" }, { value: \"370684\", label: \"蓬莱市\" }, { value: \"370685\", label: \"招远市\" }, { value: \"370686\", label: \"栖霞市\" }, { value: \"370687\", label: \"海阳市\" }, { value: \"370671\", label: \"烟台高新技术产业开发区\" }, { value: \"370672\", label: \"烟台经济技术开发区\" }] }, { value: \"370700\", label: \"潍坊市\", children: [{ value: \"370702\", label: \"潍城区\" }, { value: \"370703\", label: \"寒亭区\" }, { value: \"370704\", label: \"坊子区\" }, { value: \"370705\", label: \"奎文区\" }, { value: \"370724\", label: \"临朐县\" }, { value: \"370725\", label: \"昌乐县\" }, { value: \"370772\", label: \"潍坊滨海经济技术开发区\" }, { value: \"370781\", label: \"青州市\" }, { value: \"370782\", label: \"诸城市\" }, { value: \"370783\", label: \"寿光市\" }, { value: \"370784\", label: \"安丘市\" }, { value: \"370785\", label: \"高密市\" }, { value: \"370786\", label: \"昌邑市\" }] }, { value: \"370800\", label: \"济宁市\", children: [{ value: \"370811\", label: \"任城区\" }, { value: \"370826\", label: \"微山县\" }, { value: \"370827\", label: \"鱼台县\" }, { value: \"370828\", label: \"金乡县\" }, { value: \"370829\", label: \"嘉祥县\" }, { value: \"370830\", label: \"汶上县\" }, { value: \"370831\", label: \"泗水县\" }, { value: \"370832\", label: \"梁山县\" }, { value: \"370881\", label: \"曲阜市\" }, { value: \"370812\", label: \"兖州区\" }, { value: \"370883\", label: \"邹城市\" }, { value: \"370871\", label: \"济宁高新技术产业开发区\" }] }, { value: \"370900\", label: \"泰安市\", children: [{ value: \"370902\", label: \"泰山区\" }, { value: \"370903\", label: \"岱岳区\" }, { value: \"370921\", label: \"宁阳县\" }, { value: \"370923\", label: \"东平县\" }, { value: \"370982\", label: \"新泰市\" }, { value: \"370983\", label: \"肥城市\" }] }, { value: \"371000\", label: \"威海市\", children: [{ value: \"371002\", label: \"环翠区\" }, { value: \"371003\", label: \"文登区\" }, { value: \"371082\", label: \"荣成市\" }, { value: \"371083\", label: \"乳山市\" }, { value: \"371071\", label: \"威海火炬高技术产业开发区\" }, { value: \"371072\", label: \"威海经济技术开发区\" }, { value: \"371073\", label: \"威海临港经济技术开发区\" }] }, { value: \"371100\", label: \"日照市\", children: [{ value: \"371102\", label: \"东港区\" }, { value: \"371103\", label: \"岚山区\" }, { value: \"371121\", label: \"五莲县\" }, { value: \"371122\", label: \"莒县\" }, { value: \"371171\", label: \"日照经济技术开发区\" }, { value: \"371172\", label: \"日照国际海洋城\" }] }, { value: \"371200\", label: \"莱芜市\", children: [{ value: \"371202\", label: \"莱城区\" }, { value: \"371203\", label: \"钢城区\" }] }, { value: \"371300\", label: \"临沂市\", children: [{ value: \"371302\", label: \"兰山区\" }, { value: \"371311\", label: \"罗庄区\" }, { value: \"371312\", label: \"河东区\" }, { value: \"371321\", label: \"沂南县\" }, { value: \"371322\", label: \"郯城县\" }, { value: \"371323\", label: \"沂水县\" }, { value: \"371324\", label: \"兰陵县\" }, { value: \"371325\", label: \"费县\" }, { value: \"371326\", label: \"平邑县\" }, { value: \"371327\", label: \"莒南县\" }, { value: \"371328\", label: \"蒙阴县\" }, { value: \"371329\", label: \"临沭县\" }, { value: \"371371\", label: \"临沂高新技术产业开发区\" }, { value: \"371373\", label: \"临沂临港经济开发区\" }, { value: \"371372\", label: \"临沂经济技术开发区\" }] }, { value: \"371400\", label: \"德州市\", children: [{ value: \"371402\", label: \"德城区\" }, { value: \"371403\", label: \"陵城区\" }, { value: \"371422\", label: \"宁津县\" }, { value: \"371423\", label: \"庆云县\" }, { value: \"371424\", label: \"临邑县\" }, { value: \"371425\", label: \"齐河县\" }, { value: \"371426\", label: \"平原县\" }, { value: \"371427\", label: \"夏津县\" }, { value: \"371428\", label: \"武城县\" }, { value: \"371481\", label: \"乐陵市\" }, { value: \"371482\", label: \"禹城市\" }, { value: \"371471\", label: \"德州经济技术开发区\" }, { value: \"371472\", label: \"德州运河经济开发区\" }] }, { value: \"371500\", label: \"聊城市\", children: [{ value: \"371502\", label: \"东昌府区\" }, { value: \"371521\", label: \"阳谷县\" }, { value: \"371522\", label: \"莘县\" }, { value: \"371523\", label: \"茌平县\" }, { value: \"371524\", label: \"东阿县\" }, { value: \"371525\", label: \"冠县\" }, { value: \"371526\", label: \"高唐县\" }, { value: \"371581\", label: \"临清市\" }] }, { value: \"371600\", label: \"滨州市\", children: [{ value: \"371602\", label: \"滨城区\" }, { value: \"371621\", label: \"惠民县\" }, { value: \"371622\", label: \"阳信县\" }, { value: \"371623\", label: \"无棣县\" }, { value: \"371603\", label: \"沾化区\" }, { value: \"371625\", label: \"博兴县\" }, { value: \"371626\", label: \"邹平县\" }] }, { value: \"371700\", label: \"菏泽市\", children: [{ value: \"371702\", label: \"牡丹区\" }, { value: \"371721\", label: \"曹县\" }, { value: \"371722\", label: \"单县\" }, { value: \"371723\", label: \"成武县\" }, { value: \"371724\", label: \"巨野县\" }, { value: \"371725\", label: \"郓城县\" }, { value: \"371726\", label: \"鄄城县\" }, { value: \"371727\", label: \"定陶区\" }, { value: \"371728\", label: \"东明县\" }, { value: \"371771\", label: \"菏泽经济技术开发区\" }, { value: \"371772\", label: \"菏泽高新技术开发区\" }] }] }, { value: '410000', label: '河南省', children: [{ value: \"410100\", label: \"郑州市\", children: [{ value: \"410102\", label: \"中原区\" }, { value: \"410103\", label: \"二七区\" }, { value: \"410104\", label: \"管城回族区\" }, { value: \"410105\", label: \"金水区\" }, { value: \"410106\", label: \"上街区\" }, { value: \"410108\", label: \"惠济区\" }, { value: \"410122\", label: \"中牟县\" }, { value: \"410181\", label: \"巩义市\" }, { value: \"410182\", label: \"荥阳市\" }, { value: \"410183\", label: \"新密市\" }, { value: \"410184\", label: \"新郑市\" }, { value: \"410185\", label: \"登封市\" }, { value: \"410171\", label: \"郑州经济技术开发区\" }, { value: \"410172\", label: \"郑州高新技术产业开发区\" }, { value: \"410173\", label: \"郑州航空港经济综合实验区\" }] }, { value: \"410200\", label: \"开封市\", children: [{ value: \"410202\", label: \"龙亭区\" }, { value: \"410203\", label: \"顺河回族区\" }, { value: \"410204\", label: \"鼓楼区\" }, { value: \"410205\", label: \"禹王台区\" }, { value: \"410211\", label: \"金明区\" }, { value: \"410221\", label: \"杞县\" }, { value: \"410222\", label: \"通许县\" }, { value: \"410223\", label: \"尉氏县\" }, { value: \"410225\", label: \"兰考县\" }, { value: \"410212\", label: \"祥符区\" }] }, { value: \"410300\", label: \"洛阳市\", children: [{ value: \"410302\", label: \"老城区\" }, { value: \"410303\", label: \"西工区\" }, { value: \"410304\", label: \"廛河回族区\" }, { value: \"410305\", label: \"涧西区\" }, { value: \"410306\", label: \"吉利区\" }, { value: \"410307\", label: \"洛龙区\" }, { value: \"410322\", label: \"孟津县\" }, { value: \"410323\", label: \"新安县\" }, { value: \"410324\", label: \"栾川县\" }, { value: \"410325\", label: \"嵩县\" }, { value: \"410326\", label: \"汝阳县\" }, { value: \"410327\", label: \"宜阳县\" }, { value: \"410328\", label: \"洛宁县\" }, { value: \"410329\", label: \"伊川县\" }, { value: \"410381\", label: \"偃师市\" }, { value: \"410371\", label: \"洛阳高新技术产业开发区\" }, { value: \"471005\", label: \"其它区\" }] }, { value: \"410400\", label: \"平顶山市\", children: [{ value: \"410402\", label: \"新华区\" }, { value: \"410403\", label: \"卫东区\" }, { value: \"410404\", label: \"石龙区\" }, { value: \"410411\", label: \"湛河区\" }, { value: \"410421\", label: \"宝丰县\" }, { value: \"410422\", label: \"叶县\" }, { value: \"410423\", label: \"鲁山县\" }, { value: \"410425\", label: \"郏县\" }, { value: \"410481\", label: \"舞钢市\" }, { value: \"410482\", label: \"汝州市\" }, { value: \"410471\", label: \"平顶山高新技术产业开发区\" }, { value: \"410472\", label: \"平顶山市新城区\" }] }, { value: \"410500\", label: \"安阳市\", children: [{ value: \"410502\", label: \"文峰区\" }, { value: \"410503\", label: \"北关区\" }, { value: \"410505\", label: \"殷都区\" }, { value: \"410506\", label: \"龙安区\" }, { value: \"410522\", label: \"安阳县\" }, { value: \"410523\", label: \"汤阴县\" }, { value: \"410526\", label: \"滑县\" }, { value: \"410527\", label: \"内黄县\" }, { value: \"410581\", label: \"林州市\" }, { value: \"410571\", label: \"安阳高新技术产业开发区\" }] }, { value: \"410600\", label: \"鹤壁市\", children: [{ value: \"410602\", label: \"鹤山区\" }, { value: \"410603\", label: \"山城区\" }, { value: \"410611\", label: \"淇滨区\" }, { value: \"410621\", label: \"浚县\" }, { value: \"410622\", label: \"淇县\" }, { value: \"410671\", label: \"鹤壁经济技术开发区\" }] }, { value: \"410700\", label: \"新乡市\", children: [{ value: \"410702\", label: \"红旗区\" }, { value: \"410703\", label: \"卫滨区\" }, { value: \"410704\", label: \"凤泉区\" }, { value: \"410711\", label: \"牧野区\" }, { value: \"410721\", label: \"新乡县\" }, { value: \"410724\", label: \"获嘉县\" }, { value: \"410725\", label: \"原阳县\" }, { value: \"410726\", label: \"延津县\" }, { value: \"410727\", label: \"封丘县\" }, { value: \"410728\", label: \"长垣县\" }, { value: \"410781\", label: \"卫辉市\" }, { value: \"410782\", label: \"辉县市\" }, { value: \"410771\", label: \"新乡高新技术产业开发区\" }, { value: \"410773\", label: \"新乡市平原城乡一体化示范区\" }, { value: \"410772\", label: \"新乡经济技术开发区\" }] }, { value: \"410800\", label: \"焦作市\", children: [{ value: \"410802\", label: \"解放区\" }, { value: \"410803\", label: \"中站区\" }, { value: \"410804\", label: \"马村区\" }, { value: \"410811\", label: \"山阳区\" }, { value: \"410821\", label: \"修武县\" }, { value: \"410822\", label: \"博爱县\" }, { value: \"410823\", label: \"武陟县\" }, { value: \"410825\", label: \"温县\" }, { value: \"410882\", label: \"沁阳市\" }, { value: \"410883\", label: \"孟州市\" }, { value: \"410871\", label: \"焦作城乡一体化示范区\" }] }, { value: \"410900\", label: \"濮阳市\", children: [{ value: \"410902\", label: \"华龙区\" }, { value: \"410922\", label: \"清丰县\" }, { value: \"410923\", label: \"南乐县\" }, { value: \"410926\", label: \"范县\" }, { value: \"410927\", label: \"台前县\" }, { value: \"410928\", label: \"濮阳县\" }, { value: \"410971\", label: \"河南濮阳工业园区\" }, { value: \"410972\", label: \"濮阳经济技术开发区\" }] }, { value: \"411000\", label: \"许昌市\", children: [{ value: \"411002\", label: \"魏都区\" }, { value: \"411003\", label: \"建安区\" }, { value: \"411024\", label: \"鄢陵县\" }, { value: \"411025\", label: \"襄城县\" }, { value: \"411081\", label: \"禹州市\" }, { value: \"411082\", label: \"长葛市\" }, { value: \"411071\", label: \"许昌经济技术开发区\" }] }, { value: \"411100\", label: \"漯河市\", children: [{ value: \"411102\", label: \"源汇区\" }, { value: \"411103\", label: \"郾城区\" }, { value: \"411104\", label: \"召陵区\" }, { value: \"411121\", label: \"舞阳县\" }, { value: \"411122\", label: \"临颍县\" }, { value: \"411171\", label: \"漯河经济技术开发区\" }] }, { value: \"411200\", label: \"三门峡市\", children: [{ value: \"411202\", label: \"湖滨区\" }, { value: \"411221\", label: \"渑池县\" }, { value: \"411222\", label: \"陕县\" }, { value: \"411224\", label: \"卢氏县\" }, { value: \"411281\", label: \"义马市\" }, { value: \"411282\", label: \"灵宝市\" }, { value: \"411203\", label: \"陕州区\" }, { value: \"411271\", label: \"河南三门峡经济开发区\" }] }, { value: \"411300\", label: \"南阳市\", children: [{ value: \"411302\", label: \"宛城区\" }, { value: \"411303\", label: \"卧龙区\" }, { value: \"411321\", label: \"南召县\" }, { value: \"411322\", label: \"方城县\" }, { value: \"411323\", label: \"西峡县\" }, { value: \"411324\", label: \"镇平县\" }, { value: \"411325\", label: \"内乡县\" }, { value: \"411326\", label: \"淅川县\" }, { value: \"411327\", label: \"社旗县\" }, { value: \"411328\", label: \"唐河县\" }, { value: \"411329\", label: \"新野县\" }, { value: \"411330\", label: \"桐柏县\" }, { value: \"411381\", label: \"邓州市\" }, { value: \"411371\", label: \"南阳高新技术产业开发区\" }, { value: \"411372\", label: \"南阳市城乡一体化示范区\" }] }, { value: \"411400\", label: \"商丘市\", children: [{ value: \"411402\", label: \"梁园区\" }, { value: \"411403\", label: \"睢阳区\" }, { value: \"411421\", label: \"民权县\" }, { value: \"411422\", label: \"睢县\" }, { value: \"411423\", label: \"宁陵县\" }, { value: \"411424\", label: \"柘城县\" }, { value: \"411425\", label: \"虞城县\" }, { value: \"411426\", label: \"夏邑县\" }, { value: \"411481\", label: \"永城市\" }, { value: \"411471\", label: \"豫东综合物流产业聚集区\" }, { value: \"411472\", label: \"河南商丘经济开发\" }] }, { value: \"411500\", label: \"信阳市\", children: [{ value: \"411502\", label: \"浉河区\" }, { value: \"411503\", label: \"平桥区\" }, { value: \"411521\", label: \"罗山县\" }, { value: \"411522\", label: \"光山县\" }, { value: \"411523\", label: \"新县\" }, { value: \"411524\", label: \"商城县\" }, { value: \"411525\", label: \"固始县\" }, { value: \"411526\", label: \"潢川县\" }, { value: \"411527\", label: \"淮滨县\" }, { value: \"411528\", label: \"息县\" }, { value: \"411571\", label: \"信阳高新技术产业开发区\" }] }, { value: \"411600\", label: \"周口市\", children: [{ value: \"411602\", label: \"川汇区\" }, { value: \"411621\", label: \"扶沟县\" }, { value: \"411622\", label: \"西华县\" }, { value: \"411623\", label: \"商水县\" }, { value: \"411624\", label: \"沈丘县\" }, { value: \"411625\", label: \"郸城县\" }, { value: \"411626\", label: \"淮阳县\" }, { value: \"411627\", label: \"太康县\" }, { value: \"411628\", label: \"鹿邑县\" }, { value: \"411681\", label: \"项城市\" }, { value: \"411671\", label: \"河南周口经济开发区\" }] }, { value: \"411700\", label: \"驻马店市\", children: [{ value: \"411702\", label: \"驿城区\" }, { value: \"411721\", label: \"西平县\" }, { value: \"411722\", label: \"上蔡县\" }, { value: \"411723\", label: \"平舆县\" }, { value: \"411724\", label: \"正阳县\" }, { value: \"411725\", label: \"确山县\" }, { value: \"411726\", label: \"泌阳县\" }, { value: \"411727\", label: \"汝南县\" }, { value: \"411628\", label: \"遂平县\" }, { value: \"411729\", label: \"新蔡县\" }, { value: \"411771\", label: \"河南驻马店经济开发区\" }] }] }, { value: '420000', label: '湖北省', children: [{ value: \"420100\", label: \"武汉市\", children: [{ value: \"420101\", label: \"市辖区\" }, { value: \"420102\", label: \"江岸区\" }, { value: \"420103\", label: \"江汉区\" }, { value: \"420104\", label: \"硚口区\" }, { value: \"420105\", label: \"汉阳区\" }, { value: \"420106\", label: \"武昌区\" }, { value: \"420107\", label: \"青山区\" }, { value: \"420111\", label: \"洪山区\" }, { value: \"420112\", label: \"东西湖区\" }, { value: \"420113\", label: \"汉南区\" }, { value: \"420114\", label: \"蔡甸区\" }, { value: \"420115\", label: \"江夏区\" }, { value: \"420116\", label: \"黄陂区\" }, { value: \"420117\", label: \"新洲区\" }] }, { value: \"420200\", label: \"黄石市\", children: [{ value: \"420201\", label: \"市辖区\" }, { value: \"420202\", label: \"黄石港区\" }, { value: \"420203\", label: \"西塞山区\" }, { value: \"420204\", label: \"下陆区\" }, { value: \"420205\", label: \"铁山区\" }, { value: \"420222\", label: \"阳新县\" }, { value: \"420281\", label: \"大冶市\" }] }, { value: \"420300\", label: \"十堰市\", children: [{ value: \"420301\", label: \"市辖区\" }, { value: \"420302\", label: \"茅箭区\" }, { value: \"420303\", label: \"张湾区\" }, { value: \"420304\", label: \"郧阳区\" }, { value: \"420322\", label: \"郧西县\" }, { value: \"420323\", label: \"竹山县\" }, { value: \"420324\", label: \"竹溪县\" }, { value: \"420325\", label: \"房县\" }, { value: \"420381\", label: \"丹江口市\" }] }, { value: \"420500\", label: \"宜昌市\", children: [{ value: \"420501\", label: \"市辖区\" }, { value: \"420502\", label: \"西陵区\" }, { value: \"420503\", label: \"伍家岗区\" }, { value: \"420504\", label: \"点军区\" }, { value: \"420505\", label: \"猇亭区\" }, { value: \"420506\", label: \"夷陵区\" }, { value: \"420525\", label: \"远安县\" }, { value: \"420526\", label: \"兴山县\" }, { value: \"420527\", label: \"秭归县\" }, { value: \"420528\", label: \"长阳土家族自治县\" }, { value: \"420529\", label: \"五峰土家族自治县\" }, { value: \"420581\", label: \"宜都市\" }, { value: \"420582\", label: \"当阳市\" }, { value: \"420583\", label: \"枝江市\" }] }, { value: \"420600\", label: \"襄阳市\", children: [{ value: \"420601\", label: \"市辖区\" }, { value: \"420602\", label: \"襄城区\" }, { value: \"420606\", label: \"樊城区\" }, { value: \"420607\", label: \"襄州区\" }, { value: \"420624\", label: \"南漳县\" }, { value: \"420625\", label: \"谷城县\" }, { value: \"420626\", label: \"保康县\" }, { value: \"420682\", label: \"老河口市\" }, { value: \"420683\", label: \"枣阳市\" }, { value: \"420684\", label: \"宜城市\" }] }, { value: \"420700\", label: \"鄂州市\", children: [{ value: \"420701\", label: \"市辖区\" }, { value: \"420702\", label: \"梁子湖区\" }, { value: \"420703\", label: \"华容区\" }, { value: \"420704\", label: \"鄂城区\" }] }, { value: \"420800\", label: \"荆门市\", children: [{ value: \"420801\", label: \"市辖区\" }, { value: \"420802\", label: \"东宝区\" }, { value: \"420804\", label: \"掇刀区\" }, { value: \"420821\", label: \"京山县\" }, { value: \"420822\", label: \"沙洋县\" }, { value: \"420881\", label: \"钟祥市\" }] }, { value: \"420900\", label: \"孝感市\", children: [{ value: \"420901\", label: \"市辖区\" }, { value: \"420902\", label: \"孝南区\" }, { value: \"420921\", label: \"孝昌县\" }, { value: \"420922\", label: \"大悟县\" }, { value: \"420923\", label: \"云梦县\" }, { value: \"420981\", label: \"应城市\" }, { value: \"420982\", label: \"安陆市\" }, { value: \"420984\", label: \"汉川市\" }] }, { value: \"421000\", label: \"荆州市\", children: [{ value: \"421001\", label: \"市辖区\" }, { value: \"421002\", label: \"沙市区\" }, { value: \"421003\", label: \"荆州区\" }, { value: \"421022\", label: \"公安县\" }, { value: \"421023\", label: \"监利县\" }, { value: \"421024\", label: \"江陵县\" }, { value: \"421071\", label: \"荆州经济技术开发区\" }, { value: \"421081\", label: \"石首市\" }, { value: \"421083\", label: \"洪湖市\" }, { value: \"421087\", label: \"松滋市\" }] }, { value: \"421100\", label: \"黄冈市\", children: [{ value: \"421101\", label: \"市辖区\" }, { value: \"421102\", label: \"黄州区\" }, { value: \"421121\", label: \"团风县\" }, { value: \"421122\", label: \"红安县\" }, { value: \"421123\", label: \"罗田县\" }, { value: \"421124\", label: \"英山县\" }, { value: \"421125\", label: \"浠水县\" }, { value: \"421126\", label: \"蕲春县\" }, { value: \"421127\", label: \"黄梅县\" }, { value: \"421171\", label: \"龙感湖管理区\" }, { value: \"421181\", label: \"麻城市\" }, { value: \"421182\", label: \"武穴市\" }] }, { value: \"421200\", label: \"咸宁市\", children: [{ value: \"421201\", label: \"市辖区\" }, { value: \"421202\", label: \"咸安区\" }, { value: \"421221\", label: \"嘉鱼县\" }, { value: \"421222\", label: \"通城县\" }, { value: \"421223\", label: \"崇阳县\" }, { value: \"421224\", label: \"通山县\" }, { value: \"421281\", label: \"赤壁市\" }] }, { value: \"421300\", label: \"随州市\", children: [{ value: \"421301\", label: \"市辖区\" }, { value: \"421303\", label: \"曾都区\" }, { value: \"421321\", label: \"随县\" }, { value: \"421381\", label: \"广水市\" }] }, { value: \"422800\", label: \"恩施土家族苗族自治州\", children: [{ value: \"422801\", label: \"恩施市\" }, { value: \"422802\", label: \"利川市\" }, { value: \"422822\", label: \"建始县\" }, { value: \"422823\", label: \"巴东县\" }, { value: \"422825\", label: \"宣恩县\" }, { value: \"422826\", label: \"咸丰县\" }, { value: \"422827\", label: \"来凤县\" }, { value: \"422828\", label: \"鹤峰县\" }] }, { value: \"429000\", label: \"省直辖县级行政区划\", children: [{ value: \"429004\", label: \"仙桃市\" }, { value: \"429005\", label: \"潜江市\" }, { value: \"429006\", label: \"天门市\" }, { value: \"429021\", label: \"神农架林区\" }] }] }, { value: '430000', label: '湖南省', children: [{ value: \"430100\", label: \"长沙市\", children: [{ value: \"430101\", label: \"市辖区\" }, { value: \"430102\", label: \"芙蓉区\" }, { value: \"430103\", label: \"天心区\" }, { value: \"430104\", label: \"岳麓区\" }, { value: \"430105\", label: \"开福区\" }, { value: \"430111\", label: \"雨花区\" }, { value: \"430112\", label: \"望城区\" }, { value: \"430121\", label: \"长沙县\" }, { value: \"430181\", label: \"浏阳市\" }, { value: \"430182\", label: \"宁乡市\" }] }, { value: \"430200\", label: \"株洲市\", children: [{ value: \"430201\", label: \"市辖区\" }, { value: \"430202\", label: \"荷塘区\" }, { value: \"430203\", label: \"芦淞区\" }, { value: \"430204\", label: \"石峰区\" }, { value: \"430211\", label: \"天元区\" }, { value: \"430221\", label: \"株洲县\" }, { value: \"430223\", label: \"攸县\" }, { value: \"430224\", label: \"茶陵县\" }, { value: \"430225\", label: \"炎陵县\" }, { value: \"430271\", label: \"云龙示范区\" }, { value: \"430281\", label: \"醴陵市\" }] }, { value: \"430300\", label: \"湘潭市\", children: [{ value: \"430301\", label: \"市辖区\" }, { value: \"430302\", label: \"雨湖区\" }, { value: \"430304\", label: \"岳塘区\" }, { value: \"430321\", label: \"湘潭县\" }, { value: \"430371\", label: \"湖南湘潭高新技术产业园区\" }, { value: \"430372\", label: \"湘潭昭山示范区\" }, { value: \"430373\", label: \"湘潭九华示范区\" }, { value: \"430381\", label: \"湘乡市\" }, { value: \"430382\", label: \"韶山市\" }] }, { value: \"430400\", label: \"衡阳市\", children: [{ value: \"430401\", label: \"市辖区\" }, { value: \"430405\", label: \"珠晖区\" }, { value: \"430406\", label: \"雁峰区\" }, { value: \"430407\", label: \"石鼓区\" }, { value: \"430408\", label: \"蒸湘区\" }, { value: \"430412\", label: \"南岳区\" }, { value: \"430421\", label: \"衡阳县\" }, { value: \"430422\", label: \"衡南县\" }, { value: \"430423\", label: \"衡山县\" }, { value: \"430424\", label: \"衡东县\" }, { value: \"430426\", label: \"祁东县\" }, { value: \"430471\", label: \"衡阳综合保税区\" }, { value: \"430472\", label: \"湖南衡阳高新技术产业园区\" }, { value: \"430473\", label: \"湖南衡阳松木经济开发区\" }, { value: \"430481\", label: \"耒阳市\" }, { value: \"430482\", label: \"常宁市\" }] }, { value: \"430500\", label: \"邵阳市\", children: [{ value: \"430501\", label: \"市辖区\" }, { value: \"430502\", label: \"双清区\" }, { value: \"430503\", label: \"大祥区\" }, { value: \"430511\", label: \"北塔区\" }, { value: \"430521\", label: \"邵东县\" }, { value: \"430522\", label: \"新邵县\" }, { value: \"430523\", label: \"邵阳县\" }, { value: \"430524\", label: \"隆回县\" }, { value: \"430525\", label: \"洞口县\" }, { value: \"430527\", label: \"绥宁县\" }, { value: \"430528\", label: \"新宁县\" }, { value: \"430529\", label: \"城步苗族自治县\" }, { value: \"430581\", label: \"武冈市\" }] }, { value: \"430600\", label: \"岳阳市\", children: [{ value: \"430601\", label: \"市辖区\" }, { value: \"430602\", label: \"岳阳楼区\" }, { value: \"430603\", label: \"云溪区\" }, { value: \"430611\", label: \"君山区\" }, { value: \"430621\", label: \"岳阳县\" }, { value: \"430623\", label: \"华容县\" }, { value: \"430624\", label: \"湘阴县\" }, { value: \"430626\", label: \"平江县\" }, { value: \"430671\", label: \"岳阳市屈原管理区\" }, { value: \"430681\", label: \"汨罗市\" }, { value: \"430682\", label: \"临湘市\" }] }, { value: \"430700\", label: \"常德市\", children: [{ value: \"430701\", label: \"市辖区\" }, { value: \"430702\", label: \"武陵区\" }, { value: \"430703\", label: \"鼎城区\" }, { value: \"430721\", label: \"安乡县\" }, { value: \"430722\", label: \"汉寿县\" }, { value: \"430723\", label: \"澧县\" }, { value: \"430724\", label: \"临澧县\" }, { value: \"430725\", label: \"桃源县\" }, { value: \"430726\", label: \"石门县\" }, { value: \"430771\", label: \"常德市西洞庭管理区\" }, { value: \"430781\", label: \"津市市\" }] }, { value: \"430800\", label: \"张家界市\", children: [{ value: \"430801\", label: \"市辖区\" }, { value: \"430802\", label: \"永定区\" }, { value: \"430811\", label: \"武陵源区\" }, { value: \"430821\", label: \"慈利县\" }, { value: \"430822\", label: \"桑植县\" }] }, { value: \"430900\", label: \"益阳市\", children: [{ value: \"430901\", label: \"市辖区\" }, { value: \"430902\", label: \"资阳区\" }, { value: \"430903\", label: \"赫山区\" }, { value: \"430921\", label: \"南县\" }, { value: \"430922\", label: \"桃江县\" }, { value: \"430923\", label: \"安化县\" }, { value: \"430971\", label: \"益阳市大通湖管理区\" }, { value: \"430972\", label: \"湖南益阳高新技术产业园区\" }, { value: \"430981\", label: \"沅江市\" }] }, { value: \"431000\", label: \"郴州市\", children: [{ value: \"431001\", label: \"市辖区\" }, { value: \"431002\", label: \"北湖区\" }, { value: \"431003\", label: \"苏仙区\" }, { value: \"431021\", label: \"桂阳县\" }, { value: \"431022\", label: \"宜章县\" }, { value: \"431023\", label: \"永兴县\" }, { value: \"431024\", label: \"嘉禾县\" }, { value: \"431025\", label: \"临武县\" }, { value: \"431026\", label: \"汝城县\" }, { value: \"431027\", label: \"桂东县\" }, { value: \"431028\", label: \"安仁县\" }, { value: \"431081\", label: \"资兴市\" }] }, { value: \"431100\", label: \"永州市\", children: [{ value: \"431101\", label: \"市辖区\" }, { value: \"431102\", label: \"零陵区\" }, { value: \"431103\", label: \"冷水滩区\" }, { value: \"431121\", label: \"祁阳县\" }, { value: \"431122\", label: \"东安县\" }, { value: \"431123\", label: \"双牌县\" }, { value: \"431124\", label: \"道县\" }, { value: \"431125\", label: \"江永县\" }, { value: \"431126\", label: \"宁远县\" }, { value: \"431127\", label: \"蓝山县\" }, { value: \"431128\", label: \"新田县\" }, { value: \"431129\", label: \"江华瑶族自治县\" }, { value: \"431171\", label: \"永州经济技术开发区\" }, { value: \"431172\", label: \"永州市金洞管理区\" }, { value: \"431173\", label: \"永州市回龙圩管理区\" }] }, { value: \"431200\", label: \"怀化市\", children: [{ value: \"431201\", label: \"市辖区\" }, { value: \"431202\", label: \"鹤城区\" }, { value: \"431221\", label: \"中方县\" }, { value: \"431222\", label: \"沅陵县\" }, { value: \"431223\", label: \"辰溪县\" }, { value: \"431224\", label: \"溆浦县\" }, { value: \"431225\", label: \"会同县\" }, { value: \"431226\", label: \"麻阳苗族自治县\" }, { value: \"431227\", label: \"新晃侗族自治县\" }, { value: \"431228\", label: \"芷江侗族自治县\" }, { value: \"431229\", label: \"靖州苗族侗族自治县\" }, { value: \"431230\", label: \"通道侗族自治县\" }, { value: \"431271\", label: \"怀化市洪江管理区\" }, { value: \"431281\", label: \"洪江市\" }] }, { value: \"431300\", label: \"娄底市\", children: [{ value: \"431301\", label: \"市辖区\" }, { value: \"431302\", label: \"娄星区\" }, { value: \"431321\", label: \"双峰县\" }, { value: \"431322\", label: \"新化县\" }, { value: \"431381\", label: \"冷水江市\" }, { value: \"431382\", label: \"涟源市\" }] }, { value: \"433100\", label: \"湘西土家族苗族自治州\", children: [{ value: \"433101\", label: \"吉首市\" }, { value: \"433122\", label: \"泸溪县\" }, { value: \"433123\", label: \"凤凰县\" }, { value: \"433124\", label: \"花垣县\" }, { value: \"433125\", label: \"保靖县\" }, { value: \"433126\", label: \"古丈县\" }, { value: \"433127\", label: \"永顺县\" }, { value: \"433130\", label: \"龙山县\" }, { value: \"433172\", label: \"湖南吉首经济开发区\" }, { value: \"433173\", label: \"湖南永顺经济开发区\" }] }] }, { value: '440000', label: '广东省', children: [{ value: \"440100\", label: \"广州市\", children: [{ value: \"440101\", label: \"市辖区\" }, { value: \"440103\", label: \"荔湾区\" }, { value: \"440104\", label: \"越秀区\" }, { value: \"440105\", label: \"海珠区\" }, { value: \"440106\", label: \"天河区\" }, { value: \"440111\", label: \"白云区\" }, { value: \"440112\", label: \"黄埔区\" }, { value: \"440113\", label: \"番禺区\" }, { value: \"440114\", label: \"花都区\" }, { value: \"440115\", label: \"南沙区\" }, { value: \"440117\", label: \"从化区\" }, { value: \"440118\", label: \"增城区\" }] }, { value: \"440200\", label: \"韶关市\", children: [{ value: \"440201\", label: \"市辖区\" }, { value: \"440203\", label: \"武江区\" }, { value: \"440204\", label: \"浈江区\" }, { value: \"440205\", label: \"曲江区\" }, { value: \"440222\", label: \"始兴县\" }, { value: \"440224\", label: \"仁化县\" }, { value: \"440229\", label: \"翁源县\" }, { value: \"440232\", label: \"乳源瑶族自治县\" }, { value: \"440233\", label: \"新丰县\" }, { value: \"440281\", label: \"乐昌市\" }, { value: \"440282\", label: \"南雄市\" }] }, { value: \"440300\", label: \"深圳市\", children: [{ value: \"440301\", label: \"市辖区\" }, { value: \"440303\", label: \"罗湖区\" }, { value: \"440304\", label: \"福田区\" }, { value: \"440305\", label: \"南山区\" }, { value: \"440306\", label: \"宝安区\" }, { value: \"440307\", label: \"龙岗区\" }, { value: \"440308\", label: \"盐田区\" }, { value: \"440309\", label: \"龙华区\" }, { value: \"440310\", label: \"坪山区\" }] }, { value: \"440400\", label: \"珠海市\", children: [{ value: \"440401\", label: \"市辖区\" }, { value: \"440402\", label: \"香洲区\" }, { value: \"440403\", label: \"斗门区\" }, { value: \"440404\", label: \"金湾区\" }] }, { value: \"440500\", label: \"汕头市\", children: [{ value: \"440501\", label: \"市辖区\" }, { value: \"440507\", label: \"龙湖区\" }, { value: \"440511\", label: \"金平区\" }, { value: \"440512\", label: \"濠江区\" }, { value: \"440513\", label: \"潮阳区\" }, { value: \"440514\", label: \"潮南区\" }, { value: \"440515\", label: \"澄海区\" }, { value: \"440523\", label: \"南澳县\" }] }, { value: \"440600\", label: \"佛山市\", children: [{ value: \"440601\", label: \"市辖区\" }, { value: \"440604\", label: \"禅城区\" }, { value: \"440605\", label: \"南海区\" }, { value: \"440606\", label: \"顺德区\" }, { value: \"440607\", label: \"三水区\" }, { value: \"440608\", label: \"高明区\" }] }, { value: \"440700\", label: \"江门市\", children: [{ value: \"440701\", label: \"市辖区\" }, { value: \"440703\", label: \"蓬江区\" }, { value: \"440704\", label: \"江海区\" }, { value: \"440705\", label: \"新会区\" }, { value: \"440781\", label: \"台山市\" }, { value: \"440783\", label: \"开平市\" }, { value: \"440784\", label: \"鹤山市\" }, { value: \"440785\", label: \"恩平市\" }] }, { value: \"440800\", label: \"湛江市\", children: [{ value: \"440801\", label: \"市辖区\" }, { value: \"440802\", label: \"赤坎区\" }, { value: \"440803\", label: \"霞山区\" }, { value: \"440804\", label: \"坡头区\" }, { value: \"440811\", label: \"麻章区\" }, { value: \"440823\", label: \"遂溪县\" }, { value: \"440825\", label: \"徐闻县\" }, { value: \"440881\", label: \"廉江市\" }, { value: \"440882\", label: \"雷州市\" }, { value: \"440883\", label: \"吴川市\" }] }, { value: \"440900\", label: \"茂名市\", children: [{ value: \"440901\", label: \"市辖区\" }, { value: \"440902\", label: \"茂南区\" }, { value: \"440904\", label: \"电白区\" }, { value: \"440981\", label: \"高州市\" }, { value: \"440982\", label: \"化州市\" }, { value: \"440983\", label: \"信宜市\" }] }, { value: \"441200\", label: \"肇庆市\", children: [{ value: \"441201\", label: \"市辖区\" }, { value: \"441202\", label: \"端州区\" }, { value: \"441203\", label: \"鼎湖区\" }, { value: \"441204\", label: \"高要区\" }, { value: \"441223\", label: \"广宁县\" }, { value: \"441224\", label: \"怀集县\" }, { value: \"441225\", label: \"封开县\" }, { value: \"441226\", label: \"德庆县\" }, { value: \"441284\", label: \"四会市\" }] }, { value: \"441300\", label: \"惠州市\", children: [{ value: \"441301\", label: \"市辖区\" }, { value: \"441302\", label: \"惠城区\" }, { value: \"441303\", label: \"惠阳区\" }, { value: \"441322\", label: \"博罗县\" }, { value: \"441323\", label: \"惠东县\" }, { value: \"441324\", label: \"龙门县\" }] }, { value: \"441400\", label: \"梅州市\", children: [{ value: \"441401\", label: \"市辖区\" }, { value: \"441402\", label: \"梅江区\" }, { value: \"441403\", label: \"梅县区\" }, { value: \"441422\", label: \"大埔县\" }, { value: \"441423\", label: \"丰顺县\" }, { value: \"441424\", label: \"五华县\" }, { value: \"441426\", label: \"平远县\" }, { value: \"441427\", label: \"蕉岭县\" }, { value: \"441481\", label: \"兴宁市\" }] }, { value: \"441500\", label: \"汕尾市\", children: [{ value: \"441501\", label: \"市辖区\" }, { value: \"441502\", label: \"城区\" }, { value: \"441521\", label: \"海丰县\" }, { value: \"441523\", label: \"陆河县\" }, { value: \"441581\", label: \"陆丰市\" }] }, { value: \"441600\", label: \"河源市\", children: [{ value: \"441601\", label: \"市辖区\" }, { value: \"441602\", label: \"源城区\" }, { value: \"441621\", label: \"紫金县\" }, { value: \"441622\", label: \"龙川县\" }, { value: \"441623\", label: \"连平县\" }, { value: \"441624\", label: \"和平县\" }, { value: \"441625\", label: \"东源县\" }] }, { value: \"441700\", label: \"阳江市\", children: [{ value: \"441701\", label: \"市辖区\" }, { value: \"441702\", label: \"江城区\" }, { value: \"441704\", label: \"阳东区\" }, { value: \"441721\", label: \"阳西县\" }, { value: \"441781\", label: \"阳春市\" }] }, { value: \"441800\", label: \"清远市\", children: [{ value: \"441801\", label: \"市辖区\" }, { value: \"441802\", label: \"清城区\" }, { value: \"441803\", label: \"清新区\" }, { value: \"441821\", label: \"佛冈县\" }, { value: \"441823\", label: \"阳山县\" }, { value: \"441825\", label: \"连山壮族瑶族自治县\" }, { value: \"441826\", label: \"连南瑶族自治县\" }, { value: \"441881\", label: \"英德市\" }, { value: \"441882\", label: \"连州市\" }] }, { value: \"441900\", label: \"东莞市\" }, { value: \"442000\", label: \"中山市\" }, { value: \"445100\", label: \"潮州市\", children: [{ value: \"445101\", label: \"市辖区\" }, { value: \"445102\", label: \"湘桥区\" }, { value: \"445103\", label: \"潮安区\" }, { value: \"445122\", label: \"饶平县\" }] }, { value: \"445200\", label: \"揭阳市\", children: [{ value: \"445201\", label: \"市辖区\" }, { value: \"445202\", label: \"榕城区\" }, { value: \"445203\", label: \"揭东区\" }, { value: \"445222\", label: \"揭西县\" }, { value: \"445224\", label: \"惠来县\" }, { value: \"445281\", label: \"普宁市\" }] }, { value: \"445300\", label: \"云浮市\", children: [{ value: \"445301\", label: \"市辖区\" }, { value: \"445302\", label: \"云城区\" }, { value: \"445303\", label: \"云安区\" }, { value: \"445321\", label: \"新兴县\" }, { value: \"445322\", label: \"郁南县\" }, { value: \"445381\", label: \"罗定市\" }] }] }, { value: '450000', label: '广西壮族', children: [{ value: \"450100\", label: \"南宁市\", children: [{ value: \"450101\", label: \"市辖区\" }, { value: \"450102\", label: \"兴宁区\" }, { value: \"450103\", label: \"青秀区\" }, { value: \"450105\", label: \"江南区\" }, { value: \"450107\", label: \"西乡塘区\" }, { value: \"450108\", label: \"良庆区\" }, { value: \"450109\", label: \"邕宁区\" }, { value: \"450110\", label: \"武鸣区\" }, { value: \"450123\", label: \"隆安县\" }, { value: \"450124\", label: \"马山县\" }, { value: \"450125\", label: \"上林县\" }, { value: \"450126\", label: \"宾阳县\" }, { value: \"450127\", label: \"横县\" }] }, { value: \"450200\", label: \"柳州市\", children: [{ value: \"450201\", label: \"市辖区\" }, { value: \"450202\", label: \"城中区\" }, { value: \"450203\", label: \"鱼峰区\" }, { value: \"450204\", label: \"柳南区\" }, { value: \"450205\", label: \"柳北区\" }, { value: \"450206\", label: \"柳江区\" }, { value: \"450222\", label: \"柳城县\" }, { value: \"450223\", label: \"鹿寨县\" }, { value: \"450224\", label: \"融安县\" }, { value: \"450225\", label: \"融水苗族自治县\" }, { value: \"450226\", label: \"三江侗族自治县\" }] }, { value: \"450300\", label: \"桂林市\", children: [{ value: \"450301\", label: \"市辖区\" }, { value: \"450302\", label: \"秀峰区\" }, { value: \"450303\", label: \"叠彩区\" }, { value: \"450304\", label: \"象山区\" }, { value: \"450305\", label: \"七星区\" }, { value: \"450311\", label: \"雁山区\" }, { value: \"450312\", label: \"临桂区\" }, { value: \"450321\", label: \"阳朔县\" }, { value: \"450323\", label: \"灵川县\" }, { value: \"450324\", label: \"全州县\" }, { value: \"450325\", label: \"兴安县\" }, { value: \"450326\", label: \"永福县\" }, { value: \"450327\", label: \"灌阳县\" }, { value: \"450328\", label: \"龙胜各族自治县\" }, { value: \"450329\", label: \"资源县\" }, { value: \"450330\", label: \"平乐县\" }, { value: \"450331\", label: \"荔浦县\" }, { value: \"450332\", label: \"恭城瑶族自治县\" }] }, { value: \"450400\", label: \"梧州市\", children: [{ value: \"450401\", label: \"市辖区\" }, { value: \"450403\", label: \"万秀区\" }, { value: \"450405\", label: \"长洲区\" }, { value: \"450406\", label: \"龙圩区\" }, { value: \"450421\", label: \"苍梧县\" }, { value: \"450422\", label: \"藤县\" }, { value: \"450423\", label: \"蒙山县\" }, { value: \"450481\", label: \"岑溪市\" }] }, { value: \"450500\", label: \"北海市\", children: [{ value: \"450501\", label: \"市辖区\" }, { value: \"450502\", label: \"海城区\" }, { value: \"450503\", label: \"银海区\" }, { value: \"450512\", label: \"铁山港区\" }, { value: \"450521\", label: \"合浦县\" }] }, { value: \"450600\", label: \"防城港市\", children: [{ value: \"450601\", label: \"市辖区\" }, { value: \"450602\", label: \"港口区\" }, { value: \"450603\", label: \"防城区\" }, { value: \"450621\", label: \"上思县\" }, { value: \"450681\", label: \"东兴市\" }] }, { value: \"450700\", label: \"钦州市\", children: [{ value: \"450701\", label: \"市辖区\" }, { value: \"450702\", label: \"钦南区\" }, { value: \"450703\", label: \"钦北区\" }, { value: \"450721\", label: \"灵山县\" }, { value: \"450722\", label: \"浦北县\" }] }, { value: \"450800\", label: \"贵港市\", children: [{ value: \"450801\", label: \"市辖区\" }, { value: \"450802\", label: \"港北区\" }, { value: \"450803\", label: \"港南区\" }, { value: \"450804\", label: \"覃塘区\" }, { value: \"450821\", label: \"平南县\" }, { value: \"450881\", label: \"桂平市\" }] }, { value: \"450900\", label: \"玉林市\", children: [{ value: \"450901\", label: \"市辖区\" }, { value: \"450902\", label: \"玉州区\" }, { value: \"450903\", label: \"福绵区\" }, { value: \"450921\", label: \"容县\" }, { value: \"450922\", label: \"陆川县\" }, { value: \"450923\", label: \"博白县\" }, { value: \"450924\", label: \"兴业县\" }, { value: \"450981\", label: \"北流市\" }] }, { value: \"451000\", label: \"百色市\", children: [{ value: \"451001\", label: \"市辖区\" }, { value: \"451002\", label: \"右江区\" }, { value: \"451021\", label: \"田阳县\" }, { value: \"451022\", label: \"田东县\" }, { value: \"451023\", label: \"平果县\" }, { value: \"451024\", label: \"德保县\" }, { value: \"451026\", label: \"那坡县\" }, { value: \"451027\", label: \"凌云县\" }, { value: \"451028\", label: \"乐业县\" }, { value: \"451029\", label: \"田林县\" }, { value: \"451030\", label: \"西林县\" }, { value: \"451031\", label: \"隆林各族自治县\" }, { value: \"451081\", label: \"靖西市\" }] }, { value: \"451100\", label: \"贺州市\", children: [{ value: \"451101\", label: \"市辖区\" }, { value: \"451102\", label: \"八步区\" }, { value: \"451103\", label: \"平桂区\" }, { value: \"451121\", label: \"昭平县\" }, { value: \"451122\", label: \"钟山县\" }, { value: \"451123\", label: \"富川瑶族自治县\" }] }, { value: \"451200\", label: \"河池市\", children: [{ value: \"451201\", label: \"市辖区\" }, { value: \"451202\", label: \"金城江区\" }, { value: \"451203\", label: \"宜州区\" }, { value: \"451221\", label: \"南丹县\" }, { value: \"451222\", label: \"天峨县\" }, { value: \"451223\", label: \"凤山县\" }, { value: \"451224\", label: \"东兰县\" }, { value: \"451225\", label: \"罗城仫佬族自治县\" }, { value: \"451226\", label: \"环江毛南族自治县\" }, { value: \"451227\", label: \"巴马瑶族自治县\" }, { value: \"451228\", label: \"都安瑶族自治县\" }, { value: \"451229\", label: \"大化瑶族自治县\" }] }, { value: \"451300\", label: \"来宾市\", children: [{ value: \"451301\", label: \"市辖区\" }, { value: \"451302\", label: \"兴宾区\" }, { value: \"451321\", label: \"忻城县\" }, { value: \"451322\", label: \"象州县\" }, { value: \"451323\", label: \"武宣县\" }, { value: \"451324\", label: \"金秀瑶族自治县\" }, { value: \"451381\", label: \"合山市\" }] }, { value: \"451400\", label: \"崇左市\", children: [{ value: \"451401\", label: \"市辖区\" }, { value: \"451402\", label: \"江州区\" }, { value: \"451421\", label: \"扶绥县\" }, { value: \"451422\", label: \"宁明县\" }, { value: \"451423\", label: \"龙州县\" }, { value: \"451424\", label: \"大新县\" }, { value: \"451425\", label: \"天等县\" }, { value: \"451481\", label: \"凭祥市\" }] }] }, { value: '460000', label: '海南省', children: [{ value: \"460100\", label: \"海口市\", children: [{ value: \"460101\", label: \"市辖区\" }, { value: \"460105\", label: \"秀英区\" }, { value: \"460106\", label: \"龙华区\" }, { value: \"460107\", label: \"琼山区\" }, { value: \"460108\", label: \"美兰区\" }] }, { value: \"460200\", label: \"三亚市\", children: [{ value: \"460201\", label: \"市辖区\" }, { value: \"460202\", label: \"海棠区\" }, { value: \"460203\", label: \"吉阳区\" }, { value: \"460204\", label: \"天涯区\" }, { value: \"460205\", label: \"崖州区\" }] }, { value: \"460300\", label: \"三沙市\", children: [{ value: \"460321\", label: \"西沙群岛\" }, { value: \"460322\", label: \"南沙群岛\" }, { value: \"460323\", label: \"中沙群岛的岛礁及其海域\" }] }, { value: \"460400\", label: \"儋州市\" }, { value: \"469000\", label: \"省直辖县级行政区划\", children: [{ value: \"469001\", label: \"五指山市\" }, { value: \"469002\", label: \"琼海市\" }, { value: \"469005\", label: \"文昌市\" }, { value: \"469006\", label: \"万宁市\" }, { value: \"469007\", label: \"东方市\" }, { value: \"469021\", label: \"定安县\" }, { value: \"469022\", label: \"屯昌县\" }, { value: \"469023\", label: \"澄迈县\" }, { value: \"469024\", label: \"临高县\" }, { value: \"469025\", label: \"白沙黎族自治县\" }, { value: \"469026\", label: \"昌江黎族自治县\" }, { value: \"469027\", label: \"乐东黎族自治县\" }, { value: \"469028\", label: \"陵水黎族自治县\" }, { value: \"469029\", label: \"保亭黎族苗族自治县\" }, { value: \"469030\", label: \"琼中黎族苗族自治县\" }] }] }, { value: '500000', label: '重庆', children: [{ value: \"500100\", label: \"市辖区\", children: [{ value: \"500101\", label: \"万州区\" }, { value: \"500102\", label: \"涪陵区\" }, { value: \"500103\", label: \"渝中区\" }, { value: \"500104\", label: \"大渡口区\" }, { value: \"500105\", label: \"江北区\" }, { value: \"500106\", label: \"沙坪坝区\" }, { value: \"500107\", label: \"九龙坡区\" }, { value: \"500108\", label: \"南岸区\" }, { value: \"500109\", label: \"北碚区\" }, { value: \"500110\", label: \"綦江区\" }, { value: \"500111\", label: \"大足区\" }, { value: \"500112\", label: \"渝北区\" }, { value: \"500113\", label: \"巴南区\" }, { value: \"500114\", label: \"黔江区\" }, { value: \"500115\", label: \"长寿区\" }, { value: \"500116\", label: \"江津区\" }, { value: \"500117\", label: \"合川区\" }, { value: \"500118\", label: \"永川区\" }, { value: \"500119\", label: \"南川区\" }, { value: \"500120\", label: \"璧山区\" }, { value: \"500151\", label: \"铜梁区\" }, { value: \"500152\", label: \"潼南区\" }, { value: \"500153\", label: \"荣昌区\" }, { value: \"500154\", label: \"开州区\" }, { value: \"500155\", label: \"梁平区\" }, { value: \"500156\", label: \"武隆区\" }] }, { value: \"500200\", label: \"县\", children: [{ value: \"500229\", label: \"城口县\" }, { value: \"500230\", label: \"丰都县\" }, { value: \"500231\", label: \"垫江县\" }, { value: \"500233\", label: \"忠县\" }, { value: \"500235\", label: \"云阳县\" }, { value: \"500236\", label: \"奉节县\" }, { value: \"500237\", label: \"巫山县\" }, { value: \"500238\", label: \"巫溪县\" }, { value: \"500240\", label: \"石柱土家族自治县\" }, { value: \"500241\", label: \"秀山土家族苗族自治县\" }, { value: \"500242\", label: \"酉阳土家族苗族自治县\" }, { value: \"500243\", label: \"彭水苗族土家族自治县\" }] }] }, { value: '510000', label: '四川省', children: [{ value: \"510100\", label: \"成都市\", children: [{ value: \"510101\", label: \"市辖区\" }, { value: \"510104\", label: \"锦江区\" }, { value: \"510105\", label: \"青羊区\" }, { value: \"510106\", label: \"金牛区\" }, { value: \"510107\", label: \"武侯区\" }, { value: \"510108\", label: \"成华区\" }, { value: \"510112\", label: \"龙泉驿区\" }, { value: \"510113\", label: \"青白江区\" }, { value: \"510114\", label: \"新都区\" }, { value: \"510115\", label: \"温江区\" }, { value: \"510116\", label: \"双流区\" }, { value: \"510117\", label: \"郫都区\" }, { value: \"510121\", label: \"金堂县\" }, { value: \"510129\", label: \"大邑县\" }, { value: \"510131\", label: \"蒲江县\" }, { value: \"510132\", label: \"新津县\" }, { value: \"510181\", label: \"都江堰市\" }, { value: \"510182\", label: \"彭州市\" }, { value: \"510183\", label: \"邛崃市\" }, { value: \"510184\", label: \"崇州市\" }, { value: \"510185\", label: \"简阳市\" }] }, { value: \"510300\", label: \"自贡市\", children: [{ value: \"510301\", label: \"市辖区\" }, { value: \"510302\", label: \"自流井区\" }, { value: \"510303\", label: \"贡井区\" }, { value: \"510304\", label: \"大安区\" }, { value: \"510311\", label: \"沿滩区\" }, { value: \"510321\", label: \"荣县\" }, { value: \"510322\", label: \"富顺县\" }] }, { value: \"510400\", label: \"攀枝花市\", children: [{ value: \"510401\", label: \"市辖区\" }, { value: \"510402\", label: \"东区\" }, { value: \"510403\", label: \"西区\" }, { value: \"510411\", label: \"仁和区\" }, { value: \"510421\", label: \"米易县\" }, { value: \"510422\", label: \"盐边县\" }] }, { value: \"510500\", label: \"泸州市\", children: [{ value: \"510501\", label: \"市辖区\" }, { value: \"510502\", label: \"江阳区\" }, { value: \"510503\", label: \"纳溪区\" }, { value: \"510504\", label: \"龙马潭区\" }, { value: \"510521\", label: \"泸县\" }, { value: \"510522\", label: \"合江县\" }, { value: \"510524\", label: \"叙永县\" }, { value: \"510525\", label: \"古蔺县\" }] }, { value: \"510600\", label: \"德阳市\", children: [{ value: \"510601\", label: \"市辖区\" }, { value: \"510603\", label: \"旌阳区\" }, { value: \"510604\", label: \"罗江区\" }, { value: \"510623\", label: \"中江县\" }, { value: \"510681\", label: \"广汉市\" }, { value: \"510682\", label: \"什邡市\" }, { value: \"510683\", label: \"绵竹市\" }] }, { value: \"510700\", label: \"绵阳市\", children: [{ value: \"510701\", label: \"市辖区\" }, { value: \"510703\", label: \"涪城区\" }, { value: \"510704\", label: \"游仙区\" }, { value: \"510705\", label: \"安州区\" }, { value: \"510722\", label: \"三台县\" }, { value: \"510723\", label: \"盐亭县\" }, { value: \"510725\", label: \"梓潼县\" }, { value: \"510726\", label: \"北川羌族自治县\" }, { value: \"510727\", label: \"平武县\" }, { value: \"510781\", label: \"江油市\" }] }, { value: \"510800\", label: \"广元市\", children: [{ value: \"510801\", label: \"市辖区\" }, { value: \"510802\", label: \"利州区\" }, { value: \"510811\", label: \"昭化区\" }, { value: \"510812\", label: \"朝天区\" }, { value: \"510821\", label: \"旺苍县\" }, { value: \"510822\", label: \"青川县\" }, { value: \"510823\", label: \"剑阁县\" }, { value: \"510824\", label: \"苍溪县\" }] }, { value: \"510900\", label: \"遂宁市\", children: [{ value: \"510901\", label: \"市辖区\" }, { value: \"510903\", label: \"船山区\" }, { value: \"510904\", label: \"安居区\" }, { value: \"510921\", label: \"蓬溪县\" }, { value: \"510922\", label: \"射洪县\" }, { value: \"510923\", label: \"大英县\" }] }, { value: \"511000\", label: \"内江市\", children: [{ value: \"511001\", label: \"市辖区\" }, { value: \"511002\", label: \"市中区\" }, { value: \"511011\", label: \"东兴区\" }, { value: \"511024\", label: \"威远县\" }, { value: \"511025\", label: \"资中县\" }, { value: \"511071\", label: \"内江经济开发区\" }, { value: \"511083\", label: \"隆昌市\" }] }, { value: \"511100\", label: \"乐山市\", children: [{ value: \"511101\", label: \"市辖区\" }, { value: \"511102\", label: \"市中区\" }, { value: \"511111\", label: \"沙湾区\" }, { value: \"511112\", label: \"五通桥区\" }, { value: \"511113\", label: \"金口河区\" }, { value: \"511123\", label: \"犍为县\" }, { value: \"511124\", label: \"井研县\" }, { value: \"511126\", label: \"夹江县\" }, { value: \"511129\", label: \"沐川县\" }, { value: \"511132\", label: \"峨边彝族自治县\" }, { value: \"511133\", label: \"马边彝族自治县\" }, { value: \"511181\", label: \"峨眉山市\" }] }, { value: \"511300\", label: \"南充市\", children: [{ value: \"511301\", label: \"市辖区\" }, { value: \"511302\", label: \"顺庆区\" }, { value: \"511303\", label: \"高坪区\" }, { value: \"511304\", label: \"嘉陵区\" }, { value: \"511321\", label: \"南部县\" }, { value: \"511322\", label: \"营山县\" }, { value: \"511323\", label: \"蓬安县\" }, { value: \"511324\", label: \"仪陇县\" }, { value: \"511325\", label: \"西充县\" }, { value: \"511381\", label: \"阆中市\" }] }, { value: \"511400\", label: \"眉山市\", children: [{ value: \"511401\", label: \"市辖区\" }, { value: \"511402\", label: \"东坡区\" }, { value: \"511403\", label: \"彭山区\" }, { value: \"511421\", label: \"仁寿县\" }, { value: \"511423\", label: \"洪雅县\" }, { value: \"511424\", label: \"丹棱县\" }, { value: \"511425\", label: \"青神县\" }] }, { value: \"511500\", label: \"宜宾市\", children: [{ value: \"511501\", label: \"市辖区\" }, { value: \"511502\", label: \"翠屏区\" }, { value: \"511503\", label: \"南溪区\" }, { value: \"511521\", label: \"宜宾县\" }, { value: \"511523\", label: \"江安县\" }, { value: \"511524\", label: \"长宁县\" }, { value: \"511525\", label: \"高县\" }, { value: \"511526\", label: \"珙县\" }, { value: \"511527\", label: \"筠连县\" }, { value: \"511528\", label: \"兴文县\" }, { value: \"511529\", label: \"屏山县\" }] }, { value: \"511600\", label: \"广安市\", children: [{ value: \"511601\", label: \"市辖区\" }, { value: \"511602\", label: \"广安区\" }, { value: \"511603\", label: \"前锋区\" }, { value: \"511621\", label: \"岳池县\" }, { value: \"511622\", label: \"武胜县\" }, { value: \"511623\", label: \"邻水县\" }, { value: \"511681\", label: \"华蓥市\" }] }, { value: \"511700\", label: \"达州市\", children: [{ value: \"511701\", label: \"市辖区\" }, { value: \"511702\", label: \"通川区\" }, { value: \"511703\", label: \"达川区\" }, { value: \"511722\", label: \"宣汉县\" }, { value: \"511723\", label: \"开江县\" }, { value: \"511724\", label: \"大竹县\" }, { value: \"511725\", label: \"渠县\" }, { value: \"511771\", label: \"达州经济开发区\" }, { value: \"511781\", label: \"万源市\" }] }, { value: \"511800\", label: \"雅安市\", children: [{ value: \"511801\", label: \"市辖区\" }, { value: \"511802\", label: \"雨城区\" }, { value: \"511803\", label: \"名山区\" }, { value: \"511822\", label: \"荥经县\" }, { value: \"511823\", label: \"汉源县\" }, { value: \"511824\", label: \"石棉县\" }, { value: \"511825\", label: \"天全县\" }, { value: \"511826\", label: \"芦山县\" }, { value: \"511827\", label: \"宝兴县\" }] }, { value: \"511900\", label: \"巴中市\", children: [{ value: \"511901\", label: \"市辖区\" }, { value: \"511902\", label: \"巴州区\" }, { value: \"511903\", label: \"恩阳区\" }, { value: \"511921\", label: \"通江县\" }, { value: \"511922\", label: \"南江县\" }, { value: \"511923\", label: \"平昌县\" }, { value: \"511971\", label: \"巴中经济开发区\" }] }, { value: \"512000\", label: \"资阳市\", children: [{ value: \"512001\", label: \"市辖区\" }, { value: \"512002\", label: \"雁江区\" }, { value: \"512021\", label: \"安岳县\" }, { value: \"512022\", label: \"乐至县\" }] }, { value: \"513200\", label: \"阿坝藏族羌族自治州\", children: [{ value: \"513201\", label: \"马尔康市\" }, { value: \"513221\", label: \"汶川县\" }, { value: \"513222\", label: \"理县\" }, { value: \"513223\", label: \"茂县\" }, { value: \"513224\", label: \"松潘县\" }, { value: \"513225\", label: \"九寨沟县\" }, { value: \"513226\", label: \"金川县\" }, { value: \"513227\", label: \"小金县\" }, { value: \"513228\", label: \"黑水县\" }, { value: \"513230\", label: \"壤塘县\" }, { value: \"513231\", label: \"阿坝县\" }, { value: \"513232\", label: \"若尔盖县\" }, { value: \"513233\", label: \"红原县\" }] }, { value: \"513300\", label: \"甘孜藏族自治州\", children: [{ value: \"513301\", label: \"康定市\" }, { value: \"513322\", label: \"泸定县\" }, { value: \"513323\", label: \"丹巴县\" }, { value: \"513324\", label: \"九龙县\" }, { value: \"513325\", label: \"雅江县\" }, { value: \"513326\", label: \"道孚县\" }, { value: \"513327\", label: \"炉霍县\" }, { value: \"513328\", label: \"甘孜县\" }, { value: \"513329\", label: \"新龙县\" }, { value: \"513330\", label: \"德格县\" }, { value: \"513331\", label: \"白玉县\" }, { value: \"513332\", label: \"石渠县\" }, { value: \"513333\", label: \"色达县\" }, { value: \"513334\", label: \"理塘县\" }, { value: \"513335\", label: \"巴塘县\" }, { value: \"513336\", label: \"乡城县\" }, { value: \"513337\", label: \"稻城县\" }, { value: \"513338\", label: \"得荣县\" }] }, { value: \"513400\", label: \"凉山彝族自治州\", children: [{ value: \"513401\", label: \"西昌市\" }, { value: \"513422\", label: \"木里藏族自治县\" }, { value: \"513423\", label: \"盐源县\" }, { value: \"513424\", label: \"德昌县\" }, { value: \"513425\", label: \"会理县\" }, { value: \"513426\", label: \"会东县\" }, { value: \"513427\", label: \"宁南县\" }, { value: \"513428\", label: \"普格县\" }, { value: \"513429\", label: \"布拖县\" }, { value: \"513430\", label: \"金阳县\" }, { value: \"513431\", label: \"昭觉县\" }, { value: \"513432\", label: \"喜德县\" }, { value: \"513433\", label: \"冕宁县\" }, { value: \"513434\", label: \"越西县\" }, { value: \"513435\", label: \"甘洛县\" }, { value: \"513436\", label: \"美姑县\" }, { value: \"513437\", label: \"雷波县\" }] }] }, { value: '520000', label: '贵州省', children: [{ value: \"520100\", label: \"贵阳市\", children: [{ value: \"520101\", label: \"市辖区\" }, { value: \"520102\", label: \"南明区\" }, { value: \"520103\", label: \"云岩区\" }, { value: \"520111\", label: \"花溪区\" }, { value: \"520112\", label: \"乌当区\" }, { value: \"520113\", label: \"白云区\" }, { value: \"520115\", label: \"观山湖区\" }, { value: \"520121\", label: \"开阳县\" }, { value: \"520122\", label: \"息烽县\" }, { value: \"520123\", label: \"修文县\" }, { value: \"520181\", label: \"清镇市\" }] }, { value: \"520200\", label: \"六盘水市\", children: [{ value: \"520201\", label: \"钟山区\" }, { value: \"520203\", label: \"六枝特区\" }, { value: \"520221\", label: \"水城县\" }, { value: \"520281\", label: \"盘州市\" }] }, { value: \"520300\", label: \"遵义市\", children: [{ value: \"520301\", label: \"市辖区\" }, { value: \"520302\", label: \"红花岗区\" }, { value: \"520303\", label: \"汇川区\" }, { value: \"520304\", label: \"播州区\" }, { value: \"520322\", label: \"桐梓县\" }, { value: \"520323\", label: \"绥阳县\" }, { value: \"520324\", label: \"正安县\" }, { value: \"520325\", label: \"道真仡佬族苗族自治县\" }, { value: \"520326\", label: \"务川仡佬族苗族自治县\" }, { value: \"520327\", label: \"凤冈县\" }, { value: \"520328\", label: \"湄潭县\" }, { value: \"520329\", label: \"余庆县\" }, { value: \"520330\", label: \"习水县\" }, { value: \"520381\", label: \"赤水市\" }, { value: \"520382\", label: \"仁怀市\" }] }, { value: \"520400\", label: \"安顺市\", children: [{ value: \"520401\", label: \"市辖区\" }, { value: \"520402\", label: \"西秀区\" }, { value: \"520403\", label: \"平坝区\" }, { value: \"520422\", label: \"普定县\" }, { value: \"520423\", label: \"镇宁布依族苗族自治县\" }, { value: \"520424\", label: \"关岭布依族苗族自治县\" }, { value: \"520425\", label: \"紫云苗族布依族自治县\" }] }, { value: \"520500\", label: \"毕节市\", children: [{ value: \"520501\", label: \"市辖区\" }, { value: \"520502\", label: \"七星关区\" }, { value: \"520521\", label: \"大方县\" }, { value: \"520522\", label: \"黔西县\" }, { value: \"520523\", label: \"金沙县\" }, { value: \"520524\", label: \"织金县\" }, { value: \"520525\", label: \"纳雍县\" }, { value: \"520526\", label: \"威宁彝族回族苗族自治县\" }, { value: \"520527\", label: \"赫章县\" }] }, { value: \"520600\", label: \"铜仁市\", children: [{ value: \"520601\", label: \"市辖区\" }, { value: \"520602\", label: \"碧江区\" }, { value: \"520603\", label: \"万山区\" }, { value: \"520621\", label: \"江口县\" }, { value: \"520622\", label: \"玉屏侗族自治县\" }, { value: \"520623\", label: \"石阡县\" }, { value: \"520624\", label: \"思南县\" }, { value: \"520625\", label: \"印江土家族苗族自治县\" }, { value: \"520626\", label: \"德江县\" }, { value: \"520627\", label: \"沿河土家族自治县\" }, { value: \"520628\", label: \"松桃苗族自治县\" }] }, { value: \"522300\", label: \"黔西南布依族苗族自治州\", children: [{ value: \"522301\", label: \"兴义市\" }, { value: \"522322\", label: \"兴仁县\" }, { value: \"522323\", label: \"普安县\" }, { value: \"522324\", label: \"晴隆县\" }, { value: \"522325\", label: \"贞丰县\" }, { value: \"522326\", label: \"望谟县\" }, { value: \"522327\", label: \"册亨县\" }, { value: \"522328\", label: \"安龙县\" }] }, { value: \"522600\", label: \"黔东南苗族侗族自治州\", children: [{ value: \"522601\", label: \"凯里市\" }, { value: \"522622\", label: \"黄平县\" }, { value: \"522623\", label: \"施秉县\" }, { value: \"522624\", label: \"三穗县\" }, { value: \"522625\", label: \"镇远县\" }, { value: \"522626\", label: \"岑巩县\" }, { value: \"522627\", label: \"天柱县\" }, { value: \"522628\", label: \"锦屏县\" }, { value: \"522629\", label: \"剑河县\" }, { value: \"522630\", label: \"台江县\" }, { value: \"522631\", label: \"黎平县\" }, { value: \"522632\", label: \"榕江县\" }, { value: \"522633\", label: \"从江县\" }, { value: \"522634\", label: \"雷山县\" }, { value: \"522635\", label: \"麻江县\" }, { value: \"522636\", label: \"丹寨县\" }] }, { value: \"522700\", label: \"黔南布依族苗族自治州\", children: [{ value: \"522701\", label: \"都匀市\" }, { value: \"522702\", label: \"福泉市\" }, { value: \"522722\", label: \"荔波县\" }, { value: \"522723\", label: \"贵定县\" }, { value: \"522725\", label: \"瓮安县\" }, { value: \"522726\", label: \"独山县\" }, { value: \"522727\", label: \"平塘县\" }, { value: \"522728\", label: \"罗甸县\" }, { value: \"522729\", label: \"长顺县\" }, { value: \"522730\", label: \"龙里县\" }, { value: \"522731\", label: \"惠水县\" }, { value: \"522732\", label: \"三都水族自治县\" }] }] }, { value: '530000', label: '云南省', children: [{ value: \"530100\", label: \"昆明市\", children: [{ value: \"530101\", label: \"市辖区\" }, { value: \"530102\", label: \"五华区\" }, { value: \"530103\", label: \"盘龙区\" }, { value: \"530111\", label: \"官渡区\" }, { value: \"530112\", label: \"西山区\" }, { value: \"530113\", label: \"东川区\" }, { value: \"530114\", label: \"呈贡区\" }, { value: \"530115\", label: \"晋宁区\" }, { value: \"530124\", label: \"富民县\" }, { value: \"530125\", label: \"宜良县\" }, { value: \"530126\", label: \"石林彝族自治县\" }, { value: \"530127\", label: \"嵩明县\" }, { value: \"530128\", label: \"禄劝彝族苗族自治县\" }, { value: \"530129\", label: \"寻甸回族彝族自治县\" }, { value: \"530181\", label: \"安宁市\" }] }, { value: \"530300\", label: \"曲靖市\", children: [{ value: \"530301\", label: \"市辖区\" }, { value: \"530302\", label: \"麒麟区\" }, { value: \"530303\", label: \"沾益区\" }, { value: \"530321\", label: \"马龙县\" }, { value: \"530322\", label: \"陆良县\" }, { value: \"530323\", label: \"师宗县\" }, { value: \"530324\", label: \"罗平县\" }, { value: \"530325\", label: \"富源县\" }, { value: \"530326\", label: \"会泽县\" }, { value: \"530381\", label: \"宣威市\" }] }, { value: \"530400\", label: \"玉溪市\", children: [{ value: \"530401\", label: \"市辖区\" }, { value: \"530402\", label: \"红塔区\" }, { value: \"530403\", label: \"江川区\" }, { value: \"530422\", label: \"澄江县\" }, { value: \"530423\", label: \"通海县\" }, { value: \"530424\", label: \"华宁县\" }, { value: \"530425\", label: \"易门县\" }, { value: \"530426\", label: \"峨山彝族自治县\" }, { value: \"530427\", label: \"新平彝族傣族自治县\" }, { value: \"530428\", label: \"元江哈尼族彝族傣族自治县\" }] }, { value: \"530500\", label: \"保山市\", children: [{ value: \"530501\", label: \"市辖区\" }, { value: \"530502\", label: \"隆阳区\" }, { value: \"530521\", label: \"施甸县\" }, { value: \"530523\", label: \"龙陵县\" }, { value: \"530524\", label: \"昌宁县\" }, { value: \"530581\", label: \"腾冲市\" }] }, { value: \"530600\", label: \"昭通市\", children: [{ value: \"530601\", label: \"市辖区\" }, { value: \"530602\", label: \"昭阳区\" }, { value: \"530621\", label: \"鲁甸县\" }, { value: \"530622\", label: \"巧家县\" }, { value: \"530623\", label: \"盐津县\" }, { value: \"530624\", label: \"大关县\" }, { value: \"530625\", label: \"永善县\" }, { value: \"530626\", label: \"绥江县\" }, { value: \"530627\", label: \"镇雄县\" }, { value: \"530628\", label: \"彝良县\" }, { value: \"530629\", label: \"威信县\" }, { value: \"530630\", label: \"水富县\" }] }, { value: \"530700\", label: \"丽江市\", children: [{ value: \"530701\", label: \"市辖区\" }, { value: \"530702\", label: \"古城区\" }, { value: \"530721\", label: \"玉龙纳西族自治县\" }, { value: \"530722\", label: \"永胜县\" }, { value: \"530723\", label: \"华坪县\" }, { value: \"530724\", label: \"宁蒗彝族自治县\" }] }, { value: \"530800\", label: \"普洱市\", children: [{ value: \"530801\", label: \"市辖区\" }, { value: \"530802\", label: \"思茅区\" }, { value: \"530821\", label: \"宁洱哈尼族彝族自治县\" }, { value: \"530822\", label: \"墨江哈尼族自治县\" }, { value: \"530823\", label: \"景东彝族自治县\" }, { value: \"530824\", label: \"景谷傣族彝族自治县\" }, { value: \"530825\", label: \"镇沅彝族哈尼族拉祜族自治县\" }, { value: \"530826\", label: \"江城哈尼族彝族自治县\" }, { value: \"530827\", label: \"孟连傣族拉祜族佤族自治县\" }, { value: \"530828\", label: \"澜沧拉祜族自治县\" }, { value: \"530829\", label: \"西盟佤族自治县\" }] }, { value: \"530900\", label: \"临沧市\", children: [{ value: \"530901\", label: \"市辖区\" }, { value: \"530902\", label: \"临翔区\" }, { value: \"530921\", label: \"凤庆县\" }, { value: \"530922\", label: \"云县\" }, { value: \"530923\", label: \"永德县\" }, { value: \"530924\", label: \"镇康县\" }, { value: \"530925\", label: \"双江拉祜族佤族布朗族傣族自治县\" }, { value: \"530926\", label: \"耿马傣族佤族自治县\" }, { value: \"530927\", label: \"沧源佤族自治县\" }] }, { value: \"532300\", label: \"楚雄彝族自治州\", children: [{ value: \"532301\", label: \"楚雄市\" }, { value: \"532322\", label: \"双柏县\" }, { value: \"532323\", label: \"牟定县\" }, { value: \"532324\", label: \"南华县\" }, { value: \"532325\", label: \"姚安县\" }, { value: \"532326\", label: \"大姚县\" }, { value: \"532327\", label: \"永仁县\" }, { value: \"532328\", label: \"元谋县\" }, { value: \"532329\", label: \"武定县\" }, { value: \"532331\", label: \"禄丰县\" }] }, { value: \"532500\", label: \"红河哈尼族彝族自治州\", children: [{ value: \"532501\", label: \"个旧市\" }, { value: \"532502\", label: \"开远市\" }, { value: \"532503\", label: \"蒙自市\" }, { value: \"532504\", label: \"弥勒市\" }, { value: \"532523\", label: \"屏边苗族自治县\" }, { value: \"532524\", label: \"建水县\" }, { value: \"532525\", label: \"石屏县\" }, { value: \"532527\", label: \"泸西县\" }, { value: \"532528\", label: \"元阳县\" }, { value: \"532529\", label: \"红河县\" }, { value: \"532530\", label: \"金平苗族瑶族傣族自治县\" }, { value: \"532531\", label: \"绿春县\" }, { value: \"532532\", label: \"河口瑶族自治县\" }] }, { value: \"532600\", label: \"文山壮族苗族自治州\", children: [{ value: \"532601\", label: \"文山市\" }, { value: \"532622\", label: \"砚山县\" }, { value: \"532623\", label: \"西畴县\" }, { value: \"532624\", label: \"麻栗坡县\" }, { value: \"532625\", label: \"马关县\" }, { value: \"532626\", label: \"丘北县\" }, { value: \"532627\", label: \"广南县\" }, { value: \"532628\", label: \"富宁县\" }] }, { value: \"532800\", label: \"西双版纳傣族自治州\", children: [{ value: \"532801\", label: \"景洪市\" }, { value: \"532822\", label: \"勐海县\" }, { value: \"532823\", label: \"勐腊县\" }] }, { value: \"532900\", label: \"大理白族自治州\", children: [{ value: \"532901\", label: \"大理市\" }, { value: \"532922\", label: \"漾濞彝族自治县\" }, { value: \"532923\", label: \"祥云县\" }, { value: \"532924\", label: \"宾川县\" }, { value: \"532925\", label: \"弥渡县\" }, { value: \"532926\", label: \"南涧彝族自治县\" }, { value: \"532927\", label: \"巍山彝族回族自治县\" }, { value: \"532928\", label: \"永平县\" }, { value: \"532929\", label: \"云龙县\" }, { value: \"532930\", label: \"洱源县\" }, { value: \"532931\", label: \"剑川县\" }, { value: \"532932\", label: \"鹤庆县\" }] }, { value: \"533100\", label: \"德宏傣族景颇族自治州\", children: [{ value: \"533102\", label: \"瑞丽市\" }, { value: \"533103\", label: \"芒市\" }, { value: \"533122\", label: \"梁河县\" }, { value: \"533123\", label: \"盈江县\" }, { value: \"533124\", label: \"陇川县\" }] }, { value: \"533300\", label: \"怒江傈僳族自治州\", children: [{ value: \"533301\", label: \"泸水市\" }, { value: \"533323\", label: \"福贡县\" }, { value: \"533324\", label: \"贡山独龙族怒族自治县\" }, { value: \"533325\", label: \"兰坪白族普米族自治县\" }] }, { value: \"533400\", label: \"迪庆藏族自治州\", children: [{ value: \"533401\", label: \"香格里拉市\" }, { value: \"533422\", label: \"德钦县\" }, { value: \"533423\", label: \"维西傈僳族自治县\" }] }] }, { value: '540000', label: '西藏', children: [{ value: \"540100\", label: \"拉萨市\", children: [{ value: \"540101\", label: \"市辖区\" }, { value: \"540102\", label: \"城关区\" }, { value: \"540103\", label: \"堆龙德庆区\" }, { value: \"540121\", label: \"林周县\" }, { value: \"540122\", label: \"当雄县\" }, { value: \"540123\", label: \"尼木县\" }, { value: \"540124\", label: \"曲水县\" }, { value: \"540126\", label: \"达孜县\" }, { value: \"540127\", label: \"墨竹工卡县\" }, { value: \"540171\", label: \"格尔木藏青工业园区\" }, { value: \"540172\", label: \"拉萨经济技术开发区\" }, { value: \"540173\", label: \"西藏文化旅游创意园区\" }, { value: \"540174\", label: \"达孜工业园区\" }] }, { value: \"540200\", label: \"日喀则市\", children: [{ value: \"540202\", label: \"桑珠孜区\" }, { value: \"540221\", label: \"南木林县\" }, { value: \"540222\", label: \"江孜县\" }, { value: \"540223\", label: \"定日县\" }, { value: \"540224\", label: \"萨迦县\" }, { value: \"540225\", label: \"拉孜县\" }, { value: \"540226\", label: \"昂仁县\" }, { value: \"540227\", label: \"谢通门县\" }, { value: \"540228\", label: \"白朗县\" }, { value: \"540229\", label: \"仁布县\" }, { value: \"540230\", label: \"康马县\" }, { value: \"540231\", label: \"定结县\" }, { value: \"540232\", label: \"仲巴县\" }, { value: \"540233\", label: \"亚东县\" }, { value: \"540234\", label: \"吉隆县\" }, { value: \"540235\", label: \"聂拉木县\" }, { value: \"540236\", label: \"萨嘎县\" }, { value: \"540237\", label: \"岗巴县\" }] }, { value: \"540300\", label: \"昌都市\", children: [{ value: \"540302\", label: \"卡若区\" }, { value: \"540321\", label: \"江达县\" }, { value: \"540322\", label: \"贡觉县\" }, { value: \"540323\", label: \"类乌齐县\" }, { value: \"540324\", label: \"丁青县\" }, { value: \"540325\", label: \"察雅县\" }, { value: \"540326\", label: \"八宿县\" }, { value: \"540327\", label: \"左贡县\" }, { value: \"540328\", label: \"芒康县\" }, { value: \"540329\", label: \"洛隆县\" }, { value: \"540330\", label: \"边坝县\" }] }, { value: \"540400\", label: \"林芝市\", children: [{ value: \"540402\", label: \"巴宜区\" }, { value: \"540421\", label: \"工布江达县\" }, { value: \"540422\", label: \"米林县\" }, { value: \"540423\", label: \"墨脱县\" }, { value: \"540424\", label: \"波密县\" }, { value: \"540425\", label: \"察隅县\" }, { value: \"540426\", label: \"朗县\" }] }, { value: \"540500\", label: \"山南市\", children: [{ value: \"540501\", label: \"市辖区\" }, { value: \"540502\", label: \"乃东区\" }, { value: \"540521\", label: \"扎囊县\" }, { value: \"540522\", label: \"贡嘎县\" }, { value: \"540523\", label: \"桑日县\" }, { value: \"540524\", label: \"琼结县\" }, { value: \"540525\", label: \"曲松县\" }, { value: \"540526\", label: \"措美县\" }, { value: \"540527\", label: \"洛扎县\" }, { value: \"540528\", label: \"加查县\" }, { value: \"540529\", label: \"隆子县\" }, { value: \"540530\", label: \"错那县\" }, { value: \"540531\", label: \"浪卡子县\" }] }, { value: \"542400\", label: \"那曲地区\", children: [{ value: \"542421\", label: \"那曲县\" }, { value: \"542422\", label: \"嘉黎县\" }, { value: \"542423\", label: \"比如县\" }, { value: \"542424\", label: \"聂荣县\" }, { value: \"542425\", label: \"安多县\" }, { value: \"542426\", label: \"申扎县\" }, { value: \"542427\", label: \"索县\" }, { value: \"542428\", label: \"班戈县\" }, { value: \"542429\", label: \"巴青县\" }, { value: \"542430\", label: \"尼玛县\" }, { value: \"542431\", label: \"双湖县\" }] }, { value: \"542500\", label: \"阿里地区\", children: [{ value: \"542521\", label: \"普兰县\" }, { value: \"542522\", label: \"札达县\" }, { value: \"542523\", label: \"噶尔县\" }, { value: \"542524\", label: \"日土县\" }, { value: \"542525\", label: \"革吉县\" }, { value: \"542526\", label: \"改则县\" }, { value: \"542527\", label: \"措勤县\" }] }] }, { value: '610000', label: '陕西省', children: [{ value: \"610100\", label: \"西安市\", children: [{ value: \"610101\", label: \"市辖区\" }, { value: \"610102\", label: \"新城区\" }, { value: \"610103\", label: \"碑林区\" }, { value: \"610104\", label: \"莲湖区\" }, { value: \"610111\", label: \"灞桥区\" }, { value: \"610112\", label: \"未央区\" }, { value: \"610113\", label: \"雁塔区\" }, { value: \"610114\", label: \"阎良区\" }, { value: \"610115\", label: \"临潼区\" }, { value: \"610116\", label: \"长安区\" }, { value: \"610117\", label: \"高陵区\" }, { value: \"610118\", label: \"鄠邑区\" }, { value: \"610122\", label: \"蓝田县\" }, { value: \"610124\", label: \"周至县\" }] }, { value: \"610200\", label: \"铜川市\", children: [{ value: \"610201\", label: \"市辖区\" }, { value: \"610202\", label: \"王益区\" }, { value: \"610203\", label: \"印台区\" }, { value: \"610204\", label: \"耀州区\" }, { value: \"610222\", label: \"宜君县\" }] }, { value: \"610300\", label: \"宝鸡市\", children: [{ value: \"610301\", label: \"市辖区\" }, { value: \"610302\", label: \"渭滨区\" }, { value: \"610303\", label: \"金台区\" }, { value: \"610304\", label: \"陈仓区\" }, { value: \"610322\", label: \"凤翔县\" }, { value: \"610323\", label: \"岐山县\" }, { value: \"610324\", label: \"扶风县\" }, { value: \"610326\", label: \"眉县\" }, { value: \"610327\", label: \"陇县\" }, { value: \"610328\", label: \"千阳县\" }, { value: \"610329\", label: \"麟游县\" }, { value: \"610330\", label: \"凤县\" }, { value: \"610331\", label: \"太白县\" }] }, { value: \"610400\", label: \"咸阳市\", children: [{ value: \"610401\", label: \"市辖区\" }, { value: \"610402\", label: \"秦都区\" }, { value: \"610403\", label: \"杨陵区\" }, { value: \"610404\", label: \"渭城区\" }, { value: \"610422\", label: \"三原县\" }, { value: \"610423\", label: \"泾阳县\" }, { value: \"610424\", label: \"乾县\" }, { value: \"610425\", label: \"礼泉县\" }, { value: \"610426\", label: \"永寿县\" }, { value: \"610427\", label: \"彬县\" }, { value: \"610428\", label: \"长武县\" }, { value: \"610429\", label: \"旬邑县\" }, { value: \"610430\", label: \"淳化县\" }, { value: \"610431\", label: \"武功县\" }, { value: \"610481\", label: \"兴平市\" }] }, { value: \"610500\", label: \"渭南市\", children: [{ value: \"610501\", label: \"市辖区\" }, { value: \"610502\", label: \"临渭区\" }, { value: \"610503\", label: \"华州区\" }, { value: \"610522\", label: \"潼关县\" }, { value: \"610523\", label: \"大荔县\" }, { value: \"610524\", label: \"合阳县\" }, { value: \"610525\", label: \"澄城县\" }, { value: \"610526\", label: \"蒲城县\" }, { value: \"610527\", label: \"白水县\" }, { value: \"610528\", label: \"富平县\" }, { value: \"610581\", label: \"韩城市\" }, { value: \"610582\", label: \"华阴市\" }] }, { value: \"610600\", label: \"延安市\", children: [{ value: \"610601\", label: \"市辖区\" }, { value: \"610602\", label: \"宝塔区\" }, { value: \"610603\", label: \"安塞区\" }, { value: \"610621\", label: \"延长县\" }, { value: \"610622\", label: \"延川县\" }, { value: \"610623\", label: \"子长县\" }, { value: \"610625\", label: \"志丹县\" }, { value: \"610626\", label: \"吴起县\" }, { value: \"610627\", label: \"甘泉县\" }, { value: \"610628\", label: \"富县\" }, { value: \"610629\", label: \"洛川县\" }, { value: \"610630\", label: \"宜川县\" }, { value: \"610631\", label: \"黄龙县\" }, { value: \"610632\", label: \"黄陵县\" }] }, { value: \"610700\", label: \"汉中市\", children: [{ value: \"610701\", label: \"市辖区\" }, { value: \"610702\", label: \"汉台区\" }, { value: \"610703\", label: \"南郑区\" }, { value: \"610722\", label: \"城固县\" }, { value: \"610723\", label: \"洋县\" }, { value: \"610724\", label: \"西乡县\" }, { value: \"610725\", label: \"勉县\" }, { value: \"610726\", label: \"宁强县\" }, { value: \"610727\", label: \"略阳县\" }, { value: \"610728\", label: \"镇巴县\" }, { value: \"610729\", label: \"留坝县\" }, { value: \"610730\", label: \"佛坪县\" }] }, { value: \"610800\", label: \"榆林市\", children: [{ value: \"610801\", label: \"市辖区\" }, { value: \"610802\", label: \"榆阳区\" }, { value: \"610803\", label: \"横山区\" }, { value: \"610822\", label: \"府谷县\" }, { value: \"610824\", label: \"靖边县\" }, { value: \"610825\", label: \"定边县\" }, { value: \"610826\", label: \"绥德县\" }, { value: \"610827\", label: \"米脂县\" }, { value: \"610828\", label: \"佳县\" }, { value: \"610829\", label: \"吴堡县\" }, { value: \"610830\", label: \"清涧县\" }, { value: \"610831\", label: \"子洲县\" }, { value: \"610881\", label: \"神木市\" }] }, { value: \"610900\", label: \"安康市\", children: [{ value: \"610901\", label: \"市辖区\" }, { value: \"610902\", label: \"汉滨区\" }, { value: \"610921\", label: \"汉阴县\" }, { value: \"610922\", label: \"石泉县\" }, { value: \"610923\", label: \"宁陕县\" }, { value: \"610924\", label: \"紫阳县\" }, { value: \"610925\", label: \"岚皋县\" }, { value: \"610926\", label: \"平利县\" }, { value: \"610927\", label: \"镇坪县\" }, { value: \"610928\", label: \"旬阳县\" }, { value: \"610929\", label: \"白河县\" }] }, { value: \"611000\", label: \"商洛市\", children: [{ value: \"611001\", label: \"市辖区\" }, { value: \"611002\", label: \"商州区\" }, { value: \"611021\", label: \"洛南县\" }, { value: \"611022\", label: \"丹凤县\" }, { value: \"611023\", label: \"商南县\" }, { value: \"611024\", label: \"山阳县\" }, { value: \"611025\", label: \"镇安县\" }, { value: \"611026\", label: \"柞水县\" }] }] }, { value: '620000', label: '甘肃省', children: [{ value: \"620100\", label: \"兰州市\", children: [{ value: \"620101\", label: \"市辖区\" }, { value: \"620102\", label: \"城关区\" }, { value: \"620103\", label: \"七里河区\" }, { value: \"620104\", label: \"西固区\" }, { value: \"620105\", label: \"安宁区\" }, { value: \"620111\", label: \"红古区\" }, { value: \"620121\", label: \"永登县\" }, { value: \"620122\", label: \"皋兰县\" }, { value: \"620123\", label: \"榆中县\" }, { value: \"620171\", label: \"兰州新区\" }] }, { value: \"620200\", label: \"嘉峪关市\", children: [{ value: \"620201\", label: \"市辖区\" }] }, { value: \"620300\", label: \"金昌市\", children: [{ value: \"620301\", label: \"市辖区\" }, { value: \"620302\", label: \"金川区\" }, { value: \"620321\", label: \"永昌县\" }] }, { value: \"620400\", label: \"白银市\", children: [{ value: \"620401\", label: \"市辖区\" }, { value: \"620402\", label: \"白银区\" }, { value: \"620403\", label: \"平川区\" }, { value: \"620421\", label: \"靖远县\" }, { value: \"620422\", label: \"会宁县\" }, { value: \"620423\", label: \"景泰县\" }] }, { value: \"620500\", label: \"天水市\", children: [{ value: \"620501\", label: \"市辖区\" }, { value: \"620502\", label: \"秦州区\" }, { value: \"620503\", label: \"麦积区\" }, { value: \"620521\", label: \"清水县\" }, { value: \"620522\", label: \"秦安县\" }, { value: \"620523\", label: \"甘谷县\" }, { value: \"620524\", label: \"武山县\" }, { value: \"620525\", label: \"张家川回族自治县\" }] }, { value: \"620600\", label: \"武威市\", children: [{ value: \"620601\", label: \"市辖区\" }, { value: \"620602\", label: \"凉州区\" }, { value: \"620621\", label: \"民勤县\" }, { value: \"620622\", label: \"古浪县\" }, { value: \"620623\", label: \"天祝藏族自治县\" }] }, { value: \"620700\", label: \"张掖市\", children: [{ value: \"620701\", label: \"市辖区\" }, { value: \"620702\", label: \"甘州区\" }, { value: \"620721\", label: \"肃南裕固族自治县\" }, { value: \"620722\", label: \"民乐县\" }, { value: \"620723\", label: \"临泽县\" }, { value: \"620724\", label: \"高台县\" }, { value: \"620725\", label: \"山丹县\" }] }, { value: \"620800\", label: \"平凉市\", children: [{ value: \"620801\", label: \"市辖区\" }, { value: \"620802\", label: \"崆峒区\" }, { value: \"620821\", label: \"泾川县\" }, { value: \"620822\", label: \"灵台县\" }, { value: \"620823\", label: \"崇信县\" }, { value: \"620824\", label: \"华亭县\" }, { value: \"620825\", label: \"庄浪县\" }, { value: \"620826\", label: \"静宁县\" }, { value: \"620871\", label: \"平凉工业园区\" }] }, { value: \"620900\", label: \"酒泉市\", children: [{ value: \"620901\", label: \"市辖区\" }, { value: \"620902\", label: \"肃州区\" }, { value: \"620921\", label: \"金塔县\" }, { value: \"620922\", label: \"瓜州县\" }, { value: \"620923\", label: \"肃北蒙古族自治县\" }, { value: \"620924\", label: \"阿克塞哈萨克族自治县\" }, { value: \"620981\", label: \"玉门市\" }, { value: \"620982\", label: \"敦煌市\" }] }, { value: \"621000\", label: \"庆阳市\", children: [{ value: \"621001\", label: \"市辖区\" }, { value: \"621002\", label: \"西峰区\" }, { value: \"621021\", label: \"庆城县\" }, { value: \"621022\", label: \"环县\" }, { value: \"621023\", label: \"华池县\" }, { value: \"621024\", label: \"合水县\" }, { value: \"621025\", label: \"正宁县\" }, { value: \"621026\", label: \"宁县\" }, { value: \"621027\", label: \"镇原县\" }] }, { value: \"621100\", label: \"定西市\", children: [{ value: \"621101\", label: \"市辖区\" }, { value: \"621102\", label: \"安定区\" }, { value: \"621121\", label: \"通渭县\" }, { value: \"621122\", label: \"陇西县\" }, { value: \"621123\", label: \"渭源县\" }, { value: \"621124\", label: \"临洮县\" }, { value: \"621125\", label: \"漳县\" }, { value: \"621126\", label: \"岷县\" }] }, { value: \"621200\", label: \"陇南市\", children: [{ value: \"621201\", label: \"市辖区\" }, { value: \"621202\", label: \"武都区\" }, { value: \"621221\", label: \"成县\" }, { value: \"621222\", label: \"文县\" }, { value: \"621223\", label: \"宕昌县\" }, { value: \"621224\", label: \"康县\" }, { value: \"621225\", label: \"西和县\" }, { value: \"621226\", label: \"礼县\" }, { value: \"621227\", label: \"徽县\" }, { value: \"621228\", label: \"两当县\" }] }, { value: \"622900\", label: \"临夏回族自治州\", children: [{ value: \"622901\", label: \"临夏市\" }, { value: \"622921\", label: \"临夏县\" }, { value: \"622922\", label: \"康乐县\" }, { value: \"622923\", label: \"永靖县\" }, { value: \"622924\", label: \"广河县\" }, { value: \"622925\", label: \"和政县\" }, { value: \"622926\", label: \"东乡族自治县\" }, { value: \"622927\", label: \"积石山保安族东乡族撒拉族自治县\" }] }, { value: \"623000\", label: \"甘南藏族自治州\", children: [{ value: \"623001\", label: \"合作市\" }, { value: \"623021\", label: \"临潭县\" }, { value: \"623022\", label: \"卓尼县\" }, { value: \"623023\", label: \"舟曲县\" }, { value: \"623024\", label: \"迭部县\" }, { value: \"623025\", label: \"玛曲县\" }, { value: \"623026\", label: \"碌曲县\" }, { value: \"623027\", label: \"夏河县\" }] }] }, { value: '630000', label: '青海省', children: [{ value: \"630100\", label: \"西宁市\", children: [{ value: \"630101\", label: \"市辖区\" }, { value: \"630102\", label: \"城东区\" }, { value: \"630103\", label: \"城中区\" }, { value: \"630104\", label: \"城西区\" }, { value: \"630105\", label: \"城北区\" }, { value: \"630121\", label: \"大通回族土族自治县\" }, { value: \"630122\", label: \"湟中县\" }, { value: \"630123\", label: \"湟源县\" }] }, { value: \"630200\", label: \"海东市\", children: [{ value: \"630202\", label: \"乐都区\" }, { value: \"630203\", label: \"平安区\" }, { value: \"630222\", label: \"民和回族土族自治县\" }, { value: \"630223\", label: \"互助土族自治县\" }, { value: \"630224\", label: \"化隆回族自治县\" }, { value: \"630225\", label: \"循化撒拉族自治县\" }] }, { value: \"632200\", label: \"海北藏族自治州\", children: [{ value: \"632221\", label: \"门源回族自治县\" }, { value: \"632222\", label: \"祁连县\" }, { value: \"632223\", label: \"海晏县\" }, { value: \"632224\", label: \"刚察县\" }] }, { value: \"632300\", label: \"黄南藏族自治州\", children: [{ value: \"632321\", label: \"同仁县\" }, { value: \"632322\", label: \"尖扎县\" }, { value: \"632323\", label: \"泽库县\" }, { value: \"632324\", label: \"河南蒙古族自治县\" }] }, { value: \"632500\", label: \"海南藏族自治州\", children: [{ value: \"632521\", label: \"共和县\" }, { value: \"632522\", label: \"同德县\" }, { value: \"632523\", label: \"贵德县\" }, { value: \"632524\", label: \"兴海县\" }, { value: \"632525\", label: \"贵南县\" }] }, { value: \"632600\", label: \"果洛藏族自治州\", children: [{ value: \"632621\", label: \"玛沁县\" }, { value: \"632622\", label: \"班玛县\" }, { value: \"632623\", label: \"甘德县\" }, { value: \"632624\", label: \"达日县\" }, { value: \"632625\", label: \"久治县\" }, { value: \"632626\", label: \"玛多县\" }] }, { value: \"632700\", label: \"玉树藏族自治州\", children: [{ value: \"632701\", label: \"玉树市\" }, { value: \"632722\", label: \"杂多县\" }, { value: \"632723\", label: \"称多县\" }, { value: \"632724\", label: \"治多县\" }, { value: \"632725\", label: \"囊谦县\" }, { value: \"632726\", label: \"曲麻莱县\" }] }, { value: \"632800\", label: \"海西蒙古族藏族自治州\", children: [{ value: \"632801\", label: \"格尔木市\" }, { value: \"632802\", label: \"德令哈市\" }, { value: \"632821\", label: \"乌兰县\" }, { value: \"632822\", label: \"都兰县\" }, { value: \"632823\", label: \"天峻县\" }, { value: \"632857\", label: \"大柴旦行政委员会\" }, { value: \"632858\", label: \"冷湖行政委员会\" }, { value: \"632859\", label: \"茫崖行政委员会\" }] }] }, { value: '640000', label: '宁夏', children: [{ value: \"640100\", label: \"银川市\", children: [{ value: \"640101\", label: \"市辖区\" }, { value: \"640104\", label: \"兴庆区\" }, { value: \"640105\", label: \"西夏区\" }, { value: \"640106\", label: \"金凤区\" }, { value: \"640121\", label: \"永宁县\" }, { value: \"640122\", label: \"贺兰县\" }, { value: \"640181\", label: \"灵武市\" }] }, { value: \"640200\", label: \"石嘴山市\", children: [{ value: \"640201\", label: \"市辖区\" }, { value: \"640202\", label: \"大武口区\" }, { value: \"640205\", label: \"惠农区\" }, { value: \"640221\", label: \"平罗县\" }] }, { value: \"640300\", label: \"吴忠市\", children: [{ value: \"640301\", label: \"市辖区\" }, { value: \"640302\", label: \"利通区\" }, { value: \"640303\", label: \"红寺堡区\" }, { value: \"640323\", label: \"盐池县\" }, { value: \"640324\", label: \"同心县\" }, { value: \"640381\", label: \"青铜峡市\" }] }, { value: \"640400\", label: \"固原市\", children: [{ value: \"640401\", label: \"市辖区\" }, { value: \"640402\", label: \"原州区\" }, { value: \"640422\", label: \"西吉县\" }, { value: \"640423\", label: \"隆德县\" }, { value: \"640424\", label: \"泾源县\" }, { value: \"640425\", label: \"彭阳县\" }] }, { value: \"640500\", label: \"中卫市\", children: [{ value: \"640501\", label: \"市辖区\" }, { value: \"640502\", label: \"沙坡头区\" }, { value: \"640521\", label: \"中宁县\" }, { value: \"640522\", label: \"海原县\" }] }] }, { value: '650000', label: '新疆', children: [{ value: \"650100\", label: \"乌鲁木齐市\", children: [{ value: \"650101\", label: \"市辖区\" }, { value: \"650102\", label: \"天山区\" }, { value: \"650103\", label: \"沙依巴克区\" }, { value: \"650104\", label: \"新市区\" }, { value: \"650105\", label: \"水磨沟区\" }, { value: \"650106\", label: \"头屯河区\" }, { value: \"650107\", label: \"达坂城区\" }, { value: \"650109\", label: \"米东区\" }, { value: \"650121\", label: \"乌鲁木齐县\" }, { value: \"650171\", label: \"乌鲁木齐经济技术开发区\" }, { value: \"650172\", label: \"乌鲁木齐高新技术产业开发区\" }] }, { value: \"650200\", label: \"克拉玛依市\", children: [{ value: \"650201\", label: \"市辖区\" }, { value: \"650202\", label: \"独山子区\" }, { value: \"650203\", label: \"克拉玛依区\" }, { value: \"650204\", label: \"白碱滩区\" }, { value: \"650205\", label: \"乌尔禾区\" }] }, { value: \"650400\", label: \"吐鲁番市\", children: [{ value: \"650402\", label: \"高昌区\" }, { value: \"650421\", label: \"鄯善县\" }, { value: \"650422\", label: \"托克逊县\" }] }, { value: \"650500\", label: \"哈密市\", children: [{ value: \"650502\", label: \"伊州区\" }, { value: \"650521\", label: \"巴里坤哈萨克自治县\" }, { value: \"650522\", label: \"伊吾县\" }] }, { value: \"652300\", label: \"昌吉回族自治州\", children: [{ value: \"652301\", label: \"昌吉市\" }, { value: \"652302\", label: \"阜康市\" }, { value: \"652323\", label: \"呼图壁县\" }, { value: \"652324\", label: \"玛纳斯县\" }, { value: \"652325\", label: \"奇台县\" }, { value: \"652327\", label: \"吉木萨尔县\" }, { value: \"652328\", label: \"木垒哈萨克自治县\" }] }, { value: \"652700\", label: \"博尔塔拉蒙古自治州\", children: [{ value: \"652701\", label: \"博乐市\" }, { value: \"652702\", label: \"阿拉山口市\" }, { value: \"652722\", label: \"精河县\" }, { value: \"652723\", label: \"温泉县\" }] }, { value: \"652800\", label: \"巴音郭楞蒙古自治州\", children: [{ value: \"652801\", label: \"库尔勒市\" }, { value: \"652822\", label: \"轮台县\" }, { value: \"652823\", label: \"尉犁县\" }, { value: \"652824\", label: \"若羌县\" }, { value: \"652825\", label: \"且末县\" }, { value: \"652826\", label: \"焉耆回族自治县\" }, { value: \"652827\", label: \"和静县\" }, { value: \"652828\", label: \"和硕县\" }, { value: \"652829\", label: \"博湖县\" }, { value: \"652871\", label: \"库尔勒经济技术开发区\" }] }, { value: \"652900\", label: \"阿克苏地区\", children: [{ value: \"652901\", label: \"阿克苏市\" }, { value: \"652922\", label: \"温宿县\" }, { value: \"652923\", label: \"库车县\" }, { value: \"652924\", label: \"沙雅县\" }, { value: \"652925\", label: \"新和县\" }, { value: \"652926\", label: \"拜城县\" }, { value: \"652927\", label: \"乌什县\" }, { value: \"652928\", label: \"阿瓦提县\" }, { value: \"652929\", label: \"柯坪县\" }] }, { value: \"653000\", label: \"克孜勒苏柯尔克孜自治州\", children: [{ value: \"653001\", label: \"阿图什市\" }, { value: \"653022\", label: \"阿克陶县\" }, { value: \"653023\", label: \"阿合奇县\" }, { value: \"653024\", label: \"乌恰县\" }] }, { value: \"653100\", label: \"喀什地区\", children: [{ value: \"653101\", label: \"喀什市\" }, { value: \"653121\", label: \"疏附县\" }, { value: \"653122\", label: \"疏勒县\" }, { value: \"653123\", label: \"英吉沙县\" }, { value: \"653124\", label: \"泽普县\" }, { value: \"653125\", label: \"莎车县\" }, { value: \"653126\", label: \"叶城县\" }, { value: \"653127\", label: \"麦盖提县\" }, { value: \"653128\", label: \"岳普湖县\" }, { value: \"653129\", label: \"伽师县\" }, { value: \"653130\", label: \"巴楚县\" }, { value: \"653131\", label: \"塔什库尔干塔吉克自治县\" }] }, { value: \"653200\", label: \"和田地区\", children: [{ value: \"653201\", label: \"和田市\" }, { value: \"653221\", label: \"和田县\" }, { value: \"653222\", label: \"墨玉县\" }, { value: \"653223\", label: \"皮山县\" }, { value: \"653224\", label: \"洛浦县\" }, { value: \"653225\", label: \"策勒县\" }, { value: \"653226\", label: \"于田县\" }, { value: \"653227\", label: \"民丰县\" }] }, { value: \"654000\", label: \"伊犁哈萨克自治州\", children: [{ value: \"654002\", label: \"伊宁市\" }, { value: \"654003\", label: \"奎屯市\" }, { value: \"654004\", label: \"霍尔果斯市\" }, { value: \"654021\", label: \"伊宁县\" }, { value: \"654022\", label: \"察布查尔锡伯自治县\" }, { value: \"654023\", label: \"霍城县\" }, { value: \"654024\", label: \"巩留县\" }, { value: \"654025\", label: \"新源县\" }, { value: \"654026\", label: \"昭苏县\" }, { value: \"654027\", label: \"特克斯县\" }, { value: \"654028\", label: \"尼勒克县\" }] }, { value: \"654200\", label: \"塔城地区\", children: [{ value: \"654201\", label: \"塔城市\" }, { value: \"654202\", label: \"乌苏市\" }, { value: \"654221\", label: \"额敏县\" }, { value: \"654223\", label: \"沙湾县\" }, { value: \"654224\", label: \"托里县\" }, { value: \"654225\", label: \"裕民县\" }, { value: \"654226\", label: \"和布克赛尔蒙古自治县\" }] }, { value: \"654300\", label: \"阿勒泰地区\", children: [{ value: \"654301\", label: \"阿勒泰市\" }, { value: \"654321\", label: \"布尔津县\" }, { value: \"654322\", label: \"富蕴县\" }, { value: \"654323\", label: \"福海县\" }, { value: \"654324\", label: \"哈巴河县\" }, { value: \"654325\", label: \"青河县\" }, { value: \"654326\", label: \"吉木乃县\" }] }, { value: \"659000\", label: \"自治区直辖县级行政区划\", children: [{ value: \"659001\", label: \"石河子市\" }, { value: \"659002\", label: \"阿拉尔市\" }, { value: \"659003\", label: \"图木舒克市\" }, { value: \"659004\", label: \"五家渠市\" }, { value: \"659006\", label: \"铁门关市\" }] }] }, { value: '660000', label: '台湾省', children: [{ value: \"660100\", label: \"台北市\", children: [{ value: \"660101\", label: \"中正区\" }, { value: \"660102\", label: \"大同区\" }, { value: \"660103\", label: \"中山区\" }, { value: \"660104\", label: \"松山区\" }, { value: \"660105\", label: \"大安区\" }, { value: \"660106\", label: \"万华区\" }, { value: \"660107\", label: \"信义区\" }, { value: \"660108\", label: \"士林区\" }, { value: \"660109\", label: \"北投区\" }, { value: \"660110\", label: \"内湖区\" }, { value: \"660111\", label: \"南港区\" }, { value: \"660112\", label: \"文山区\" }] }, { value: \"660200\", label: \"高雄市\", children: [{ value: \"660201\", label: \"新兴区\" }, { value: \"660202\", label: \"前金区\" }, { value: \"660203\", label: \"芩雅区\" }, { value: \"660204\", label: \"盐埕区\" }, { value: \"660205\", label: \"鼓山区\" }, { value: \"660206\", label: \"旗津区\" }, { value: \"660207\", label: \"前镇区\" }, { value: \"660208\", label: \"三民区\" }, { value: \"660209\", label: \"左营区\" }, { value: \"660210\", label: \"楠梓区\" }, { value: \"660211\", label: \"小港区\" }] }, { value: \"660300\", label: \"台南市\", children: [{ value: \"660301\", label: \"中西区\" }, { value: \"660302\", label: \"东区\" }, { value: \"660303\", label: \"南区\" }, { value: \"660304\", label: \"北区\" }, { value: \"660305\", label: \"安平区\" }, { value: \"660306\", label: \"安南区\" }] }, { value: \"660400\", label: \"台中市\", children: [{ value: \"660401\", label: \"中区\" }, { value: \"660402\", label: \"东区\" }, { value: \"660403\", label: \"南区\" }, { value: \"660404\", label: \"西区\" }, { value: \"660405\", label: \"北区\" }, { value: \"660406\", label: \"北屯区\" }, { value: \"660407\", label: \"西屯区\" }, { value: \"660408\", label: \"南屯区\" }] }, { value: \"660500\", label: \"金门县\", children: [{ value: \"660501\", label: \"金门县\" }] }, { value: \"660600\", label: \"南投县\", children: [{ value: \"660601\", label: \"南投县\" }] }, { value: \"660700\", label: \"基隆市\", children: [{ value: \"660701\", label: \"仁爱区\" }, { value: \"660702\", label: \"信义区\" }, { value: \"660703\", label: \"中正区\" }, { value: \"660704\", label: \"中山区\" }, { value: \"660705\", label: \"安乐区\" }, { value: \"660706\", label: \"暖暖区\" }, { value: \"660707\", label: \"七堵区\" }] }, { value: \"660800\", label: \"新竹市\", children: [{ value: \"660801\", label: \"东区\" }, { value: \"660802\", label: \"北区\" }, { value: \"660803\", label: \"香山区\" }] }, { value: \"660900\", label: \"嘉义市\", children: [{ value: \"660901\", label: \"东区\" }, { value: \"660902\", label: \"西区\" }] }, { value: \"661000\", label: \"新北市\", children: [{ value: \"661001\", label: \"新北市\" }] }, { value: \"661100\", label: \"宜兰县\", children: [{ value: \"661100\", label: \"宜兰县\" }] }, { value: \"661200\", label: \"新竹县\", children: [{ value: \"661201\", label: \"新竹县\" }] }, { value: \"661300\", label: \"桃园县\", children: [{ value: \"661301\", label: \"桃园县\" }] }, { value: \"661400\", label: \"苗栗县\", children: [{ value: \"661401\", label: \"苗栗县\" }] }, { value: \"661500\", label: \"彰化县\", children: [{ value: \"661501\", label: \"彰化县\" }] }, { value: \"661600\", label: \"嘉义县\", children: [{ value: \"661601\", label: \"嘉义县\" }] }, { value: \"661700\", label: \"云林县\", children: [{ value: \"661701\", label: \"云林县\" }] }, { value: \"661800\", label: \"屏东县\", children: [{ value: \"661801\", label: \"屏东县\" }] }, { value: \"661900\", label: \"台东县\", children: [{ value: \"661901\", label: \"台东县\" }] }, { value: \"662000\", label: \"花莲县\", children: [{ value: \"662001\", label: \"花莲县\" }] }, { value: \"662100\", label: \"澎湖县\", children: [{ value: \"662101\", label: \"澎湖县\" }] }] }, { value: '670000', label: '香港', children: [{ value: \"670100\", label: \"香港岛\", children: [{ value: \"670101\", label: \"中西区\" }, { value: \"670102\", label: \"湾仔区\" }, { value: \"670103\", label: \"东区\" }, { value: \"670104\", label: \"南区\" }] }, { value: \"670200\", label: \"九龙半岛\", children: [{ value: \"670201\", label: \"九龙城区\" }, { value: \"670202\", label: \"油尖旺区\" }, { value: \"670203\", label: \"深水埗区\" }, { value: \"670204\", label: \"黄大仙区\" }, { value: \"670205\", label: \"观塘区\" }] }, { value: \"670300\", label: \"新界\", children: [{ value: \"670301\", label: \"北区\" }, { value: \"670302\", label: \"大埔区\" }, { value: \"670303\", label: \"沙田区\" }, { value: \"670304\", label: \"西贡区\" }, { value: \"670305\", label: \"元朗区\" }, { value: \"670306\", label: \"屯门区\" }, { value: \"670307\", label: \"荃湾区\" }, { value: \"670308\", label: \"葵青区\" }, { value: \"670309\", label: \"离岛区\" }] }] }, { value: '680000', label: '澳门', children: [{ value: \"680100\", label: \"澳门半岛\", children: [{ value: \"680101\", label: \"花地玛堂区\" }, { value: \"680102\", label: \"圣安多尼堂区\" }, { value: \"680103\", label: \"大堂区\" }, { value: \"680104\", label: \"望德堂区\" }, { value: \"680105\", label: \"风顺堂区\" }] }, { value: \"680200\", label: \"离岛\", children: [{ value: \"680201\", label: \"嘉模堂区\" }, { value: \"680202\", label: \"圣方济各堂区\" }] }] }];var _default = cityData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///589\n");

/***/ }),

/***/ 6:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = {\"_from\":\"@dcloudio/uni-stat@next\",\"_id\":\"@dcloudio/uni-stat@2.0.0-26920200424005\",\"_inBundle\":false,\"_integrity\":\"sha512-FT8Z/C5xSmIxooqhV1v69jTkxATPz+FsRQIFOrbdlWekjGkrE73jfrdNMWm7gL5u41ALPJTVArxN1Re9by1bjQ==\",\"_location\":\"/@dcloudio/uni-stat\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"tag\",\"registry\":true,\"raw\":\"@dcloudio/uni-stat@next\",\"name\":\"@dcloudio/uni-stat\",\"escapedName\":\"@dcloudio%2funi-stat\",\"scope\":\"@dcloudio\",\"rawSpec\":\"next\",\"saveSpec\":null,\"fetchSpec\":\"next\"},\"_requiredBy\":[\"#USER\",\"/\",\"/@dcloudio/vue-cli-plugin-uni\"],\"_resolved\":\"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-26920200424005.tgz\",\"_shasum\":\"47f4375095eda3089cf4678b4b96fc656a7ab623\",\"_spec\":\"@dcloudio/uni-stat@next\",\"_where\":\"/Users/guoshengqiang/Documents/dcloud-plugins/release/uniapp-cli\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/dcloudio/uni-app/issues\"},\"bundleDependencies\":false,\"deprecated\":false,\"description\":\"\",\"devDependencies\":{\"@babel/core\":\"^7.5.5\",\"@babel/preset-env\":\"^7.5.5\",\"eslint\":\"^6.1.0\",\"rollup\":\"^1.19.3\",\"rollup-plugin-babel\":\"^4.3.3\",\"rollup-plugin-clear\":\"^2.0.7\",\"rollup-plugin-commonjs\":\"^10.0.2\",\"rollup-plugin-copy\":\"^3.1.0\",\"rollup-plugin-eslint\":\"^7.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.2.0\",\"rollup-plugin-replace\":\"^2.2.0\",\"rollup-plugin-uglify\":\"^6.0.2\"},\"files\":[\"dist\",\"package.json\",\"LICENSE\"],\"gitHead\":\"94494d54ed23e2dcf9ab8e3245b48b770b4e98a9\",\"homepage\":\"https://github.com/dcloudio/uni-app#readme\",\"license\":\"Apache-2.0\",\"main\":\"dist/index.js\",\"name\":\"@dcloudio/uni-stat\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dcloudio/uni-app.git\",\"directory\":\"packages/uni-stat\"},\"scripts\":{\"build\":\"NODE_ENV=production rollup -c rollup.config.js\",\"dev\":\"NODE_ENV=development rollup -w -c rollup.config.js\"},\"version\":\"2.0.0-26920200424005\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 7:
/*!**************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/pages.json?{"type":"style"} ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"pages\": { \"pages/index/index\": { \"navigationStyle\": \"custom\", \"disableScroll\": true, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/login\": { \"navigationStyle\": \"custom\" }, \"pages/forgetPsd\": { \"navigationBarTitleText\": \"忘记密码\" }, \"pages/zongci/zongci\": { \"navigationStyle\": \"custom\" }, \"pages/zongci/myZC\": { \"navigationBarTitleText\": \"我的宗祠\" }, \"pages/zongci/zongCiPeoList\": { \"navigationBarTitleText\": \"全部僧人\" }, \"pages/zongci/zongciInfo\": { \"navigationBarTitleText\": \"游子看看\" }, \"pages/template/search\": { \"navigationStyle\": \"custom\" }, \"pages/zongci/zongciList\": { \"navigationBarTitleText\": \"古庙宇\" }, \"pages/zongci/createZC\": { \"navigationBarTitleText\": \"申请入驻古庙宇\" }, \"pages/zongci/realAuth\": { \"navigationBarTitleText\": \"实名认证\" }, \"pages/zongci/newList\": { \"navigationBarTitleText\": \"寺庙资讯\" }, \"pages/zongci/zongciCreate\": { \"navigationBarTitleText\": \"寺庙建设\" }, \"pages/shanghui/shanghui\": { \"navigationStyle\": \"custom\" }, \"pages/shanghui/selectSH\": { \"navigationBarTitleText\": \"选择商会\" }, \"pages/shanghui/mySH\": { \"navigationStyle\": \"custom\" }, \"pages/shanghui/shanghuiList\": { \"navigationBarTitleText\": \"商会列表\" }, \"pages/shanghui/shanghuiInfo\": { \"navigationBarTitleText\": \"商会详情\" }, \"pages/shanghui/peopleList\": { \"navigationBarTitleText\": \"商会成员\" }, \"pages/shanghui/shanghuiJoin\": { \"navigationBarTitleText\": \"加入商会\" }, \"pages/shanghui/shanghuiSettled\": { \"navigationBarTitleText\": \"\" }, \"pages/shanghui/newsList\": { \"navigationBarTitleText\": \"商会资讯\" }, \"pages/my/my\": { \"navigationBarTitleText\": \"我的\", \"navigationStyle\": \"custom\" }, \"pages/my/infoList\": { \"navigationBarTitleText\": \"消息通知\" }, \"pages/my/myPrivate\": { \"navigationBarTitleText\": \"私信\" }, \"pages/my/myFans\": { \"navigationBarTitleText\": \"我的粉丝\" }, \"pages/my/myShouCang\": { \"navigationBarTitleText\": \"我的收藏\" }, \"pages/my/setting\": { \"navigationBarTitleText\": \"设置\" }, \"pages/my/security\": { \"navigationBarTitleText\": \"账号安全\" }, \"pages/my/editPsdOrPhone\": { \"navigationBarTitleText\": \"\" }, \"pages/my/editUserInfo\": { \"navigationBarTitleText\": \"个人资料\" }, \"pages/my/myFollow\": { \"navigationBarTitleText\": \"我的关注\" }, \"pages/my/userInfo\": { \"navigationBarTitleText\": \"\", \"navigationStyle\": \"custom\" }, \"pages/news/newsInfo\": { \"navigationBarTitleText\": \"\" }, \"pages/news/plInfo\": { \"navigationBarTitleText\": \"评论详情\" }, \"pages/vips/vipList\": { \"navigationBarTitleText\": \"会员管理\" }, \"pages/activity/activityList\": { \"navigationBarTitleText\": \"商会活动\" }, \"pages/activity/activityAdd\": { \"navigationBarTitleText\": \"发布活动\" }, \"pages/my/myActivity\": { \"navigationBarTitleText\": \"我的活动\" }, \"pages/activity/activityInfo\": { \"navigationBarTitleText\": \"活动详情\" }, \"pages/activity/activityJoin\": { \"navigationBarTitleText\": \"活动报名\" }, \"pages/news/addNew\": { \"navigationBarTitleText\": \"\", \"navigationStyle\": \"custom\" }, \"pages/template/choose-location\": { \"navigationBarTitleText\": \"选择地点\" } }, \"globalStyle\": { \"navigationBarTextStyle\": \"black\", \"navigationBarTitleText\": \"游子看看\", \"navigationBarBackgroundColor\": \"#ffffff\", \"backgroundColor\": \"#F8F8F8\", \"onReachBottomDistance\": 0 } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsRUFBQyxxQkFBb0IsRUFBQyxtQkFBa0IsUUFBbkIsRUFBNEIsaUJBQWdCLElBQTVDLEVBQWlELG1CQUFrQixFQUFuRSxFQUFzRSw2QkFBNEIsRUFBbEcsRUFBckIsRUFBMkgsZUFBYyxFQUFDLG1CQUFrQixRQUFuQixFQUF6SSxFQUFzSyxtQkFBa0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBeEwsRUFBME4sdUJBQXNCLEVBQUMsbUJBQWtCLFFBQW5CLEVBQWhQLEVBQTZRLHFCQUFvQixFQUFDLDBCQUF5QixNQUExQixFQUFqUyxFQUFtVSw4QkFBNkIsRUFBQywwQkFBeUIsTUFBMUIsRUFBaFcsRUFBa1ksMkJBQTBCLEVBQUMsMEJBQXlCLE1BQTFCLEVBQTVaLEVBQThiLHlCQUF3QixFQUFDLG1CQUFrQixRQUFuQixFQUF0ZCxFQUFtZiwyQkFBMEIsRUFBQywwQkFBeUIsS0FBMUIsRUFBN2dCLEVBQThpQix5QkFBd0IsRUFBQywwQkFBeUIsU0FBMUIsRUFBdGtCLEVBQTJtQix5QkFBd0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBbm9CLEVBQXFxQix3QkFBdUIsRUFBQywwQkFBeUIsTUFBMUIsRUFBNXJCLEVBQTh0Qiw2QkFBNEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBMXZCLEVBQTR4QiwyQkFBMEIsRUFBQyxtQkFBa0IsUUFBbkIsRUFBdHpCLEVBQW0xQiwyQkFBMEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBNzJCLEVBQSs0Qix1QkFBc0IsRUFBQyxtQkFBa0IsUUFBbkIsRUFBcjZCLEVBQWs4QiwrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBaCtCLEVBQWtnQywrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBaGlDLEVBQWtrQyw2QkFBNEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBOWxDLEVBQWdvQywrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBOXBDLEVBQWdzQyxrQ0FBaUMsRUFBQywwQkFBeUIsRUFBMUIsRUFBanVDLEVBQSt2QywyQkFBMEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBenhDLEVBQTJ6QyxlQUFjLEVBQUMsMEJBQXlCLElBQTFCLEVBQStCLG1CQUFrQixRQUFqRCxFQUF6MEMsRUFBbzRDLHFCQUFvQixFQUFDLDBCQUF5QixNQUExQixFQUF4NUMsRUFBMDdDLHNCQUFxQixFQUFDLDBCQUF5QixJQUExQixFQUEvOEMsRUFBKytDLG1CQUFrQixFQUFDLDBCQUF5QixNQUExQixFQUFqZ0QsRUFBbWlELHVCQUFzQixFQUFDLDBCQUF5QixNQUExQixFQUF6akQsRUFBMmxELG9CQUFtQixFQUFDLDBCQUF5QixJQUExQixFQUE5bUQsRUFBOG9ELHFCQUFvQixFQUFDLDBCQUF5QixNQUExQixFQUFscUQsRUFBb3NELDJCQUEwQixFQUFDLDBCQUF5QixFQUExQixFQUE5dEQsRUFBNHZELHlCQUF3QixFQUFDLDBCQUF5QixNQUExQixFQUFweEQsRUFBc3pELHFCQUFvQixFQUFDLDBCQUF5QixNQUExQixFQUExMEQsRUFBNDJELHFCQUFvQixFQUFDLDBCQUF5QixFQUExQixFQUE2QixtQkFBa0IsUUFBL0MsRUFBaDRELEVBQXk3RCx1QkFBc0IsRUFBQywwQkFBeUIsRUFBMUIsRUFBLzhELEVBQTYrRCxxQkFBb0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBamdFLEVBQW1pRSxzQkFBcUIsRUFBQywwQkFBeUIsTUFBMUIsRUFBeGpFLEVBQTBsRSwrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBeG5FLEVBQTBwRSw4QkFBNkIsRUFBQywwQkFBeUIsTUFBMUIsRUFBdnJFLEVBQXl0RSx1QkFBc0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBL3VFLEVBQWl4RSwrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBL3lFLEVBQWkxRSwrQkFBOEIsRUFBQywwQkFBeUIsTUFBMUIsRUFBLzJFLEVBQWk1RSxxQkFBb0IsRUFBQywwQkFBeUIsRUFBMUIsRUFBNkIsbUJBQWtCLFFBQS9DLEVBQXI2RSxFQUE4OUUsa0NBQWlDLEVBQUMsMEJBQXlCLE1BQTFCLEVBQS8vRSxFQUFULEVBQTJpRixlQUFjLEVBQUMsMEJBQXlCLE9BQTFCLEVBQWtDLDBCQUF5QixNQUEzRCxFQUFrRSxnQ0FBK0IsU0FBakcsRUFBMkcsbUJBQWtCLFNBQTdILEVBQXVJLHlCQUF3QixDQUEvSixFQUF6akYsRSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wicGFnZXNcIjp7XCJwYWdlcy9pbmRleC9pbmRleFwiOntcIm5hdmlnYXRpb25TdHlsZVwiOlwiY3VzdG9tXCIsXCJkaXNhYmxlU2Nyb2xsXCI6dHJ1ZSxcInVzaW5nQ29tcG9uZW50c1wiOnt9LFwidXNpbmdBdXRvSW1wb3J0Q29tcG9uZW50c1wiOnt9fSxcInBhZ2VzL2xvZ2luXCI6e1wibmF2aWdhdGlvblN0eWxlXCI6XCJjdXN0b21cIn0sXCJwYWdlcy9mb3JnZXRQc2RcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLlv5jorrDlr4bnoIFcIn0sXCJwYWdlcy96b25nY2kvem9uZ2NpXCI6e1wibmF2aWdhdGlvblN0eWxlXCI6XCJjdXN0b21cIn0sXCJwYWdlcy96b25nY2kvbXlaQ1wiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuaIkeeahOWul+eloFwifSxcInBhZ2VzL3pvbmdjaS96b25nQ2lQZW9MaXN0XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5YWo6YOo5YOn5Lq6XCJ9LFwicGFnZXMvem9uZ2NpL3pvbmdjaUluZm9cIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLmuLjlrZDnnIvnnItcIn0sXCJwYWdlcy90ZW1wbGF0ZS9zZWFyY2hcIjp7XCJuYXZpZ2F0aW9uU3R5bGVcIjpcImN1c3RvbVwifSxcInBhZ2VzL3pvbmdjaS96b25nY2lMaXN0XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5Y+k5bqZ5a6HXCJ9LFwicGFnZXMvem9uZ2NpL2NyZWF0ZVpDXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi55Sz6K+35YWl6am75Y+k5bqZ5a6HXCJ9LFwicGFnZXMvem9uZ2NpL3JlYWxBdXRoXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5a6e5ZCN6K6k6K+BXCJ9LFwicGFnZXMvem9uZ2NpL25ld0xpc3RcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLlr7rlupnotYTorq9cIn0sXCJwYWdlcy96b25nY2kvem9uZ2NpQ3JlYXRlXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5a+65bqZ5bu66K6+XCJ9LFwicGFnZXMvc2hhbmdodWkvc2hhbmdodWlcIjp7XCJuYXZpZ2F0aW9uU3R5bGVcIjpcImN1c3RvbVwifSxcInBhZ2VzL3NoYW5naHVpL3NlbGVjdFNIXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi6YCJ5oup5ZWG5LyaXCJ9LFwicGFnZXMvc2hhbmdodWkvbXlTSFwiOntcIm5hdmlnYXRpb25TdHlsZVwiOlwiY3VzdG9tXCJ9LFwicGFnZXMvc2hhbmdodWkvc2hhbmdodWlMaXN0XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5ZWG5Lya5YiX6KGoXCJ9LFwicGFnZXMvc2hhbmdodWkvc2hhbmdodWlJbmZvXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5ZWG5Lya6K+m5oOFXCJ9LFwicGFnZXMvc2hhbmdodWkvcGVvcGxlTGlzdFwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuWVhuS8muaIkOWRmFwifSxcInBhZ2VzL3NoYW5naHVpL3NoYW5naHVpSm9pblwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuWKoOWFpeWVhuS8mlwifSxcInBhZ2VzL3NoYW5naHVpL3NoYW5naHVpU2V0dGxlZFwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIlwifSxcInBhZ2VzL3NoYW5naHVpL25ld3NMaXN0XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5ZWG5Lya6LWE6K6vXCJ9LFwicGFnZXMvbXkvbXlcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLmiJHnmoRcIixcIm5hdmlnYXRpb25TdHlsZVwiOlwiY3VzdG9tXCJ9LFwicGFnZXMvbXkvaW5mb0xpc3RcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLmtojmga/pgJrnn6VcIn0sXCJwYWdlcy9teS9teVByaXZhdGVcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLnp4Hkv6FcIn0sXCJwYWdlcy9teS9teUZhbnNcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLmiJHnmoTnsonkuJ1cIn0sXCJwYWdlcy9teS9teVNob3VDYW5nXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5oiR55qE5pS26JePXCJ9LFwicGFnZXMvbXkvc2V0dGluZ1wiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuiuvue9rlwifSxcInBhZ2VzL215L3NlY3VyaXR5XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi6LSm5Y+35a6J5YWoXCJ9LFwicGFnZXMvbXkvZWRpdFBzZE9yUGhvbmVcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCJcIn0sXCJwYWdlcy9teS9lZGl0VXNlckluZm9cIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLkuKrkurrotYTmlplcIn0sXCJwYWdlcy9teS9teUZvbGxvd1wiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuaIkeeahOWFs+azqFwifSxcInBhZ2VzL215L3VzZXJJbmZvXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwiXCIsXCJuYXZpZ2F0aW9uU3R5bGVcIjpcImN1c3RvbVwifSxcInBhZ2VzL25ld3MvbmV3c0luZm9cIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCJcIn0sXCJwYWdlcy9uZXdzL3BsSW5mb1wiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuivhOiuuuivpuaDhVwifSxcInBhZ2VzL3ZpcHMvdmlwTGlzdFwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuS8muWRmOeuoeeQhlwifSxcInBhZ2VzL2FjdGl2aXR5L2FjdGl2aXR5TGlzdFwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuWVhuS8mua0u+WKqFwifSxcInBhZ2VzL2FjdGl2aXR5L2FjdGl2aXR5QWRkXCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwi5Y+R5biD5rS75YqoXCJ9LFwicGFnZXMvbXkvbXlBY3Rpdml0eVwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuaIkeeahOa0u+WKqFwifSxcInBhZ2VzL2FjdGl2aXR5L2FjdGl2aXR5SW5mb1wiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIua0u+WKqOivpuaDhVwifSxcInBhZ2VzL2FjdGl2aXR5L2FjdGl2aXR5Sm9pblwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIua0u+WKqOaKpeWQjVwifSxcInBhZ2VzL25ld3MvYWRkTmV3XCI6e1wibmF2aWdhdGlvbkJhclRpdGxlVGV4dFwiOlwiXCIsXCJuYXZpZ2F0aW9uU3R5bGVcIjpcImN1c3RvbVwifSxcInBhZ2VzL3RlbXBsYXRlL2Nob29zZS1sb2NhdGlvblwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIumAieaLqeWcsOeCuVwifX0sXCJnbG9iYWxTdHlsZVwiOntcIm5hdmlnYXRpb25CYXJUZXh0U3R5bGVcIjpcImJsYWNrXCIsXCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLmuLjlrZDnnIvnnItcIixcIm5hdmlnYXRpb25CYXJCYWNrZ3JvdW5kQ29sb3JcIjpcIiNmZmZmZmZcIixcImJhY2tncm91bmRDb2xvclwiOlwiI0Y4RjhGOFwiLFwib25SZWFjaEJvdHRvbURpc3RhbmNlXCI6MH19Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 8:
/*!*************************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/pages.json?{"type":"stat"} ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"appid\": \"__UNI__71CB864\" };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsZ0JBQVQsRSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wiYXBwaWRcIjpcIl9fVU5JX183MUNCODY0XCJ9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ }),

/***/ 9:
/*!*************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/store/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/regenerator */ 11));var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 14));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);}_next(undefined);});};}\n_vue.default.use(_vuex.default);\n\nvar store = new _vuex.default.Store({\n  state: {\n    userInfo: uni.getStorageSync('userInfo') },\n\n  mutations: {\n    setUserInfo: function setUserInfo(state, val) {\n      uni.setStorageSync(\"userInfo\", val);\n      state.userinfo = val;\n    },\n    login: function login(state, provider) {\n      state.hasLogin = true;\n      state.loginProvider = provider;\n    },\n    logout: function logout(state) {\n      state.hasLogin = false;\n      state.openid = null;\n    },\n    setOpenid: function setOpenid(state, openid) {\n      state.openid = openid;\n    } },\n\n  actions: {\n    // 用户信息\n    setUserInfoObj: function setUserInfoObj(context, val) {\n      context.commit('setUserInfo', val);\n    },\n    clearUserInfoObj: function clearUserInfoObj(context) {\n      context.commit('setUserInfo', {\n        \"image\": \"/static/images/icon/defLogo.png\" });\n\n    },\n    // lazy loading openid\n    getUserOpenId: function () {var _getUserOpenId = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {var commit, state;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                commit = _ref.commit,\n                state = _ref.state;_context.next = 3;return (\n\n                  new Promise(function (resolve, reject) {\n                    if (state.openid) {\n                      resolve(state.openid);\n                    } else {\n                      uni.login({\n                        success: function success(data) {\n                          commit('login');\n                          setTimeout(function () {//模拟异步请求服务器获取 openid\n                            var openid = '123456789';\n                            __f__(\"log\", 'uni.request mock openid[' + openid + ']', \" at store\\\\index.js:50\");\n                            commit('setOpenid', openid);\n                            resolve(openid);\n                          }, 1000);\n                        },\n                        fail: function fail(err) {\n                          __f__(\"log\", 'uni.login 接口调用失败，将无法正常使用开放接口等服务', err, \" at store\\\\index.js:56\");\n                          reject(err);\n                        } });\n\n                    }\n                  }));case 3:return _context.abrupt(\"return\", _context.sent);case 4:case \"end\":return _context.stop();}}}, _callee);}));function getUserOpenId(_x) {return _getUserOpenId.apply(this, arguments);}return getUserOpenId;}() },\n\n\n  getters: {} });var _default =\n\n\n\n\nstore;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvaW5kZXguanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiVnVleCIsInN0b3JlIiwiU3RvcmUiLCJzdGF0ZSIsInVzZXJJbmZvIiwidW5pIiwiZ2V0U3RvcmFnZVN5bmMiLCJtdXRhdGlvbnMiLCJzZXRVc2VySW5mbyIsInZhbCIsInNldFN0b3JhZ2VTeW5jIiwidXNlcmluZm8iLCJsb2dpbiIsInByb3ZpZGVyIiwiaGFzTG9naW4iLCJsb2dpblByb3ZpZGVyIiwibG9nb3V0Iiwib3BlbmlkIiwic2V0T3BlbmlkIiwiYWN0aW9ucyIsInNldFVzZXJJbmZvT2JqIiwiY29udGV4dCIsImNvbW1pdCIsImNsZWFyVXNlckluZm9PYmoiLCJnZXRVc2VyT3BlbklkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzdWNjZXNzIiwiZGF0YSIsInNldFRpbWVvdXQiLCJmYWlsIiwiZXJyIiwiZ2V0dGVycyJdLCJtYXBwaW5ncyI6ImdTQUFBO0FBQ0Esd0U7QUFDQUEsYUFBSUMsR0FBSixDQUFRQyxhQUFSOztBQUVBLElBQU1DLEtBQUssR0FBRyxJQUFJRCxjQUFLRSxLQUFULENBQWU7QUFDNUJDLE9BQUssRUFBRTtBQUNOQyxZQUFRLEVBQUVDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQixVQUFuQixDQURKLEVBRHFCOztBQUk1QkMsV0FBUyxFQUFFO0FBQ1ZDLGVBRFUsdUJBQ0dMLEtBREgsRUFDVU0sR0FEVixFQUNlO0FBQ3ZCSixTQUFHLENBQUNLLGNBQUosQ0FBbUIsVUFBbkIsRUFBK0JELEdBQS9CO0FBQ0ROLFdBQUssQ0FBQ1EsUUFBTixHQUFpQkYsR0FBakI7QUFDQSxLQUpTO0FBS1RHLFNBTFMsaUJBS0hULEtBTEcsRUFLSVUsUUFMSixFQUtjO0FBQ3RCVixXQUFLLENBQUNXLFFBQU4sR0FBaUIsSUFBakI7QUFDQVgsV0FBSyxDQUFDWSxhQUFOLEdBQXNCRixRQUF0QjtBQUNBLEtBUlE7QUFTVEcsVUFUUyxrQkFTRmIsS0FURSxFQVNLO0FBQ2JBLFdBQUssQ0FBQ1csUUFBTixHQUFpQixLQUFqQjtBQUNBWCxXQUFLLENBQUNjLE1BQU4sR0FBZSxJQUFmO0FBQ0EsS0FaUTtBQWFUQyxhQWJTLHFCQWFDZixLQWJELEVBYVFjLE1BYlIsRUFhZ0I7QUFDeEJkLFdBQUssQ0FBQ2MsTUFBTixHQUFlQSxNQUFmO0FBQ0EsS0FmUSxFQUppQjs7QUFxQjVCRSxTQUFPLEVBQUU7QUFDUjtBQUNBQyxrQkFGUSwwQkFFUUMsT0FGUixFQUVpQlosR0FGakIsRUFFc0I7QUFDN0JZLGFBQU8sQ0FBQ0MsTUFBUixDQUFlLGFBQWYsRUFBOEJiLEdBQTlCO0FBQ0EsS0FKTztBQUtSYyxvQkFMUSw0QkFLVUYsT0FMVixFQUttQjtBQUMxQkEsYUFBTyxDQUFDQyxNQUFSLENBQWUsYUFBZixFQUE2QjtBQUM1QixpQkFBUSxpQ0FEb0IsRUFBN0I7O0FBR0EsS0FUTztBQVVSO0FBQ0FFLGlCQUFhLDhGQUFFO0FBQ2RGLHNCQURjLFFBQ2RBLE1BRGM7QUFFZG5CLHFCQUZjLFFBRWRBLEtBRmM7O0FBSUQsc0JBQUlzQixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQzdDLHdCQUFJeEIsS0FBSyxDQUFDYyxNQUFWLEVBQWtCO0FBQ2pCUyw2QkFBTyxDQUFDdkIsS0FBSyxDQUFDYyxNQUFQLENBQVA7QUFDQSxxQkFGRCxNQUVPO0FBQ05aLHlCQUFHLENBQUNPLEtBQUosQ0FBVTtBQUNUZ0IsK0JBQU8sRUFBRSxpQkFBQ0MsSUFBRCxFQUFVO0FBQ2xCUCxnQ0FBTSxDQUFDLE9BQUQsQ0FBTjtBQUNBUSxvQ0FBVSxDQUFDLFlBQVksQ0FBRTtBQUN4QixnQ0FBTWIsTUFBTSxHQUFHLFdBQWY7QUFDQSx5Q0FBWSw2QkFBNkJBLE1BQTdCLEdBQXNDLEdBQWxEO0FBQ0FLLGtDQUFNLENBQUMsV0FBRCxFQUFjTCxNQUFkLENBQU47QUFDQVMsbUNBQU8sQ0FBQ1QsTUFBRCxDQUFQO0FBQ0EsMkJBTFMsRUFLUCxJQUxPLENBQVY7QUFNQSx5QkFUUTtBQVVUYyw0QkFBSSxFQUFFLGNBQUNDLEdBQUQsRUFBUztBQUNkLHVDQUFZLGlDQUFaLEVBQStDQSxHQUEvQztBQUNBTCxnQ0FBTSxDQUFDSyxHQUFELENBQU47QUFDQSx5QkFiUSxFQUFWOztBQWVBO0FBQ0QsbUJBcEJZLENBSkMsaUhBQUYscUdBWEwsRUFyQm1COzs7QUEyRDVCQyxTQUFPLEVBQUMsRUEzRG9CLEVBQWYsQ0FBZCxDOzs7OztBQWdFZWhDLEsiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xyXG5pbXBvcnQgVnVleCBmcm9tICd2dWV4J1xyXG5WdWUudXNlKFZ1ZXgpXHJcblxyXG5jb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHtcclxuXHRzdGF0ZToge1xyXG5cdFx0dXNlckluZm86IHVuaS5nZXRTdG9yYWdlU3luYygndXNlckluZm8nKSxcclxuXHR9LFxyXG5cdG11dGF0aW9uczoge1xyXG5cdFx0c2V0VXNlckluZm8gKHN0YXRlLCB2YWwpIHtcclxuXHRcdFx0IHVuaS5zZXRTdG9yYWdlU3luYyhcInVzZXJJbmZvXCIsIHZhbCk7XHJcblx0XHRcdHN0YXRlLnVzZXJpbmZvID0gdmFsXHJcblx0XHR9LFxyXG5cdFx0XHRsb2dpbihzdGF0ZSwgcHJvdmlkZXIpIHtcclxuXHRcdFx0XHRzdGF0ZS5oYXNMb2dpbiA9IHRydWU7XHJcblx0XHRcdFx0c3RhdGUubG9naW5Qcm92aWRlciA9IHByb3ZpZGVyO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsb2dvdXQoc3RhdGUpIHtcclxuXHRcdFx0XHRzdGF0ZS5oYXNMb2dpbiA9IGZhbHNlXHJcblx0XHRcdFx0c3RhdGUub3BlbmlkID0gbnVsbFxyXG5cdFx0XHR9LFxyXG5cdFx0XHRzZXRPcGVuaWQoc3RhdGUsIG9wZW5pZCkge1xyXG5cdFx0XHRcdHN0YXRlLm9wZW5pZCA9IG9wZW5pZFxyXG5cdFx0XHR9LFxyXG5cdH0sXHJcblx0YWN0aW9uczoge1xyXG5cdFx0Ly8g55So5oi35L+h5oGvXHJcblx0XHRzZXRVc2VySW5mb09iaiAoY29udGV4dCwgdmFsKSB7XHJcblx0XHRcdGNvbnRleHQuY29tbWl0KCdzZXRVc2VySW5mbycsIHZhbClcclxuXHRcdH0sXHJcblx0XHRjbGVhclVzZXJJbmZvT2JqIChjb250ZXh0KSB7XHJcblx0XHRcdGNvbnRleHQuY29tbWl0KCdzZXRVc2VySW5mbycse1xyXG5cdFx0XHRcdFwiaW1hZ2VcIjpcIi9zdGF0aWMvaW1hZ2VzL2ljb24vZGVmTG9nby5wbmdcIlxyXG5cdFx0XHR9KVxyXG5cdFx0fSxcclxuXHRcdC8vIGxhenkgbG9hZGluZyBvcGVuaWRcclxuXHRcdGdldFVzZXJPcGVuSWQ6IGFzeW5jIGZ1bmN0aW9uICh7XHJcblx0XHRcdGNvbW1pdCxcclxuXHRcdFx0c3RhdGVcclxuXHRcdH0pIHtcclxuXHRcdFx0cmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuXHRcdFx0XHRpZiAoc3RhdGUub3BlbmlkKSB7XHJcblx0XHRcdFx0XHRyZXNvbHZlKHN0YXRlLm9wZW5pZClcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dW5pLmxvZ2luKHtcclxuXHRcdFx0XHRcdFx0c3VjY2VzczogKGRhdGEpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRjb21taXQoJ2xvZ2luJylcclxuXHRcdFx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgLy/mqKHmi5/lvILmraXor7fmsYLmnI3liqHlmajojrflj5Ygb3BlbmlkXHJcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBvcGVuaWQgPSAnMTIzNDU2Nzg5J1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ3VuaS5yZXF1ZXN0IG1vY2sgb3BlbmlkWycgKyBvcGVuaWQgKyAnXScpO1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29tbWl0KCdzZXRPcGVuaWQnLCBvcGVuaWQpXHJcblx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKG9wZW5pZClcclxuXHRcdFx0XHRcdFx0XHR9LCAxMDAwKVxyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRmYWlsOiAoZXJyKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ3VuaS5sb2dpbiDmjqXlj6PosIPnlKjlpLHotKXvvIzlsIbml6Dms5XmraPluLjkvb/nlKjlvIDmlL7mjqXlj6PnrYnmnI3liqEnLCBlcnIpXHJcblx0XHRcdFx0XHRcdFx0cmVqZWN0KGVycilcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSxcclxuXHRnZXR0ZXJzOntcclxuXHQgICBcclxuXHR9LFxyXG59KVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3RvcmVcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),

/***/ 99:
/*!********************************************************************!*\
  !*** D:/Documents/HBuilderProjects/uni-yzkk/common/html-parser.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /*\n                                                                                                      * HTML5 Parser By Sam Blowes\n                                                                                                      *\n                                                                                                      * Designed for HTML5 documents\n                                                                                                      *\n                                                                                                      * Original code by John Resig (ejohn.org)\n                                                                                                      * http://ejohn.org/blog/pure-javascript-html-parser/\n                                                                                                      * Original code by Erik Arvidsson, Mozilla Public License\n                                                                                                      * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n                                                                                                      *\n                                                                                                      * ----------------------------------------------------------------------------\n                                                                                                      * License\n                                                                                                      * ----------------------------------------------------------------------------\n                                                                                                      *\n                                                                                                      * This code is triple licensed using Apache Software License 2.0,\n                                                                                                      * Mozilla Public License or GNU Public License\n                                                                                                      *\n                                                                                                      * ////////////////////////////////////////////////////////////////////////////\n                                                                                                      *\n                                                                                                      * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n                                                                                                      * use this file except in compliance with the License.  You may obtain a copy\n                                                                                                      * of the License at http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                      *\n                                                                                                      * ////////////////////////////////////////////////////////////////////////////\n                                                                                                      *\n                                                                                                      * The contents of this file are subject to the Mozilla Public License\n                                                                                                      * Version 1.1 (the \"License\"); you may not use this file except in\n                                                                                                      * compliance with the License. You may obtain a copy of the License at\n                                                                                                      * http://www.mozilla.org/MPL/\n                                                                                                      *\n                                                                                                      * Software distributed under the License is distributed on an \"AS IS\"\n                                                                                                      * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n                                                                                                      * License for the specific language governing rights and limitations\n                                                                                                      * under the License.\n                                                                                                      *\n                                                                                                      * The Original Code is Simple HTML Parser.\n                                                                                                      *\n                                                                                                      * The Initial Developer of the Original Code is Erik Arvidsson.\n                                                                                                      * Portions created by Erik Arvidssson are Copyright (C) 2004. All Rights\n                                                                                                      * Reserved.\n                                                                                                      *\n                                                                                                      * ////////////////////////////////////////////////////////////////////////////\n                                                                                                      *\n                                                                                                      * This program is free software; you can redistribute it and/or\n                                                                                                      * modify it under the terms of the GNU General Public License\n                                                                                                      * as published by the Free Software Foundation; either version 2\n                                                                                                      * of the License, or (at your option) any later version.\n                                                                                                      *\n                                                                                                      * This program is distributed in the hope that it will be useful,\n                                                                                                      * but WITHOUT ANY WARRANTY; without even the implied warranty of\n                                                                                                      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n                                                                                                      * GNU General Public License for more details.\n                                                                                                      *\n                                                                                                      * You should have received a copy of the GNU General Public License\n                                                                                                      * along with this program; if not, write to the Free Software\n                                                                                                      * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n                                                                                                      *\n                                                                                                      * ----------------------------------------------------------------------------\n                                                                                                      * Usage\n                                                                                                      * ----------------------------------------------------------------------------\n                                                                                                      *\n                                                                                                      * // Use like so:\n                                                                                                      * HTMLParser(htmlString, {\n                                                                                                      *     start: function(tag, attrs, unary) {},\n                                                                                                      *     end: function(tag) {},\n                                                                                                      *     chars: function(text) {},\n                                                                                                      *     comment: function(text) {}\n                                                                                                      * });\n                                                                                                      *\n                                                                                                      * // or to get an XML string:\n                                                                                                      * HTMLtoXML(htmlString);\n                                                                                                      *\n                                                                                                      * // or to get an XML DOM Document\n                                                                                                      * HTMLtoDOM(htmlString);\n                                                                                                      *\n                                                                                                      * // or to inject into an existing document/DOM node\n                                                                                                      * HTMLtoDOM(htmlString, document);\n                                                                                                      * HTMLtoDOM(htmlString, document.body);\n                                                                                                      *\n                                                                                                      */\n// Regular Expressions for parsing tags and attributes\nvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/;\nvar endTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/;\nvar attr = /([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g; // Empty Elements - HTML 5\n\nvar empty = makeMap('area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr'); // Block Elements - HTML 5\n// fixed by xxx 将 ins 标签从块级名单中移除\n\nvar block = makeMap('a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video'); // Inline Elements - HTML 5\n\nvar inline = makeMap('abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var'); // Elements that you can, intentionally, leave open\n// (and which close themselves)\n\nvar closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr'); // Attributes that have their values filled in disabled=\"disabled\"\n\nvar fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected'); // Special Elements (can contain anything)\n\nvar special = makeMap('script,style');\nfunction HTMLParser(html, handler) {\n  var index;\n  var chars;\n  var match;\n  var stack = [];\n  var last = html;\n\n  stack.last = function () {\n    return this[this.length - 1];\n  };\n\n  while (html) {\n    chars = true; // Make sure we're not in a script or style element\n\n    if (!stack.last() || !special[stack.last()]) {\n      // Comment\n      if (html.indexOf('<!--') == 0) {\n        index = html.indexOf('-->');\n\n        if (index >= 0) {\n          if (handler.comment) {\n            handler.comment(html.substring(4, index));\n          }\n\n          html = html.substring(index + 3);\n          chars = false;\n        } // end tag\n\n      } else if (html.indexOf('</') == 0) {\n        match = html.match(endTag);\n\n        if (match) {\n          html = html.substring(match[0].length);\n          match[0].replace(endTag, parseEndTag);\n          chars = false;\n        } // start tag\n\n      } else if (html.indexOf('<') == 0) {\n        match = html.match(startTag);\n\n        if (match) {\n          html = html.substring(match[0].length);\n          match[0].replace(startTag, parseStartTag);\n          chars = false;\n        }\n      }\n\n      if (chars) {\n        index = html.indexOf('<');\n        var text = index < 0 ? html : html.substring(0, index);\n        html = index < 0 ? '' : html.substring(index);\n\n        if (handler.chars) {\n          handler.chars(text);\n        }\n      }\n    } else {\n      html = html.replace(new RegExp('([\\\\s\\\\S]*?)<\\/' + stack.last() + '[^>]*>'), function (all, text) {\n        text = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1$2');\n\n        if (handler.chars) {\n          handler.chars(text);\n        }\n\n        return '';\n      });\n      parseEndTag('', stack.last());\n    }\n\n    if (html == last) {\n      throw 'Parse Error: ' + html;\n    }\n\n    last = html;\n  } // Clean up any remaining tags\n\n\n  parseEndTag();\n\n  function parseStartTag(tag, tagName, rest, unary) {\n    tagName = tagName.toLowerCase();\n\n    if (block[tagName]) {\n      while (stack.last() && inline[stack.last()]) {\n        parseEndTag('', stack.last());\n      }\n    }\n\n    if (closeSelf[tagName] && stack.last() == tagName) {\n      parseEndTag('', tagName);\n    }\n\n    unary = empty[tagName] || !!unary;\n\n    if (!unary) {\n      stack.push(tagName);\n    }\n\n    if (handler.start) {\n      var attrs = [];\n      rest.replace(attr, function (match, name) {\n        var value = arguments[2] ? arguments[2] : arguments[3] ? arguments[3] : arguments[4] ? arguments[4] : fillAttrs[name] ? name : '';\n        attrs.push({\n          name: name,\n          value: value,\n          escaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') // \"\n        });\n\n      });\n\n      if (handler.start) {\n        handler.start(tagName, attrs, unary);\n      }\n    }\n  }\n\n  function parseEndTag(tag, tagName) {\n    // If no tag name is provided, clean shop\n    if (!tagName) {\n      var pos = 0;\n    } // Find the closest opened tag of the same type\n    else {\n        for (var pos = stack.length - 1; pos >= 0; pos--) {\n          if (stack[pos] == tagName) {\n            break;\n          }\n        }\n      }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) {\n          handler.end(stack[i]);\n        }\n      } // Remove the open elements from the stack\n\n\n      stack.length = pos;\n    }\n  }\n}\n\nfunction makeMap(str) {\n  var obj = {};\n  var items = str.split(',');\n\n  for (var i = 0; i < items.length; i++) {\n    obj[items[i]] = true;\n  }\n\n  return obj;\n}\n\nfunction removeDOCTYPE(html) {\n  return html.replace(/<\\?xml.*\\?>\\n/, '').replace(/<!doctype.*>\\n/, '').replace(/<!DOCTYPE.*>\\n/, '');\n}\n\nfunction parseAttrs(attrs) {\n  return attrs.reduce(function (pre, attr) {\n    var value = attr.value;\n    var name = attr.name;\n\n    if (pre[name]) {\n      pre[name] = pre[name] + \" \" + value;\n    } else {\n      pre[name] = value;\n    }\n\n    return pre;\n  }, {});\n}\n\nfunction parseHtml(html) {\n  html = removeDOCTYPE(html);\n  var stacks = [];\n  var results = {\n    node: 'root',\n    children: [] };\n\n  HTMLParser(html, {\n    start: function start(tag, attrs, unary) {\n      var node = {\n        name: tag };\n\n\n      if (attrs.length !== 0) {\n        node.attrs = parseAttrs(attrs);\n      }\n\n      if (unary) {\n        var parent = stacks[0] || results;\n\n        if (!parent.children) {\n          parent.children = [];\n        }\n\n        parent.children.push(node);\n      } else {\n        stacks.unshift(node);\n      }\n    },\n    end: function end(tag) {\n      var node = stacks.shift();\n      if (node.name !== tag) __f__(\"error\", 'invalid state: mismatch end tag', \" at common\\\\html-parser.js:303\");\n\n      if (stacks.length === 0) {\n        results.children.push(node);\n      } else {\n        var parent = stacks[0];\n\n        if (!parent.children) {\n          parent.children = [];\n        }\n\n        parent.children.push(node);\n      }\n    },\n    chars: function chars(text) {\n      var node = {\n        type: 'text',\n        text: text };\n\n\n      if (stacks.length === 0) {\n        results.children.push(node);\n      } else {\n        var parent = stacks[0];\n\n        if (!parent.children) {\n          parent.children = [];\n        }\n\n        parent.children.push(node);\n      }\n    },\n    comment: function comment(text) {\n      var node = {\n        node: 'comment',\n        text: text };\n\n      var parent = stacks[0];\n\n      if (!parent.children) {\n        parent.children = [];\n      }\n\n      parent.children.push(node);\n    } });\n\n  return results.children;\n}var _default =\n\nparseHtml;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 10)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///99\n");

/***/ })

}]);